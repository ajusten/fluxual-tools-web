{"version":3,"sources":["./node_modules/@babel/runtime/helpers/arrayWithHoles.js","./node_modules/@babel/runtime/helpers/assertThisInitialized.js","./node_modules/@babel/runtime/helpers/classCallCheck.js","./node_modules/@babel/runtime/helpers/construct.js","./node_modules/@babel/runtime/helpers/createClass.js","./node_modules/@babel/runtime/helpers/defineProperty.js","./node_modules/@babel/runtime/helpers/get.js","./node_modules/@babel/runtime/helpers/getPrototypeOf.js","./node_modules/@babel/runtime/helpers/inherits.js","./node_modules/@babel/runtime/helpers/interopRequireDefault.js","./node_modules/@babel/runtime/helpers/interopRequireWildcard.js","./node_modules/@babel/runtime/helpers/isNativeFunction.js","./node_modules/@babel/runtime/helpers/iterableToArray.js","./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","./node_modules/@babel/runtime/helpers/nonIterableRest.js","./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","./node_modules/@babel/runtime/helpers/setPrototypeOf.js","./node_modules/@babel/runtime/helpers/slicedToArray.js","./node_modules/@babel/runtime/helpers/superPropBase.js","./node_modules/@babel/runtime/helpers/toArray.js","./node_modules/@babel/runtime/helpers/typeof.js","./node_modules/@babel/runtime/helpers/wrapNativeSuper.js","./node_modules/yaml/browser/dist/Anchors.js","./node_modules/yaml/browser/dist/Document.js","./node_modules/yaml/browser/dist/addComment.js","./node_modules/yaml/browser/dist/constants.js","./node_modules/yaml/browser/dist/cst/Alias.js","./node_modules/yaml/browser/dist/cst/BlankLine.js","./node_modules/yaml/browser/dist/cst/BlockValue.js","./node_modules/yaml/browser/dist/cst/Collection.js","./node_modules/yaml/browser/dist/cst/CollectionItem.js","./node_modules/yaml/browser/dist/cst/Comment.js","./node_modules/yaml/browser/dist/cst/Directive.js","./node_modules/yaml/browser/dist/cst/Document.js","./node_modules/yaml/browser/dist/cst/FlowCollection.js","./node_modules/yaml/browser/dist/cst/Node.js","./node_modules/yaml/browser/dist/cst/ParseContext.js","./node_modules/yaml/browser/dist/cst/PlainValue.js","./node_modules/yaml/browser/dist/cst/QuoteDouble.js","./node_modules/yaml/browser/dist/cst/QuoteSingle.js","./node_modules/yaml/browser/dist/cst/Range.js","./node_modules/yaml/browser/dist/cst/parse.js","./node_modules/yaml/browser/dist/cst/source-utils.js","./node_modules/yaml/browser/dist/errors.js","./node_modules/yaml/browser/dist/foldFlowLines.js","./node_modules/yaml/browser/dist/index.js","./node_modules/yaml/browser/dist/listTagNames.js","./node_modules/yaml/browser/dist/schema/Alias.js","./node_modules/yaml/browser/dist/schema/Collection.js","./node_modules/yaml/browser/dist/schema/Map.js","./node_modules/yaml/browser/dist/schema/Merge.js","./node_modules/yaml/browser/dist/schema/Node.js","./node_modules/yaml/browser/dist/schema/Pair.js","./node_modules/yaml/browser/dist/schema/Scalar.js","./node_modules/yaml/browser/dist/schema/Seq.js","./node_modules/yaml/browser/dist/schema/index.js","./node_modules/yaml/browser/dist/schema/parseMap.js","./node_modules/yaml/browser/dist/schema/parseSeq.js","./node_modules/yaml/browser/dist/schema/parseUtils.js","./node_modules/yaml/browser/dist/stringify.js","./node_modules/yaml/browser/dist/tags/core.js","./node_modules/yaml/browser/dist/tags/failsafe/index.js","./node_modules/yaml/browser/dist/tags/failsafe/map.js","./node_modules/yaml/browser/dist/tags/failsafe/seq.js","./node_modules/yaml/browser/dist/tags/failsafe/string.js","./node_modules/yaml/browser/dist/tags/index.js","./node_modules/yaml/browser/dist/tags/json.js","./node_modules/yaml/browser/dist/tags/options.js","./node_modules/yaml/browser/dist/tags/yaml-1.1/binary.js","./node_modules/yaml/browser/dist/tags/yaml-1.1/index.js","./node_modules/yaml/browser/dist/tags/yaml-1.1/omap.js","./node_modules/yaml/browser/dist/tags/yaml-1.1/pairs.js","./node_modules/yaml/browser/dist/tags/yaml-1.1/set.js","./node_modules/yaml/browser/dist/tags/yaml-1.1/timestamp.js","./node_modules/yaml/browser/dist/toJSON.js","./node_modules/yaml/browser/dist/warnings.js","./node_modules/yaml/browser/index.js","./src/app/tools/json-to-yaml/index.ts","./src/app/tools/json-to-yaml/readme.md"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACJA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,wC;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACNA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA,2EAA2E;AAC3E;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,4B;;;;;;;;;;;AChCA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,8B;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;;AAEA;AACA;;AAEA,iC;;;;;;;;;;;ACfA,oBAAoB,mBAAO,CAAC,+EAAiB;;AAE7C;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sB;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA,iC;;;;;;;;;;;ACPA,qBAAqB,mBAAO,CAAC,iFAAkB;;AAE/C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA,2B;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;;AAEA,wC;;;;;;;;;;;ACNA,cAAc,mBAAO,CAAC,0EAAmB;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,yC;;;;;;;;;;;ACtDA;AACA;AACA;;AAEA,mC;;;;;;;;;;;ACJA;AA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BAAO,CAAC,gGAAoC;;AAEvF,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,yCAAyC,mBAAO,CAAC,oEAAc;;AAE/D,sCAAsC,mBAAO,CAAC,8DAAW;;AAEzD,iBAAiB,mBAAO,CAAC,kEAAa;;AAEtC,cAAc,mBAAO,CAAC,4DAAU;;AAEhC,2CAA2C,mBAAO,CAAC,wEAAgB;;AAEnE,qCAAqC,mBAAO,CAAC,kEAAU;;AAEvD,oCAAoC,mBAAO,CAAC,wEAAgB;;AAE5D,0CAA0C,mBAAO,CAAC,kFAAqB;;AAEvE,mCAAmC,mBAAO,CAAC,sEAAe;;AAE1D,qCAAqC,mBAAO,CAAC,0EAAiB;;AAE9D,sCAAsC,mBAAO,CAAC,4DAAU;;AAExD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,oEAAoE;AACpE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,4CAA4C;AAC5C;AACA,OAAO;AACP;AACA;;AAEA;AACA,gCAAgC;AAChC;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,gEAAgE;AACrI;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,yEAAyE,mEAAmE;AAC5I;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,WAAW;;AAEX;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW;AACX;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,+DAA+D,mEAAmE;AAClI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAyC;AACzC;;AAEA,4DAA4D;AAC5D;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;;;AAGT;;AAEA;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT,uCAAuC;AACvC;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA,WAAW;AACX;;AAEA;AACA,kEAAkE;AAClE;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,cAAc;AACd,WAAW;AACX,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,uDAAuD;AACvD;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uGAAuG;;AAEvG;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,CAAC,E;;;;;;;;;;;;AC10BY;;AAEb;AACA;AACA,CAAC;AACD;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,C;;;;;;;;;;;;AChBa;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oB;;;;;;;;;;;;ACjCa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,wB;;;;;;;;;;;;AC1Da;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,mDAAmD;AACnD;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,4B;;;;;;;;;;;;ACpEa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,mCAAmC,mBAAO,CAAC,gFAA4B;;AAEvE,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,aAAa;AAC7C;AACA;;AAEA,mEAAmE;;;AAGnE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,kDAAkD;AAClD;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,SAAS;AAClC,uBAAuB,QAAQ;AAC/B;AACA;AACA;;AAEA;;AAEA;AACA,wCAAwC;AACxC,SAAS;AACT;;AAEA;AACA;;AAEA;AACA,wCAAwC;AACxC,8BAA8B;;AAE9B;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,6B;;;;;;;;;;;;AC5Qa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;AACA;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,mCAAmC,mBAAO,CAAC,gFAA4B;;AAEvE,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,wCAAwC,mBAAO,CAAC,sEAAa;;AAE7D,6CAA6C,mBAAO,CAAC,gFAAkB;;AAEvE,sCAAsC,mBAAO,CAAC,kEAAW;;AAEzD,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,uBAAuB,QAAQ;AAC/B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,wDAAwD;AAC7D;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;;AAEA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;;AAEA;;AAEA,oCAAoC;AACpC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;;AAEA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB;AACxB,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,iCAAiC;;AAEjC;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;AACA;AACA;AACA,yCAAyC,aAAa;AACtD;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,6B;;;;;;;;;;;;ACxSa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,mCAAmC,mBAAO,CAAC,gFAA4B;;AAEvE,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,iBAAiB,mBAAO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E7D,kBAAkB,mBAAO,CAAC,wEAAc;;AAExC,sCAAsC,mBAAO,CAAC,kEAAW;;AAEzD,wCAAwC,mBAAO,CAAC,sEAAa;;AAE7D,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,wEAAwE;;AAExE;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,2B;;;;;;;;;;;;ACjTa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,mCAAmC,mBAAO,CAAC,gFAA4B;;AAEvE,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,wCAAwC,mBAAO,CAAC,sEAAa;;AAE7D,sCAAsC,mBAAO,CAAC,kEAAW;;AAEzD,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,KAAK;;AAEjC;AACA;AACA;AACA,OAAO;;AAEP;;AAEA;;AAEA,gDAAgD;AAChD;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;;AAEA;;AAEA;AACA;;AAEA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;;AAEA;AACA,2CAA2C;AAC3C;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,iC;;;;;;;;;;;;AC9Oa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,6CAA6C,mBAAO,CAAC,oGAAsC;;AAE3F,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,mBAAmB,mBAAO,CAAC,4EAAgB;;AAE3C,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,sFAAsF,KAAK;;AAE3F;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,iBAAiB;AACjB;;AAEA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,uBAAuB;AAC5C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA,uBAAuB,uBAAuB;AAC9C;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,qBAAqB,uBAAuB;AAC5C;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,SAAS;AAClC;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,uB;;;;;;;;;;;;ACvZa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD,yCAAyC,mBAAO,CAAC,wEAAc;;AAE/D,yCAAyC,mBAAO,CAAC,wEAAc;;AAE/D,6CAA6C,mBAAO,CAAC,gFAAkB;;AAEvE,6CAA6C,mBAAO,CAAC,gFAAkB;;AAEvE,mCAAmC,mBAAO,CAAC,4DAAQ;;AAEnD,yCAAyC,mBAAO,CAAC,wEAAc;;AAE/D,0CAA0C,mBAAO,CAAC,0EAAe;;AAEjE,0CAA0C,mBAAO,CAAC,0EAAe;;AAEjE,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,KAAK;AAChB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,eAAe;AACf;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA,qFAAqF;AACrF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;;AAE/D;AACA;AACA;AACA;AACA,KAAK;AACL,aAAa;;AAEb,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA,SAAS;AACT;;AAEA,gHAAgH,IAAI;AACpH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;;;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,MAAM;AACvB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,+B;;;;;;;;;;;;AC/Ra;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gCAAgC,aAAa;AAC7C;;AAEA;;AAEA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA,yBAAyB,SAAS;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,6B;;;;;;;;;;;;ACtLa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yGAAyG;AACzG,6BAA6B;;AAE7B;;AAEA,6BAA6B,aAAa;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,8B;;;;;;;;;;;;AChQa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,oCAAoC,mBAAO,CAAC,4DAAQ;;AAEpD,oCAAoC,mBAAO,CAAC,8DAAS;;AAErD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,eAAe,aAAa;AAC5B,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA,iBAAiB,UAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,6BAA6B,aAAa;AAC1C;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,8B;;;;;;;;;;;;ACnIa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,iBAAiB,OAAO;AACxB;;AAEA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,iCAAiC;AACjC;;AAEA;AACA;;AAEA;AACA;AACA,gCAAgC;AAChC;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,wB;;;;;;;;;;;;AC5Ea;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,uCAAuC,mBAAO,CAAC,oEAAY;;AAE3D,2CAA2C,mBAAO,CAAC,4EAAgB;;AAEnE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,mBAAmB,eAAe;AAClC;AACA;;AAEA;;AAEA,oBAAoB,uBAAuB;AAC3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AC1Da;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,YAAY;AACvC;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,aAAa;AACb;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,iBAAiB,uBAAuB;AACxC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,2BAA2B;AACtC,aAAa;AACb;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA,6BAA6B,4BAA4B;;AAEzD;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE;AAChE;AACA;AACA,WAAW,OAAO;AAClB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,4BAA4B;AACvC,WAAW,OAAO;AAClB,aAAa;AACb;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,C;;;;;;;;;;;;AClLa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,+CAA+C,mBAAO,CAAC,wGAAwC;;AAE/F,mCAAmC,mBAAO,CAAC,gEAAY;;AAEvD,mBAAmB,mBAAO,CAAC,gFAAoB;;AAE/C,oCAAoC,mBAAO,CAAC,kEAAa;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED,kC;;;;;;;;;;;;ACnJa;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,uBAAuB;AACvB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,cAAc,mBAAmB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,WAAW;;;AAGX;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,mBAAmB;AACrC;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;ACpJa;;AAEb,6BAA6B,mBAAO,CAAC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EA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA,mEAAmE,gEAAgE;AACnI;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;;AAEA;AACA,oEAAoE,mEAAmE;AACvI;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA,+E;;;;;;;;;;;;ACrRa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;AACA;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,mCAAmC,mBAAO,CAAC,gFAA4B;;AAEvE,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,0CAA0C,mBAAO,CAAC,2EAAc;;AAEhE,mCAAmC,mBAAO,CAAC,+DAAQ;;AAEnD,qCAAqC,mBAAO,CAAC,mEAAU;;AAEvD;AACA;AACA;AACA;AACA;;AAEA;AACA,yDAAyD,gEAAgE;AACzH;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gDA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CA,eAAe;AACf;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;;AAEA;AACA;AACA,OAAO;AACP,4DAA4D;AAC5D;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,uB;;;;;;;;;;;;AC5La;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,sCAAsC,mBAAO,CAAC,6DAAW;;AAEzD,oCAAoC,mBAAO,CAAC,+DAAQ;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED,yB;;;;;;;;;;;;ACpDa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,yDAAyD,mBAAO,CAAC,4HAAkD;;AAEnH,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,mCAAmC,mBAAO,CAAC,gFAA4B;;AAEvE,wCAAwC,mBAAO,CAAC,0FAAiC;;AAEjF,sCAAsC,mBAAO,CAAC,6DAAW;;AAEzD,0CAA0C,mBAAO,CAAC,2EAAc;;AAEhE,qCAAqC,mBAAO,CAAC,mEAAU;;AAEvD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,gEAAgE;AAClI;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA,GAAG;AACH;AACA,CAAC;;AAED,0B;;;;;;;;;;;;AClIa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,sCAAsC,mBAAO,CAAC,sFAA+B;;AAE7E,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,2CAA2C,mBAAO,CAAC,gGAAoC;;AAEvF,8CAA8C,mBAAO,CAAC,sGAAuC;;AAE7F,gBAAgB,mBAAO,CAAC,iEAAa;;AAErC,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,YAAY,mBAAO,CAAC,+DAAS;;AAE7B,cAAc,mBAAO,CAAC,yFAAyB;;AAE/C,oCAAoC,mBAAO,CAAC,iEAAS;;AAErD,yCAAyC,mBAAO,CAAC,2EAAc;;AAE/D,mCAAmC,mBAAO,CAAC,+DAAQ;;AAEnD,mCAAmC,mBAAO,CAAC,+DAAQ;;AAEnD,qCAAqC,mBAAO,CAAC,mEAAU;;AAEvD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;;AAEzD;AACA;AACA;AACA,OAAO;AACP,6DAA6D;AAC7D;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,kEAAkE,gEAAgE;AAClI;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA,mBAAmB,sBAAsB;AACzC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,WAAW;;AAEX,mEAAmE;AACnE;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;;AAER;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,SAAS;;AAET;AACA,+CAA+C,wBAAwB;;AAEvE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;;AAEA;;AAEA;AACA,yBAAyB;;AAEzB;AACA;AACA,SAAS;;AAET;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA,KAAK;;AAEL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,gFAAgF,mEAAmE;AACnJ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;;AC5YY;;AAEb,8BAA8B,mBAAO,CAAC,sHAA+C;;AAErF,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,yCAAyC,mBAAO,CAAC,6EAAmB;;AAEpE,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,kCAAkC,mBAAO,CAAC,6DAAO;;AAEjD,qCAAqC,mBAAO,CAAC,iEAAS;;AAEtD,mCAAmC,mBAAO,CAAC,+DAAQ;;AAEnD,kBAAkB,mBAAO,CAAC,2EAAc;;AAExC,oCAAoC,mBAAO,CAAC,iEAAS;;AAErD,yCAAyC,mBAAO,CAAC,2EAAc;;AAE/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAO;AACP;AACA,KAAK;AACL,yBAAyB,kBAAkB;AAC3C;;AAEA;AACA,8CAA8C;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,yBAAyB,WAAW;AACpC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kCAAkC;AAClC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;;AAEf,iBAAiB,sBAAsB;AACvC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,uDAAuD;AACvD,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC3Ua;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,mCAAmC,mBAAO,CAAC,+DAAQ;;AAEnD,kBAAkB,mBAAO,CAAC,2EAAc;;AAExC,kCAAkC,mBAAO,CAAC,6DAAO;;AAEjD,yCAAyC,mBAAO,CAAC,2EAAc;;AAE/D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,SAAS;AACT;AACA;;AAEA;AACA,4BAA4B;;AAE5B;AACA,OAAO;AACP;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;ACtLa;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA,cAAc,mBAAO,CAAC,6DAAW;;AAEjC,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC;AACA;;AAEA;AACA;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,oCAAoC,QAAQ;AAC5C;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,6BAA6B,QAAQ;AACrC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,gEAAgE;AAC5H;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,uEAAuE;AACvE;AACA,OAAO;AACP;;AAEA;AACA;AACA,SAAS;AACT,uEAAuE;AACvE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;;AC1Ha;;AAEb,8BAA8B,mBAAO,CAAC,sHAA+C;;AAErF;AACA;AACA,CAAC;AACD;AACA;;AAEA,kBAAkB,mBAAO,CAAC,oEAAc;;AAExC,iBAAiB,mBAAO,CAAC,kEAAa;;AAEtC,6CAA6C,mBAAO,CAAC,0EAAiB;;AAEtE,eAAe,mBAAO,CAAC,wEAAgB;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,4BAA4B,YAAY;AACxC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,+BAA+B,IAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,4EAA4E;AAC5E;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA;AACA;;AAEA,wBAAwB;;AAExB;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,sCAAsC;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,oBAAoB;AACpB,KAAK;AACL,oBAAoB;;AAEpB;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8BAA8B,oCAAoC;AAClE;AACA;;AAEA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,yDAAyD;AACzD;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,2BAA2B;AAC3B;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,yBAAyB;AACzB;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AChVa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,qCAAqC,mBAAO,CAAC,2EAAkB;;AAE/D,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC,uCAAuC,mBAAO,CAAC,2EAAY;;AAE3D,eAAe,mBAAO,CAAC,mEAAW;;AAElC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;A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AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,2B;;;;;;;;;;;;ACtGa;;AAEb;AACA;AACA,CAAC;AACD;;AAEA,iBAAiB,mBAAO,CAAC,mEAAc;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AClCa;;AAEb;AACA;AACA,CAAC;AACD;;AAEA,iBAAiB,mBAAO,CAAC,sEAAiB;;AAE1C,cAAc,mBAAO,CAAC,gEAAc;;AAEpC,iBAAiB,mBAAO,CAAC,sEAAiB;;AAE1C,cAAc,mBAAO,CAAC,oFAAoB;;AAE1C,eAAe,mBAAO,CAAC,oEAAY;;AAEnC;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,qBAAqB;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;;AAEA,qBAAqB,iBAAiB;AACtC;AACA;;AAEA;AACA,KAAK;AACL,kHAAkH;AAClH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;;AAEA,qBAAqB,kBAAkB;AACvC;AACA;;AAEA;AACA,KAAK;AACL,6EAA6E;AAC7E;;AAEA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA,6BAA6B,QAAQ;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2B;;;;;;;;;;;;ACjGa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AAEnF;AACA;AACA,CAAC;AACD;;AAEA,qCAAqC,mBAAO,CAAC,8EAAqB;;AAElE,iBAAiB,mBAAO,CAAC,sEAAiB;;AAE1C,uCAAuC,mBAAO,CAAC,4EAAa;;AAE5D,eAAe,mBAAO,CAAC,oEAAY;;AAEnC,qCAAqC,mBAAO,CAAC,0EAAU;;AAEvD,mCAAmC,mBAAO,CAAC,sEAAQ;;AAEnD,oCAAoC,mBAAO,CAAC,wEAAS;;AAErD,kCAAkC,mBAAO,CAAC,oEAAO;;AAEjD,iBAAiB,mBAAO,CAAC,gFAAa;;AAEtC;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA,CAAC;;AAED,2B;;;;;;;;;;;;AChLa;;AAEb,6BAA6B,mBAAO,CAAC,oHAA8C;;AA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ACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,yKAAyK;AACzK;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,4DAA4D,gEAAgE;AAC5H;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,2B;;;;;;;;;;;;AC3Ia;;AAEb;AACA;AACA,CAAC;AACD;;AAEA,iBAAiB,mBAAO,CAAC,sEAAiB;;AAE1C;AACA;AACA;AACA,GAAG;AACH;AACA,EAAE;;;AAGF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,2BAA2B;;AAE3B;AACA,qBAAqB;AACrB,GAAG;AACH;AACA,8BAA8B;;AAE9B;AACA;AACA,2BAA2B;AAC3B;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,SAAS,IAAI,SAAS,IAAI;AAC5D;AACA,UAAU,IAAI,SAAS,IAAI,SAAS,IAAI;AACxC,yCAAyC,EAAE;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,8B;;;;;;;;;;;;AC1Ga;;AAEb;AACA;AACA,CAAC;AACD;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,C;;;;;;;;;;;;AC1Ba;;AAEb;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qCAAqC;AACrC;;;AAGA,8CAA8C;AAC9C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACvCA,iBAAiB,mBAAO,CAAC,yDAAQ;;;;;;;;;;;;;;;;;;;;;;;;;ACA6D;AACtE;AACiB;AACW;AACL;AACT;AAE/B,MAAM,mBAAoB,SAAQ,2GAAsB;IAA/D;;QACI,OAAE,GAAG,cAAc,CAAC;QACpB,WAAM,GAAG,SAAS,CAAC;QACnB,WAAM,GAAG;YACL,IAAI,EAAE,QAAQ;YACd,UAAU,EAAE;gBACR,KAAK,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,iBAAiB,EAAE;aAC3E;YACD,QAAQ,EAAE,CAAC,OAAO,CAAC;SACtB,CAAC;QAOF,kBAAa,GAAG,kDAAc,CAAC;IAEnC,CAAC;IAPG,WAAW,CAAC,SAAc;QACtB,MAAM,MAAM,GAAG,2CAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAC3C,OAAO,2CAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;CAIJ;AAaD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;CAAI;AAApB,gBAAgB;IAX5B,8DAAQ,CAAC;QACN,YAAY,EAAE;YACV,mBAAmB;SACtB;QACD,OAAO,EAAE;YACL,4DAAU;YACV,4DAAY,CAAC,QAAQ,CAAC;gBAClB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,mBAAmB,EAAE;aAC/C,CAAC;SACL;KACF,CAAC;GACS,gBAAgB,CAAI;AAAJ;;;;;;;;;;;;;ACtC7B;AAAe,wG","file":"tools-json-to-yaml-es2015.js","sourcesContent":["function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","var superPropBase = require(\"./superPropBase\");\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nmodule.exports = _get;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","var _typeof = require(\"../helpers/typeof\");\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      \"default\": obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj[\"default\"] = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nmodule.exports = _interopRequireWildcard;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var getPrototypeOf = require(\"./getPrototypeOf\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf\");\n\nvar isNativeFunction = require(\"./isNativeFunction\");\n\nvar construct = require(\"./construct\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _Alias = _interopRequireDefault(require(\"./schema/Alias\"));\n\nvar _Map = _interopRequireDefault(require(\"./schema/Map\"));\n\nvar _Merge = _interopRequireDefault(require(\"./schema/Merge\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./schema/Scalar\"));\n\nvar _Seq = _interopRequireDefault(require(\"./schema/Seq\"));\n\nvar Anchors =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Anchors, null, [{\n    key: \"validAnchorNode\",\n    value: function validAnchorNode(node) {\n      return node instanceof _Scalar.default || node instanceof _Seq.default || node instanceof _Map.default;\n    }\n  }]);\n\n  function Anchors(prefix) {\n    (0, _classCallCheck2.default)(this, Anchors);\n    (0, _defineProperty2.default)(this, \"map\", {});\n    this.prefix = prefix;\n  }\n\n  (0, _createClass2.default)(Anchors, [{\n    key: \"createAlias\",\n    value: function createAlias(node, name) {\n      this.setAnchor(node, name);\n      return new _Alias.default(node);\n    }\n  }, {\n    key: \"createMergePair\",\n    value: function createMergePair() {\n      var _this = this;\n\n      var merge = new _Merge.default();\n\n      for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n        sources[_key] = arguments[_key];\n      }\n\n      merge.value.items = sources.map(function (s) {\n        if (s instanceof _Alias.default) {\n          if (s.source instanceof _Map.default) return s;\n        } else if (s instanceof _Map.default) {\n          return _this.createAlias(s);\n        }\n\n        throw new Error('Merge sources must be Map nodes or their Aliases');\n      });\n      return merge;\n    }\n  }, {\n    key: \"getName\",\n    value: function getName(node) {\n      var map = this.map;\n      return Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n    }\n  }, {\n    key: \"getNode\",\n    value: function getNode(name) {\n      return this.map[name];\n    }\n  }, {\n    key: \"newName\",\n    value: function newName(prefix) {\n      if (!prefix) prefix = this.prefix;\n      var names = Object.keys(this.map);\n\n      for (var i = 1; true; ++i) {\n        var name = \"\".concat(prefix).concat(i);\n        if (!names.includes(name)) return name;\n      }\n    } // During parsing, map & aliases contain CST nodes\n\n  }, {\n    key: \"resolveNodes\",\n    value: function resolveNodes() {\n      var map = this.map,\n          _cstAliases = this._cstAliases;\n      Object.keys(map).forEach(function (a) {\n        map[a] = map[a].resolved;\n      });\n\n      _cstAliases.forEach(function (a) {\n        a.source = a.source.resolved;\n      });\n\n      delete this._cstAliases;\n    }\n  }, {\n    key: \"setAnchor\",\n    value: function setAnchor(node, name) {\n      if (node != null && !Anchors.validAnchorNode(node)) {\n        throw new Error('Anchors may only be set for Scalar, Seq and Map nodes');\n      }\n\n      if (name && /[\\x00-\\x19\\s,[\\]{}]/.test(name)) {\n        throw new Error('Anchor names must not contain whitespace or control characters');\n      }\n\n      var map = this.map;\n      var prev = node && Object.keys(map).find(function (a) {\n        return map[a] === node;\n      });\n\n      if (prev) {\n        if (!name) {\n          return prev;\n        } else if (prev !== name) {\n          delete map[prev];\n          map[name] = node;\n        }\n      } else {\n        if (!name) {\n          if (!node) return null;\n          name = this.newName();\n        }\n\n        map[name] = node;\n      }\n\n      return name;\n    }\n  }]);\n  return Anchors;\n}();\n\nexports.default = Anchors;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _addComment = _interopRequireDefault(require(\"./addComment\"));\n\nvar _Anchors = _interopRequireDefault(require(\"./Anchors\"));\n\nvar _constants = require(\"./constants\");\n\nvar _errors = require(\"./errors\");\n\nvar _listTagNames = _interopRequireDefault(require(\"./listTagNames\"));\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _Alias = _interopRequireDefault(require(\"./schema/Alias\"));\n\nvar _Collection = _interopRequireWildcard(require(\"./schema/Collection\"));\n\nvar _Node = _interopRequireDefault(require(\"./schema/Node\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./schema/Scalar\"));\n\nvar _toJSON2 = _interopRequireDefault(require(\"./toJSON\"));\n\nvar isCollectionItem = function isCollectionItem(node) {\n  return node && [_constants.Type.MAP_KEY, _constants.Type.MAP_VALUE, _constants.Type.SEQ_ITEM].includes(node.type);\n};\n\nvar Document =\n/*#__PURE__*/\nfunction () {\n  function Document(options) {\n    (0, _classCallCheck2.default)(this, Document);\n    this.anchors = new _Anchors.default(options.anchorPrefix);\n    this.commentBefore = null;\n    this.comment = null;\n    this.contents = null;\n    this.directivesEndMarker = null;\n    this.errors = [];\n    this.options = options;\n    this.schema = null;\n    this.tagPrefixes = [];\n    this.version = null;\n    this.warnings = [];\n  }\n\n  (0, _createClass2.default)(Document, [{\n    key: \"assertCollectionContents\",\n    value: function assertCollectionContents() {\n      if (this.contents instanceof _Collection.default) return true;\n      throw new Error('Expected a YAML collection as document contents');\n    }\n  }, {\n    key: \"add\",\n    value: function add(value) {\n      this.assertCollectionContents();\n      return this.contents.add(value);\n    }\n  }, {\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      this.assertCollectionContents();\n      this.contents.addIn(path, value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      this.assertCollectionContents();\n      return this.contents.delete(key);\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(path) {\n      if ((0, _Collection.isEmptyPath)(path)) {\n        if (this.contents == null) return false;\n        this.contents = null;\n        return true;\n      }\n\n      this.assertCollectionContents();\n      return this.contents.deleteIn(path);\n    }\n  }, {\n    key: \"getDefaults\",\n    value: function getDefaults() {\n      return Document.defaults[this.version] || Document.defaults[this.options.version] || {};\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      return this.contents instanceof _Collection.default ? this.contents.get(key, keepScalar) : undefined;\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(path, keepScalar) {\n      if ((0, _Collection.isEmptyPath)(path)) return !keepScalar && this.contents instanceof _Scalar.default ? this.contents.value : this.contents;\n      return this.contents instanceof _Collection.default ? this.contents.getIn(path, keepScalar) : undefined;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this.contents instanceof _Collection.default ? this.contents.has(key) : false;\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(path) {\n      if ((0, _Collection.isEmptyPath)(path)) return this.contents !== undefined;\n      return this.contents instanceof _Collection.default ? this.contents.hasIn(path) : false;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      this.assertCollectionContents();\n      this.contents.set(key, value);\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(path, value) {\n      if ((0, _Collection.isEmptyPath)(path)) this.contents = value;else {\n        this.assertCollectionContents();\n        this.contents.setIn(path, value);\n      }\n    }\n  }, {\n    key: \"setSchema\",\n    value: function setSchema(id, customTags) {\n      if (!id && !customTags && this.schema) return;\n      if (typeof id === 'number') id = id.toFixed(1);\n\n      if (id === '1.0' || id === '1.1' || id === '1.2') {\n        if (this.version) this.version = id;else this.options.version = id;\n        delete this.options.schema;\n      } else if (id && typeof id === 'string') {\n        this.options.schema = id;\n      }\n\n      if (Array.isArray(customTags)) this.options.customTags = customTags;\n      var opt = Object.assign({}, this.getDefaults(), this.options);\n      this.schema = new _schema.default(opt);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(node, prevDoc) {\n      if (this.options.keepCstNodes) this.cstNode = node;\n      if (this.options.keepNodeTypes) this.type = 'DOCUMENT';\n      var _node$directives = node.directives,\n          directives = _node$directives === void 0 ? [] : _node$directives,\n          _node$contents = node.contents,\n          contents = _node$contents === void 0 ? [] : _node$contents,\n          directivesEndMarker = node.directivesEndMarker,\n          error = node.error,\n          valueRange = node.valueRange;\n\n      if (error) {\n        if (!error.source) error.source = this;\n        this.errors.push(error);\n      }\n\n      this.parseDirectives(directives, prevDoc);\n      if (directivesEndMarker) this.directivesEndMarker = true;\n      this.range = valueRange ? [valueRange.start, valueRange.end] : null;\n      this.setSchema();\n      this.anchors._cstAliases = [];\n      this.parseContents(contents);\n      this.anchors.resolveNodes();\n\n      if (this.options.prettyErrors) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = this.errors[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _error = _step.value;\n            if (_error instanceof _errors.YAMLError) _error.makePretty();\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = this.warnings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var warn = _step2.value;\n            if (warn instanceof _errors.YAMLError) warn.makePretty();\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      return this;\n    }\n  }, {\n    key: \"parseDirectives\",\n    value: function parseDirectives(directives, prevDoc) {\n      var _this = this;\n\n      var directiveComments = [];\n      var hasDirectives = false;\n      directives.forEach(function (directive) {\n        var comment = directive.comment,\n            name = directive.name;\n\n        switch (name) {\n          case 'TAG':\n            _this.resolveTagDirective(directive);\n\n            hasDirectives = true;\n            break;\n\n          case 'YAML':\n          case 'YAML:1.0':\n            _this.resolveYamlDirective(directive);\n\n            hasDirectives = true;\n            break;\n\n          default:\n            if (name) {\n              var msg = \"YAML only supports %TAG and %YAML directives, and not %\".concat(name);\n\n              _this.warnings.push(new _errors.YAMLWarning(directive, msg));\n            }\n\n        }\n\n        if (comment) directiveComments.push(comment);\n      });\n\n      if (prevDoc && !hasDirectives && '1.1' === (this.version || prevDoc.version || this.options.version)) {\n        var copyTagPrefix = function copyTagPrefix(_ref) {\n          var handle = _ref.handle,\n              prefix = _ref.prefix;\n          return {\n            handle: handle,\n            prefix: prefix\n          };\n        };\n\n        this.tagPrefixes = prevDoc.tagPrefixes.map(copyTagPrefix);\n        this.version = prevDoc.version;\n      }\n\n      this.commentBefore = directiveComments.join('\\n') || null;\n    }\n  }, {\n    key: \"parseContents\",\n    value: function parseContents(contents) {\n      var _this2 = this;\n\n      var comments = {\n        before: [],\n        after: []\n      };\n      var contentNodes = [];\n      var spaceBefore = false;\n      contents.forEach(function (node) {\n        if (node.valueRange) {\n          if (contentNodes.length === 1) {\n            var msg = 'Document is not valid YAML (bad indentation?)';\n\n            _this2.errors.push(new _errors.YAMLSyntaxError(node, msg));\n          }\n\n          var res = _this2.resolveNode(node);\n\n          if (spaceBefore) {\n            res.spaceBefore = true;\n            spaceBefore = false;\n          }\n\n          contentNodes.push(res);\n        } else if (node.comment !== null) {\n          var cc = contentNodes.length === 0 ? comments.before : comments.after;\n          cc.push(node.comment);\n        } else if (node.type === _constants.Type.BLANK_LINE) {\n          spaceBefore = true;\n\n          if (contentNodes.length === 0 && comments.before.length > 0 && !_this2.commentBefore) {\n            // space-separated comments at start are parsed as document comments\n            _this2.commentBefore = comments.before.join('\\n');\n            comments.before = [];\n          }\n        }\n      });\n\n      switch (contentNodes.length) {\n        case 0:\n          this.contents = null;\n          comments.after = comments.before;\n          break;\n\n        case 1:\n          this.contents = contentNodes[0];\n\n          if (this.contents) {\n            var cb = comments.before.join('\\n') || null;\n\n            if (cb) {\n              var cbNode = this.contents instanceof _Collection.default && this.contents.items[0] ? this.contents.items[0] : this.contents;\n              cbNode.commentBefore = cbNode.commentBefore ? \"\".concat(cb, \"\\n\").concat(cbNode.commentBefore) : cb;\n            }\n          } else {\n            comments.after = comments.before.concat(comments.after);\n          }\n\n          break;\n\n        default:\n          this.contents = contentNodes;\n\n          if (this.contents[0]) {\n            this.contents[0].commentBefore = comments.before.join('\\n') || null;\n          } else {\n            comments.after = comments.before.concat(comments.after);\n          }\n\n      }\n\n      this.comment = comments.after.join('\\n') || null;\n    }\n  }, {\n    key: \"resolveTagDirective\",\n    value: function resolveTagDirective(directive) {\n      var _directive$parameters = (0, _slicedToArray2.default)(directive.parameters, 2),\n          handle = _directive$parameters[0],\n          prefix = _directive$parameters[1];\n\n      if (handle && prefix) {\n        if (this.tagPrefixes.every(function (p) {\n          return p.handle !== handle;\n        })) {\n          this.tagPrefixes.push({\n            handle: handle,\n            prefix: prefix\n          });\n        } else {\n          var msg = 'The %TAG directive must only be given at most once per handle in the same document.';\n          this.errors.push(new _errors.YAMLSemanticError(directive, msg));\n        }\n      } else {\n        var _msg = 'Insufficient parameters given for %TAG directive';\n        this.errors.push(new _errors.YAMLSemanticError(directive, _msg));\n      }\n    }\n  }, {\n    key: \"resolveYamlDirective\",\n    value: function resolveYamlDirective(directive) {\n      var _directive$parameters2 = (0, _slicedToArray2.default)(directive.parameters, 1),\n          version = _directive$parameters2[0];\n\n      if (directive.name === 'YAML:1.0') version = '1.0';\n\n      if (this.version) {\n        var msg = 'The %YAML directive must only be given at most once per document.';\n        this.errors.push(new _errors.YAMLSemanticError(directive, msg));\n      }\n\n      if (!version) {\n        var _msg2 = 'Insufficient parameters given for %YAML directive';\n        this.errors.push(new _errors.YAMLSemanticError(directive, _msg2));\n      } else {\n        if (!Document.defaults[version]) {\n          var v0 = this.version || this.options.version;\n\n          var _msg3 = \"Document will be parsed as YAML \".concat(v0, \" rather than YAML \").concat(version);\n\n          this.warnings.push(new _errors.YAMLWarning(directive, _msg3));\n        }\n\n        this.version = version;\n      }\n    }\n  }, {\n    key: \"resolveTagName\",\n    value: function resolveTagName(node) {\n      var tag = node.tag,\n          type = node.type;\n      var nonSpecific = false;\n\n      if (tag) {\n        var handle = tag.handle,\n            suffix = tag.suffix,\n            verbatim = tag.verbatim;\n\n        if (verbatim) {\n          if (verbatim !== '!' && verbatim !== '!!') return verbatim;\n          var msg = \"Verbatim tags aren't resolved, so \".concat(verbatim, \" is invalid.\");\n          this.errors.push(new _errors.YAMLSemanticError(node, msg));\n        } else if (handle === '!' && !suffix) {\n          nonSpecific = true;\n        } else {\n          var prefix = this.tagPrefixes.find(function (p) {\n            return p.handle === handle;\n          });\n\n          if (!prefix) {\n            var dtp = this.getDefaults().tagPrefixes;\n            if (dtp) prefix = dtp.find(function (p) {\n              return p.handle === handle;\n            });\n          }\n\n          if (prefix) {\n            if (suffix) {\n              if (handle === '!' && (this.version || this.options.version) === '1.0') {\n                if (suffix[0] === '^') return suffix;\n\n                if (/[:/]/.test(suffix)) {\n                  // word/foo -> tag:word.yaml.org,2002:foo\n                  var vocab = suffix.match(/^([a-z0-9-]+)\\/(.*)/i);\n                  return vocab ? \"tag:\".concat(vocab[1], \".yaml.org,2002:\").concat(vocab[2]) : \"tag:\".concat(suffix);\n                }\n              }\n\n              return prefix.prefix + decodeURIComponent(suffix);\n            }\n\n            this.errors.push(new _errors.YAMLSemanticError(node, \"The \".concat(handle, \" tag has no suffix.\")));\n          } else {\n            var _msg4 = \"The \".concat(handle, \" tag handle is non-default and was not declared.\");\n\n            this.errors.push(new _errors.YAMLSemanticError(node, _msg4));\n          }\n        }\n      }\n\n      switch (type) {\n        case _constants.Type.BLOCK_FOLDED:\n        case _constants.Type.BLOCK_LITERAL:\n        case _constants.Type.QUOTE_DOUBLE:\n        case _constants.Type.QUOTE_SINGLE:\n          return _schema.default.defaultTags.STR;\n\n        case _constants.Type.FLOW_MAP:\n        case _constants.Type.MAP:\n          return _schema.default.defaultTags.MAP;\n\n        case _constants.Type.FLOW_SEQ:\n        case _constants.Type.SEQ:\n          return _schema.default.defaultTags.SEQ;\n\n        case _constants.Type.PLAIN:\n          return nonSpecific ? _schema.default.defaultTags.STR : null;\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: \"resolveNode\",\n    value: function resolveNode(node) {\n      if (!node) return null;\n      var anchors = this.anchors,\n          errors = this.errors,\n          schema = this.schema;\n      var hasAnchor = false;\n      var hasTag = false;\n      var comments = {\n        before: [],\n        after: []\n      };\n      var props = isCollectionItem(node.context.parent) ? node.context.parent.props.concat(node.props) : node.props;\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = props[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _step3$value = _step3.value,\n              start = _step3$value.start,\n              end = _step3$value.end;\n\n          switch (node.context.src[start]) {\n            case _constants.Char.COMMENT:\n              {\n                if (!node.commentHasRequiredWhitespace(start)) {\n                  var _msg7 = 'Comments must be separated from other tokens by white space characters';\n                  errors.push(new _errors.YAMLSemanticError(node, _msg7));\n                }\n\n                var c = node.context.src.slice(start + 1, end);\n                var header = node.header,\n                    valueRange = node.valueRange;\n\n                if (valueRange && (start > valueRange.start || header && start > header.start)) {\n                  comments.after.push(c);\n                } else {\n                  comments.before.push(c);\n                }\n              }\n              break;\n\n            case _constants.Char.ANCHOR:\n              if (hasAnchor) {\n                var _msg8 = 'A node can have at most one anchor';\n                errors.push(new _errors.YAMLSemanticError(node, _msg8));\n              }\n\n              hasAnchor = true;\n              break;\n\n            case _constants.Char.TAG:\n              if (hasTag) {\n                var _msg9 = 'A node can have at most one tag';\n                errors.push(new _errors.YAMLSemanticError(node, _msg9));\n              }\n\n              hasTag = true;\n              break;\n          }\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (hasAnchor) {\n        var name = node.anchor;\n        var prev = anchors.getNode(name); // At this point, aliases for any preceding node with the same anchor\n        // name have already been resolved, so it may safely be renamed.\n\n        if (prev) anchors.map[anchors.newName(name)] = prev; // During parsing, we need to store the CST node in anchors.map as\n        // anchors need to be available during resolution to allow for\n        // circular references.\n\n        anchors.map[name] = node;\n      }\n\n      var res;\n\n      if (node.type === _constants.Type.ALIAS) {\n        if (hasAnchor || hasTag) {\n          var msg = 'An alias node must not specify any properties';\n          errors.push(new _errors.YAMLSemanticError(node, msg));\n        }\n\n        var _name = node.rawValue;\n        var src = anchors.getNode(_name);\n\n        if (!src) {\n          var _msg5 = \"Aliased anchor not found: \".concat(_name);\n\n          errors.push(new _errors.YAMLReferenceError(node, _msg5));\n          return null;\n        } // Lazy resolution for circular references\n\n\n        res = new _Alias.default(src);\n\n        anchors._cstAliases.push(res);\n      } else {\n        var tagName = this.resolveTagName(node);\n\n        if (tagName) {\n          res = schema.resolveNodeWithFallback(this, node, tagName);\n        } else {\n          if (node.type !== _constants.Type.PLAIN) {\n            var _msg6 = \"Failed to resolve \".concat(node.type, \" node here\");\n\n            errors.push(new _errors.YAMLSyntaxError(node, _msg6));\n            return null;\n          }\n\n          try {\n            res = schema.resolveScalar(node.strValue || '');\n          } catch (error) {\n            if (!error.source) error.source = node;\n            errors.push(error);\n            return null;\n          }\n        }\n      }\n\n      if (res) {\n        res.range = [node.range.start, node.range.end];\n        if (this.options.keepCstNodes) res.cstNode = node;\n        if (this.options.keepNodeTypes) res.type = node.type;\n        var cb = comments.before.join('\\n');\n\n        if (cb) {\n          res.commentBefore = res.commentBefore ? \"\".concat(res.commentBefore, \"\\n\").concat(cb) : cb;\n        }\n\n        var ca = comments.after.join('\\n');\n        if (ca) res.comment = res.comment ? \"\".concat(res.comment, \"\\n\").concat(ca) : ca;\n      }\n\n      return node.resolved = res;\n    }\n  }, {\n    key: \"listNonDefaultTags\",\n    value: function listNonDefaultTags() {\n      return (0, _listTagNames.default)(this.contents).filter(function (t) {\n        return t.indexOf(_schema.default.defaultPrefix) !== 0;\n      });\n    }\n  }, {\n    key: \"setTagPrefix\",\n    value: function setTagPrefix(handle, prefix) {\n      if (handle[0] !== '!' || handle[handle.length - 1] !== '!') throw new Error('Handle must start and end with !');\n\n      if (prefix) {\n        var prev = this.tagPrefixes.find(function (p) {\n          return p.handle === handle;\n        });\n        if (prev) prev.prefix = prefix;else this.tagPrefixes.push({\n          handle: handle,\n          prefix: prefix\n        });\n      } else {\n        this.tagPrefixes = this.tagPrefixes.filter(function (p) {\n          return p.handle !== handle;\n        });\n      }\n    }\n  }, {\n    key: \"stringifyTag\",\n    value: function stringifyTag(tag) {\n      if ((this.version || this.options.version) === '1.0') {\n        var priv = tag.match(/^tag:private\\.yaml\\.org,2002:([^:/]+)$/);\n        if (priv) return '!' + priv[1];\n        var vocab = tag.match(/^tag:([a-zA-Z0-9-]+)\\.yaml\\.org,2002:(.*)/);\n        return vocab ? \"!\".concat(vocab[1], \"/\").concat(vocab[2]) : \"!\".concat(tag.replace(/^tag:/, ''));\n      } else {\n        var p = this.tagPrefixes.find(function (p) {\n          return tag.indexOf(p.prefix) === 0;\n        });\n\n        if (!p) {\n          var dtp = this.getDefaults().tagPrefixes;\n          p = dtp && dtp.find(function (p) {\n            return tag.indexOf(p.prefix) === 0;\n          });\n        }\n\n        if (!p) return tag[0] === '!' ? tag : \"!<\".concat(tag, \">\");\n        var suffix = tag.substr(p.prefix.length).replace(/[!,[\\]{}]/g, function (ch) {\n          return {\n            '!': '%21',\n            ',': '%2C',\n            '[': '%5B',\n            ']': '%5D',\n            '{': '%7B',\n            '}': '%7D'\n          }[ch];\n        });\n        return p.handle + suffix;\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(arg) {\n      var _this3 = this;\n\n      var _this$options = this.options,\n          keepBlobsInJSON = _this$options.keepBlobsInJSON,\n          mapAsMap = _this$options.mapAsMap,\n          maxAliasCount = _this$options.maxAliasCount;\n      var keep = keepBlobsInJSON && (typeof arg !== 'string' || !(this.contents instanceof _Scalar.default));\n      var ctx = {\n        doc: this,\n        keep: keep,\n        mapAsMap: keep && !!mapAsMap,\n        maxAliasCount: maxAliasCount\n      };\n      var anchorNames = Object.keys(this.anchors.map);\n      if (anchorNames.length > 0) ctx.anchors = anchorNames.map(function (name) {\n        return {\n          alias: [],\n          aliasCount: 0,\n          count: 1,\n          node: _this3.anchors.map[name]\n        };\n      });\n      return (0, _toJSON2.default)(this.contents, arg, ctx);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      if (this.errors.length > 0) throw new Error('Document with errors cannot be stringified');\n      this.setSchema();\n      var lines = [];\n      var hasDirectives = false;\n\n      if (this.version) {\n        var vd = '%YAML 1.2';\n\n        if (this.schema.name === 'yaml-1.1') {\n          if (this.version === '1.0') vd = '%YAML:1.0';else if (this.version === '1.1') vd = '%YAML 1.1';\n        }\n\n        lines.push(vd);\n        hasDirectives = true;\n      }\n\n      var tagNames = this.listNonDefaultTags();\n      this.tagPrefixes.forEach(function (_ref2) {\n        var handle = _ref2.handle,\n            prefix = _ref2.prefix;\n\n        if (tagNames.some(function (t) {\n          return t.indexOf(prefix) === 0;\n        })) {\n          lines.push(\"%TAG \".concat(handle, \" \").concat(prefix));\n          hasDirectives = true;\n        }\n      });\n      if (hasDirectives || this.directivesEndMarker) lines.push('---');\n\n      if (this.commentBefore) {\n        if (hasDirectives || !this.directivesEndMarker) lines.unshift('');\n        lines.unshift(this.commentBefore.replace(/^/gm, '#'));\n      }\n\n      var ctx = {\n        anchors: {},\n        doc: this,\n        indent: ''\n      };\n      var chompKeep = false;\n      var contentComment = null;\n\n      if (this.contents) {\n        if (this.contents instanceof _Node.default) {\n          if (this.contents.spaceBefore && (hasDirectives || this.directivesEndMarker)) lines.push('');\n          if (this.contents.commentBefore) lines.push(this.contents.commentBefore.replace(/^/gm, '#')); // top-level block scalars need to be indented if followed by a comment\n\n          ctx.forceBlockIndent = !!this.comment;\n          contentComment = this.contents.comment;\n        }\n\n        var onChompKeep = contentComment ? null : function () {\n          return chompKeep = true;\n        };\n        var body = this.schema.stringify(this.contents, ctx, function () {\n          return contentComment = null;\n        }, onChompKeep);\n        lines.push((0, _addComment.default)(body, '', contentComment));\n      } else if (this.contents !== undefined) {\n        lines.push(this.schema.stringify(this.contents, ctx));\n      }\n\n      if (this.comment) {\n        if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '') lines.push('');\n        lines.push(this.comment.replace(/^/gm, '#'));\n      }\n\n      return lines.join('\\n') + '\\n';\n    }\n  }]);\n  return Document;\n}();\n\nexports.default = Document;\n(0, _defineProperty2.default)(Document, \"defaults\", {\n  '1.0': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: _schema.default.defaultPrefix\n    }, {\n      handle: '!!',\n      prefix: 'tag:private.yaml.org,2002:'\n    }]\n  },\n  '1.1': {\n    schema: 'yaml-1.1',\n    merge: true,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: _schema.default.defaultPrefix\n    }]\n  },\n  '1.2': {\n    schema: 'core',\n    merge: false,\n    tagPrefixes: [{\n      handle: '!',\n      prefix: '!'\n    }, {\n      handle: '!!',\n      prefix: _schema.default.defaultPrefix\n    }]\n  }\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addCommentBefore = addCommentBefore;\nexports.default = addComment;\n\nfunction addCommentBefore(str, indent, comment) {\n  if (!comment) return str;\n  var cc = comment.replace(/[\\s\\S]^/gm, \"$&\".concat(indent, \"#\"));\n  return \"#\".concat(cc, \"\\n\").concat(indent).concat(str);\n}\n\nfunction addComment(str, indent, comment) {\n  return !comment ? str : comment.indexOf('\\n') === -1 ? \"\".concat(str, \" #\").concat(comment) : \"\".concat(str, \"\\n\") + comment.replace(/^/gm, \"\".concat(indent || '', \"#\"));\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type = exports.Char = void 0;\nvar Char = {\n  ANCHOR: '&',\n  COMMENT: '#',\n  TAG: '!',\n  DIRECTIVES_END: '-',\n  DOCUMENT_END: '.'\n};\nexports.Char = Char;\nvar Type = {\n  ALIAS: 'ALIAS',\n  BLANK_LINE: 'BLANK_LINE',\n  BLOCK_FOLDED: 'BLOCK_FOLDED',\n  BLOCK_LITERAL: 'BLOCK_LITERAL',\n  COMMENT: 'COMMENT',\n  DIRECTIVE: 'DIRECTIVE',\n  DOCUMENT: 'DOCUMENT',\n  FLOW_MAP: 'FLOW_MAP',\n  FLOW_SEQ: 'FLOW_SEQ',\n  MAP: 'MAP',\n  MAP_KEY: 'MAP_KEY',\n  MAP_VALUE: 'MAP_VALUE',\n  PLAIN: 'PLAIN',\n  QUOTE_DOUBLE: 'QUOTE_DOUBLE',\n  QUOTE_SINGLE: 'QUOTE_SINGLE',\n  SEQ: 'SEQ',\n  SEQ_ITEM: 'SEQ_ITEM'\n};\nexports.Type = Type;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar Alias =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Alias, _Node);\n\n  function Alias() {\n    (0, _classCallCheck2.default)(this, Alias);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Alias).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(Alias, [{\n    key: \"parse\",\n\n    /**\n     * Parses an *alias from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n\n      var offset = _Node2.default.endOfIdentifier(src, start + 1);\n\n      this.valueRange = new _Range.default(start + 1, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }]);\n  return Alias;\n}(_Node2.default);\n\nexports.default = Alias;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar BlankLine =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(BlankLine, _Node);\n\n  function BlankLine() {\n    (0, _classCallCheck2.default)(this, BlankLine);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlankLine).call(this, _constants.Type.BLANK_LINE));\n  }\n\n  (0, _createClass2.default)(BlankLine, [{\n    key: \"parse\",\n\n    /**\n     * Parses blank lines from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first \\n character\n     * @returns {number} - Index of the character after this\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = start + 1;\n\n      while (_Node2.default.atBlank(src, offset)) {\n        var lineEnd = _Node2.default.endOfWhiteSpace(src, offset);\n\n        if (lineEnd === '\\n') offset = lineEnd + 1;else break;\n      }\n\n      this.range = new _Range.default(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return true;\n    }\n  }]);\n  return BlankLine;\n}(_Node2.default);\n\nexports.default = BlankLine;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.Chomp = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar Chomp = {\n  CLIP: 'CLIP',\n  KEEP: 'KEEP',\n  STRIP: 'STRIP'\n};\nexports.Chomp = Chomp;\n\nvar BlockValue =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(BlockValue, _Node);\n\n  function BlockValue(type, props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, BlockValue);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(BlockValue).call(this, type, props));\n    _this.blockIndent = null;\n    _this.chomping = Chomp.CLIP;\n    _this.header = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(BlockValue, [{\n    key: \"parseBlockHeader\",\n    value: function parseBlockHeader(start) {\n      var src = this.context.src;\n      var offset = start + 1;\n      var bi = '';\n\n      while (true) {\n        var ch = src[offset];\n\n        switch (ch) {\n          case '-':\n            this.chomping = Chomp.STRIP;\n            break;\n\n          case '+':\n            this.chomping = Chomp.KEEP;\n            break;\n\n          case '0':\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            bi += ch;\n            break;\n\n          default:\n            this.blockIndent = Number(bi) || null;\n            this.header = new _Range.default(start, offset);\n            return offset;\n        }\n\n        offset += 1;\n      }\n    }\n  }, {\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      var offset = start;\n      var valueEnd = start;\n      var bi = this.blockIndent ? indent + this.blockIndent - 1 : indent;\n      var minBlockIndent = 1;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        offset += 1;\n        if (_Node2.default.atDocumentBoundary(src, offset)) break;\n\n        var end = _Node2.default.endOfBlockIndent(src, bi, offset); // should not include tab?\n\n\n        if (end === null) break;\n\n        if (!this.blockIndent) {\n          // no explicit block indent, none yet detected\n          var lineIndent = end - (offset + indent);\n\n          if (src[end] !== '\\n') {\n            // first line with non-whitespace content\n            if (lineIndent < minBlockIndent) {\n              offset -= 1;\n              break;\n            }\n\n            this.blockIndent = lineIndent;\n            bi = indent + this.blockIndent - 1;\n          } else if (lineIndent > minBlockIndent) {\n            // empty line with more whitespace\n            minBlockIndent = lineIndent;\n          }\n        }\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          offset = valueEnd = _Node2.default.endOfLine(src, end);\n        }\n      }\n\n      if (this.chomping !== Chomp.KEEP) {\n        offset = src[valueEnd] ? valueEnd + 1 : valueEnd;\n      }\n\n      this.valueRange = new _Range.default(start + 1, offset);\n      return offset;\n    }\n    /**\n     * Parses a block value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * BS\n     * block\n     * lines\n     *\n     * BS #comment\n     * block\n     * lines\n     * ```\n     * where the block style BS matches the regexp `[|>][-+1-9]*` and block lines\n     * are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this block\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = this.parseBlockHeader(start);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      offset = this.parseBlockValue(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(BlockValue.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.header ? this.header.setOrigRange(cr, offset) : offset;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.chomping === Chomp.KEEP;\n    }\n  }, {\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context2 = this.context,\n          indent = _this$context2.indent,\n          src = _this$context2.src;\n      if (this.valueRange.isEmpty()) return '';\n      var lastNewLine = null;\n      var ch = src[end - 1];\n\n      while (ch === '\\n' || ch === '\\t' || ch === ' ') {\n        end -= 1;\n\n        if (end <= start) {\n          if (this.chomping === Chomp.KEEP) break;else return '';\n        }\n\n        if (ch === '\\n') lastNewLine = end;\n        ch = src[end - 1];\n      }\n\n      var keepStart = end + 1;\n\n      if (lastNewLine) {\n        if (this.chomping === Chomp.KEEP) {\n          keepStart = lastNewLine;\n          end = this.valueRange.end;\n        } else {\n          end = lastNewLine;\n        }\n      }\n\n      var bi = indent + this.blockIndent;\n      var folded = this.type === _constants.Type.BLOCK_FOLDED;\n      var atStart = true;\n      var str = '';\n      var sep = '';\n      var prevMoreIndented = false;\n\n      for (var i = start; i < end; ++i) {\n        for (var j = 0; j < bi; ++j) {\n          if (src[i] !== ' ') break;\n          i += 1;\n        }\n\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          if (sep === '\\n') str += '\\n';else sep = '\\n';\n        } else {\n          var lineEnd = _Node2.default.endOfLine(src, i);\n\n          var line = src.slice(i, lineEnd);\n          i = lineEnd;\n\n          if (folded && (_ch === ' ' || _ch === '\\t') && i < keepStart) {\n            if (sep === ' ') sep = '\\n';else if (!prevMoreIndented && !atStart && sep === '\\n') sep = '\\n\\n';\n            str += sep + line; //+ ((lineEnd < end && src[lineEnd]) || '')\n\n            sep = lineEnd < end && src[lineEnd] || '';\n            prevMoreIndented = true;\n          } else {\n            str += sep + line;\n            sep = folded && i < keepStart ? ' ' : '\\n';\n            prevMoreIndented = false;\n          }\n\n          if (atStart && line !== '') atStart = false;\n        }\n      }\n\n      return this.chomping === Chomp.STRIP ? str : str + '\\n';\n    }\n  }]);\n  return BlockValue;\n}(_Node2.default);\n\nexports.default = BlockValue;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.grabCollectionEndComments = grabCollectionEndComments;\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _BlankLine = _interopRequireDefault(require(\"./BlankLine\"));\n\nvar _CollectionItem = _interopRequireDefault(require(\"./CollectionItem\"));\n\nvar _Comment = _interopRequireDefault(require(\"./Comment\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nfunction grabCollectionEndComments(node) {\n  var cnode = node;\n\n  while (cnode instanceof _CollectionItem.default) {\n    cnode = cnode.node;\n  }\n\n  if (!(cnode instanceof Collection)) return null;\n  var len = cnode.items.length;\n  var ci = -1;\n\n  for (var i = len - 1; i >= 0; --i) {\n    var n = cnode.items[i];\n\n    if (n.type === _constants.Type.COMMENT) {\n      // Keep sufficiently indented comments with preceding node\n      var _n$context = n.context,\n          indent = _n$context.indent,\n          lineStart = _n$context.lineStart;\n      if (indent > 0 && n.range.start >= lineStart + indent) break;\n      ci = i;\n    } else if (n.type === _constants.Type.BLANK_LINE) ci = i;else break;\n  }\n\n  if (ci === -1) return null;\n  var ca = cnode.items.splice(ci, len - ci);\n  var prevEnd = ca[0].range.start;\n\n  while (true) {\n    cnode.range.end = prevEnd;\n    if (cnode.valueRange && cnode.valueRange.end > prevEnd) cnode.valueRange.end = prevEnd;\n    if (cnode === node) break;\n    cnode = cnode.context.parent;\n  }\n\n  return ca;\n}\n\nvar Collection =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Collection, _Node);\n  (0, _createClass2.default)(Collection, null, [{\n    key: \"nextContentHasIndent\",\n    value: function nextContentHasIndent(src, offset, indent) {\n      var lineStart = _Node2.default.endOfLine(src, offset) + 1;\n      offset = _Node2.default.endOfWhiteSpace(src, lineStart);\n      var ch = src[offset];\n      if (!ch) return false;\n      if (offset >= lineStart + indent) return true;\n      if (ch !== '#' && ch !== '\\n') return false;\n      return Collection.nextContentHasIndent(src, offset, indent);\n    }\n  }]);\n\n  function Collection(firstItem) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Collection);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Collection).call(this, firstItem.type === _constants.Type.SEQ_ITEM ? _constants.Type.SEQ : _constants.Type.MAP));\n\n    for (var i = firstItem.props.length - 1; i >= 0; --i) {\n      if (firstItem.props[i].start < firstItem.context.lineStart) {\n        // props on previous line are assumed by the collection\n        _this.props = firstItem.props.slice(0, i + 1);\n        firstItem.props = firstItem.props.slice(i + 1);\n        var itemRange = firstItem.props[0] || firstItem.valueRange;\n        firstItem.range.start = itemRange.start;\n        break;\n      }\n    }\n\n    _this.items = [firstItem];\n    var ec = grabCollectionEndComments(firstItem);\n    if (ec) Array.prototype.push.apply(_this.items, ec);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Collection, [{\n    key: \"parse\",\n\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src; // It's easier to recalculate lineStart here rather than tracking down the\n      // last context from which to read it -- eemeli/yaml#2\n\n      var lineStart = _Node2.default.startOfLine(src, start);\n\n      var firstItem = this.items[0]; // First-item context needs to be correct for later comment handling\n      // -- eemeli/yaml#17\n\n      firstItem.context.parent = this;\n      this.valueRange = _Range.default.copy(firstItem.valueRange);\n      var indent = firstItem.range.start - firstItem.context.lineStart;\n      var offset = start;\n      offset = _Node2.default.normalizeOffset(src, offset);\n      var ch = src[offset];\n      var atLineStart = _Node2.default.endOfWhiteSpace(src, lineStart) === offset;\n      var prevIncludesTrailingLines = false;\n\n      while (ch) {\n        while (ch === '\\n' || ch === '#') {\n          if (atLineStart && ch === '\\n' && !prevIncludesTrailingLines) {\n            var blankLine = new _BlankLine.default();\n            offset = blankLine.parse({\n              src: src\n            }, offset);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n\n            this.items.push(blankLine);\n            offset -= 1; // blankLine.parse() consumes terminal newline\n          } else if (ch === '#') {\n            if (offset < lineStart + indent && !Collection.nextContentHasIndent(src, offset, indent)) {\n              return offset;\n            }\n\n            var comment = new _Comment.default();\n            offset = comment.parse({\n              indent: indent,\n              lineStart: lineStart,\n              src: src\n            }, offset);\n            this.items.push(comment);\n            this.valueRange.end = offset;\n\n            if (offset >= src.length) {\n              ch = null;\n              break;\n            }\n          }\n\n          lineStart = offset + 1;\n          offset = _Node2.default.endOfIndent(src, lineStart);\n\n          if (_Node2.default.atBlank(src, offset)) {\n            var wsEnd = _Node2.default.endOfWhiteSpace(src, offset);\n\n            var next = src[wsEnd];\n\n            if (!next || next === '\\n' || next === '#') {\n              offset = wsEnd;\n            }\n          }\n\n          ch = src[offset];\n          atLineStart = true;\n        }\n\n        if (!ch) {\n          break;\n        }\n\n        if (offset !== lineStart + indent && (atLineStart || ch !== ':')) {\n          if (lineStart > start) offset = lineStart;\n          break;\n        }\n\n        if (firstItem.type === _constants.Type.SEQ_ITEM !== (ch === '-')) {\n          var typeswitch = true;\n\n          if (ch === '-') {\n            // map key may start with -, as long as it's followed by a non-whitespace char\n            var _next = src[offset + 1];\n            typeswitch = !_next || _next === '\\n' || _next === '\\t' || _next === ' ';\n          }\n\n          if (typeswitch) {\n            if (lineStart > start) offset = lineStart;\n            break;\n          }\n        }\n\n        var node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: true,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n        if (!node) return offset; // at next document start\n\n        this.items.push(node);\n        this.valueRange.end = node.valueRange.end;\n        offset = _Node2.default.normalizeOffset(src, node.range.end);\n        ch = src[offset];\n        atLineStart = false;\n        prevIncludesTrailingLines = node.includesTrailingLines; // Need to reset lineStart and atLineStart here if preceding node's range\n        // has advanced to check the current line's indentation level\n        // -- eemeli/yaml#10 & eemeli/yaml#38\n\n        if (ch) {\n          var ls = offset - 1;\n          var prev = src[ls];\n\n          while (prev === ' ' || prev === '\\t') {\n            prev = src[--ls];\n          }\n\n          if (prev === '\\n') {\n            lineStart = ls + 1;\n            atLineStart = true;\n          }\n        }\n\n        var ec = grabCollectionEndComments(node);\n        if (ec) Array.prototype.push.apply(this.items, ec);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(Collection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, items[0].range.start) + String(items[0]);\n\n      for (var i = 1; i < items.length; ++i) {\n        var item = items[i];\n        var _item$context = item.context,\n            atLineStart = _item$context.atLineStart,\n            indent = _item$context.indent;\n        if (atLineStart) for (var _i = 0; _i < indent; ++_i) {\n          str += ' ';\n        }\n        str += String(item);\n      }\n\n      return _Node2.default.addStringTerminator(src, range.end, str);\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return this.items.length > 0;\n    }\n  }]);\n  return Collection;\n}(_Node2.default);\n\nexports.default = Collection;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _BlankLine = _interopRequireDefault(require(\"./BlankLine\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar CollectionItem =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(CollectionItem, _Node);\n\n  function CollectionItem(type, props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CollectionItem);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(CollectionItem).call(this, type, props));\n    _this.node = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(CollectionItem, [{\n    key: \"parse\",\n\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var atLineStart = context.atLineStart,\n          lineStart = context.lineStart;\n      if (!atLineStart && this.type === _constants.Type.SEQ_ITEM) this.error = new _errors.YAMLSemanticError(this, 'Sequence items must not have preceding content on the same line');\n      var indent = atLineStart ? start - lineStart : context.indent;\n\n      var offset = _Node2.default.endOfWhiteSpace(src, start + 1);\n\n      var ch = src[offset];\n      var inlineComment = ch === '#';\n      var comments = [];\n      var blankLine = null;\n\n      while (ch === '\\n' || ch === '#') {\n        if (ch === '#') {\n          var _end = _Node2.default.endOfLine(src, offset + 1);\n\n          comments.push(new _Range.default(offset, _end));\n          offset = _end;\n        } else {\n          atLineStart = true;\n          lineStart = offset + 1;\n\n          var wsEnd = _Node2.default.endOfWhiteSpace(src, lineStart);\n\n          if (src[wsEnd] === '\\n' && comments.length === 0) {\n            blankLine = new _BlankLine.default();\n            lineStart = blankLine.parse({\n              src: src\n            }, lineStart);\n          }\n\n          offset = _Node2.default.endOfIndent(src, lineStart);\n        }\n\n        ch = src[offset];\n      }\n\n      if (_Node2.default.nextNodeIsIndented(ch, offset - (lineStart + indent), this.type !== _constants.Type.SEQ_ITEM)) {\n        this.node = parseNode({\n          atLineStart: atLineStart,\n          inCollection: false,\n          indent: indent,\n          lineStart: lineStart,\n          parent: this\n        }, offset);\n      } else if (ch && lineStart > start + 1) {\n        offset = lineStart - 1;\n      }\n\n      if (this.node) {\n        if (blankLine) {\n          // Only blank lines preceding non-empty nodes are captured. Note that\n          // this means that collection item range start indices do not always\n          // increase monotonically. -- eemeli/yaml#126\n          var items = context.parent.items || context.parent.contents;\n          if (items) items.push(blankLine);\n        }\n\n        if (comments.length) Array.prototype.push.apply(this.props, comments);\n        offset = this.node.range.end;\n      } else {\n        if (inlineComment) {\n          var c = comments[0];\n          this.props.push(c);\n          offset = c.end;\n        } else {\n          offset = _Node2.default.endOfLine(src, start + 1);\n        }\n      }\n\n      var end = this.node ? this.node.valueRange.end : offset;\n      this.valueRange = new _Range.default(start, end);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(CollectionItem.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      return this.node ? this.node.setOrigRanges(cr, offset) : offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          node = this.node,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = node ? src.slice(range.start, node.range.start) + String(node) : src.slice(range.start, range.end);\n      return _Node2.default.addStringTerminator(src, range.end, str);\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return !!this.node && this.node.includesTrailingLines;\n    }\n  }]);\n  return CollectionItem;\n}(_Node2.default);\n\nexports.default = CollectionItem;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar Comment =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Comment, _Node);\n\n  function Comment() {\n    (0, _classCallCheck2.default)(this, Comment);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Comment).call(this, _constants.Type.COMMENT));\n  }\n  /**\n   * Parses a comment line from the source\n   *\n   * @param {ParseContext} context\n   * @param {number} start - Index of first character\n   * @returns {number} - Index of the character after this scalar\n   */\n\n\n  (0, _createClass2.default)(Comment, [{\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseComment(start);\n      this.range = new _Range.default(start, offset);\n      return offset;\n    }\n  }]);\n  return Comment;\n}(_Node2.default);\n\nexports.default = Comment;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar Directive =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Directive, _Node);\n  (0, _createClass2.default)(Directive, null, [{\n    key: \"endOfDirective\",\n    value: function endOfDirective(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '#') {\n        ch = src[offset += 1];\n      } // last char can't be whitespace\n\n\n      ch = src[offset - 1];\n\n      while (ch === ' ' || ch === '\\t') {\n        offset -= 1;\n        ch = src[offset - 1];\n      }\n\n      return offset;\n    }\n  }]);\n\n  function Directive() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Directive);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Directive).call(this, _constants.Type.DIRECTIVE));\n    _this.name = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Directive, [{\n    key: \"parseName\",\n    value: function parseName(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '\\t' && ch !== ' ') {\n        ch = src[offset += 1];\n      }\n\n      this.name = src.slice(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parseParameters\",\n    value: function parseParameters(start) {\n      var src = this.context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n' && ch !== '#') {\n        ch = src[offset += 1];\n      }\n\n      this.valueRange = new _Range.default(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var offset = this.parseName(start + 1);\n      offset = this.parseParameters(offset);\n      offset = this.parseComment(offset);\n      this.range = new _Range.default(start, offset);\n      return offset;\n    }\n  }, {\n    key: \"parameters\",\n    get: function get() {\n      var raw = this.rawValue;\n      return raw ? raw.trim().split(/[ \\t]+/) : [];\n    }\n  }]);\n  return Directive;\n}(_Node2.default);\n\nexports.default = Directive;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _BlankLine = _interopRequireDefault(require(\"./BlankLine\"));\n\nvar _Collection = require(\"./Collection\");\n\nvar _Comment = _interopRequireDefault(require(\"./Comment\"));\n\nvar _Directive = _interopRequireDefault(require(\"./Directive\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar Document =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Document, _Node);\n  (0, _createClass2.default)(Document, null, [{\n    key: \"startCommentOrEndBlankLine\",\n    value: function startCommentOrEndBlankLine(src, start) {\n      var offset = _Node2.default.endOfWhiteSpace(src, start);\n\n      var ch = src[offset];\n      return ch === '#' || ch === '\\n' ? offset : start;\n    }\n  }]);\n\n  function Document() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Document);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Document).call(this, _constants.Type.DOCUMENT));\n    _this.directives = null;\n    _this.contents = null;\n    _this.directivesEndMarker = null;\n    _this.documentEndMarker = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Document, [{\n    key: \"parseDirectives\",\n    value: function parseDirectives(start) {\n      var src = this.context.src;\n      this.directives = [];\n      var atLineStart = true;\n      var hasDirectives = false;\n      var offset = start;\n\n      while (!_Node2.default.atDocumentBoundary(src, offset, _constants.Char.DIRECTIVES_END)) {\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n\n        switch (src[offset]) {\n          case '\\n':\n            if (atLineStart) {\n              var blankLine = new _BlankLine.default();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.directives.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            break;\n\n          case '#':\n            {\n              var comment = new _Comment.default();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.directives.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          case '%':\n            {\n              var directive = new _Directive.default();\n              offset = directive.parse({\n                parent: this,\n                src: src\n              }, offset);\n              this.directives.push(directive);\n              hasDirectives = true;\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            if (hasDirectives) {\n              this.error = new _errors.YAMLSemanticError(this, 'Missing directives-end indicator line');\n            } else if (this.directives.length > 0) {\n              this.contents = this.directives;\n              this.directives = [];\n            }\n\n            return offset;\n        }\n      }\n\n      if (src[offset]) {\n        this.directivesEndMarker = new _Range.default(offset, offset + 3);\n        return offset + 3;\n      }\n\n      if (hasDirectives) {\n        this.error = new _errors.YAMLSemanticError(this, 'Missing directives-end indicator line');\n      } else if (this.directives.length > 0) {\n        this.contents = this.directives;\n        this.directives = [];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"parseContents\",\n    value: function parseContents(start) {\n      var _this$context = this.context,\n          parseNode = _this$context.parseNode,\n          src = _this$context.src;\n      if (!this.contents) this.contents = [];\n      var lineStart = start;\n\n      while (src[lineStart - 1] === '-') {\n        lineStart -= 1;\n      }\n\n      var offset = _Node2.default.endOfWhiteSpace(src, start);\n\n      var atLineStart = lineStart === start;\n      this.valueRange = new _Range.default(offset);\n\n      while (!_Node2.default.atDocumentBoundary(src, offset, _constants.Char.DOCUMENT_END)) {\n        switch (src[offset]) {\n          case '\\n':\n            if (atLineStart) {\n              var blankLine = new _BlankLine.default();\n              offset = blankLine.parse({\n                src: src\n              }, offset);\n\n              if (offset < src.length) {\n                this.contents.push(blankLine);\n              }\n            } else {\n              offset += 1;\n              atLineStart = true;\n            }\n\n            lineStart = offset;\n            break;\n\n          case '#':\n            {\n              var comment = new _Comment.default();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.contents.push(comment);\n              atLineStart = false;\n            }\n            break;\n\n          default:\n            {\n              var iEnd = _Node2.default.endOfIndent(src, offset);\n\n              var context = {\n                atLineStart: atLineStart,\n                indent: -1,\n                inFlow: false,\n                inCollection: false,\n                lineStart: lineStart,\n                parent: this\n              };\n              var node = parseNode(context, iEnd);\n              if (!node) return this.valueRange.end = iEnd; // at next document start\n\n              this.contents.push(node);\n              offset = node.range.end;\n              atLineStart = false;\n              var ec = (0, _Collection.grabCollectionEndComments)(node);\n              if (ec) Array.prototype.push.apply(this.contents, ec);\n            }\n        }\n\n        offset = Document.startCommentOrEndBlankLine(src, offset);\n      }\n\n      this.valueRange.end = offset;\n\n      if (src[offset]) {\n        this.documentEndMarker = new _Range.default(offset, offset + 3);\n        offset += 3;\n\n        if (src[offset]) {\n          offset = _Node2.default.endOfWhiteSpace(src, offset);\n\n          if (src[offset] === '#') {\n            var _comment = new _Comment.default();\n\n            offset = _comment.parse({\n              src: src\n            }, offset);\n            this.contents.push(_comment);\n          }\n\n          switch (src[offset]) {\n            case '\\n':\n              offset += 1;\n              break;\n\n            case undefined:\n              break;\n\n            default:\n              this.error = new _errors.YAMLSyntaxError(this, 'Document end marker line cannot have a non-comment suffix');\n          }\n        }\n      }\n\n      return offset;\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      context.root = this;\n      this.context = context;\n      var src = context.src;\n      var offset = src.charCodeAt(start) === 0xfeff ? start + 1 : start; // skip BOM\n\n      offset = this.parseDirectives(offset);\n      offset = this.parseContents(offset);\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(Document.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.directives.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.directivesEndMarker) offset = this.directivesEndMarker.setOrigRange(cr, offset);\n      this.contents.forEach(function (node) {\n        offset = node.setOrigRanges(cr, offset);\n      });\n      if (this.documentEndMarker) offset = this.documentEndMarker.setOrigRange(cr, offset);\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var contents = this.contents,\n          directives = this.directives,\n          value = this.value;\n      if (value != null) return value;\n      var str = directives.join('');\n\n      if (contents.length > 0) {\n        if (directives.length > 0 || contents[0].type === _constants.Type.COMMENT) str += '---\\n';\n        str += contents.join('');\n      }\n\n      if (str[str.length - 1] !== '\\n') str += '\\n';\n      return str;\n    }\n  }]);\n  return Document;\n}(_Node2.default);\n\nexports.default = Document;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _BlankLine = _interopRequireDefault(require(\"./BlankLine\"));\n\nvar _Comment = _interopRequireDefault(require(\"./Comment\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar FlowCollection =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(FlowCollection, _Node);\n\n  function FlowCollection(type, props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, FlowCollection);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(FlowCollection).call(this, type, props));\n    _this.items = null;\n    return _this;\n  }\n\n  (0, _createClass2.default)(FlowCollection, [{\n    key: \"prevNodeIsJsonLike\",\n    value: function prevNodeIsJsonLike() {\n      var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.items.length;\n      var node = this.items[idx - 1];\n      return !!node && (node.jsonLike || node.type === _constants.Type.COMMENT && this.nodeIsJsonLike(idx - 1));\n    }\n    /**\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var parseNode = context.parseNode,\n          src = context.src;\n      var indent = context.indent,\n          lineStart = context.lineStart;\n      var char = src[start]; // { or [\n\n      this.items = [{\n        char: char,\n        offset: start\n      }];\n\n      var offset = _Node2.default.endOfWhiteSpace(src, start + 1);\n\n      char = src[offset];\n\n      while (char && char !== ']' && char !== '}') {\n        switch (char) {\n          case '\\n':\n            {\n              lineStart = offset + 1;\n\n              var wsEnd = _Node2.default.endOfWhiteSpace(src, lineStart);\n\n              if (src[wsEnd] === '\\n') {\n                var blankLine = new _BlankLine.default();\n                lineStart = blankLine.parse({\n                  src: src\n                }, lineStart);\n                this.items.push(blankLine);\n              }\n\n              offset = _Node2.default.endOfIndent(src, lineStart);\n\n              if (offset <= lineStart + indent) {\n                char = src[offset];\n\n                if (offset < lineStart + indent || char !== ']' && char !== '}') {\n                  var msg = 'Insufficient indentation in flow collection';\n                  this.error = new _errors.YAMLSemanticError(this, msg);\n                }\n              }\n            }\n            break;\n\n          case ',':\n            {\n              this.items.push({\n                char: char,\n                offset: offset\n              });\n              offset += 1;\n            }\n            break;\n\n          case '#':\n            {\n              var comment = new _Comment.default();\n              offset = comment.parse({\n                src: src\n              }, offset);\n              this.items.push(comment);\n            }\n            break;\n\n          case '?':\n          case ':':\n            {\n              var next = src[offset + 1];\n\n              if (next === '\\n' || next === '\\t' || next === ' ' || next === ',' || // in-flow : after JSON-like key does not need to be followed by whitespace\n              char === ':' && this.prevNodeIsJsonLike()) {\n                this.items.push({\n                  char: char,\n                  offset: offset\n                });\n                offset += 1;\n                break;\n              }\n            }\n          // fallthrough\n\n          default:\n            {\n              var node = parseNode({\n                atLineStart: false,\n                inCollection: false,\n                inFlow: true,\n                indent: -1,\n                lineStart: lineStart,\n                parent: this\n              }, offset);\n\n              if (!node) {\n                // at next document start\n                this.valueRange = new _Range.default(start, offset);\n                return offset;\n              }\n\n              this.items.push(node);\n              offset = _Node2.default.normalizeOffset(src, node.range.end);\n            }\n        }\n\n        offset = _Node2.default.endOfWhiteSpace(src, offset);\n        char = src[offset];\n      }\n\n      this.valueRange = new _Range.default(start, offset + 1);\n\n      if (char) {\n        this.items.push({\n          char: char,\n          offset: offset\n        });\n        offset = _Node2.default.endOfWhiteSpace(src, offset + 1);\n        offset = this.parseComment(offset);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      offset = (0, _get2.default)((0, _getPrototypeOf2.default)(FlowCollection.prototype), \"setOrigRanges\", this).call(this, cr, offset);\n      this.items.forEach(function (node) {\n        if (node instanceof _Node2.default) {\n          offset = node.setOrigRanges(cr, offset);\n        } else if (cr.length === 0) {\n          node.origOffset = node.offset;\n        } else {\n          var i = offset;\n\n          while (i < cr.length) {\n            if (cr[i] > node.offset) break;else ++i;\n          }\n\n          node.origOffset = node.offset + i;\n          offset = i;\n        }\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          items = this.items,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var nodes = items.filter(function (item) {\n        return item instanceof _Node2.default;\n      });\n      var str = '';\n      var prevEnd = range.start;\n      nodes.forEach(function (node) {\n        var prefix = src.slice(prevEnd, node.range.start);\n        prevEnd = node.range.end;\n        str += prefix + String(node);\n\n        if (str[str.length - 1] === '\\n' && src[prevEnd - 1] !== '\\n' && src[prevEnd] === '\\n') {\n          // Comment range does not include the terminal newline, but its\n          // stringified value does. Without this fix, newlines at comment ends\n          // get duplicated.\n          prevEnd += 1;\n        }\n      });\n      str += src.slice(prevEnd, range.end);\n      return _Node2.default.addStringTerminator(src, range.end, str);\n    }\n  }]);\n  return FlowCollection;\n}(_Node2.default);\n\nexports.default = FlowCollection;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _constants = require(\"../constants\");\n\nvar _sourceUtils = require(\"./source-utils\");\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\n/** Root class of all nodes */\nvar Node =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Node, null, [{\n    key: \"addStringTerminator\",\n    value: function addStringTerminator(src, offset, str) {\n      if (str[str.length - 1] === '\\n') return str;\n      var next = Node.endOfWhiteSpace(src, offset);\n      return next >= src.length || src[next] === '\\n' ? str + '\\n' : str;\n    } // ^(---|...)\n\n  }, {\n    key: \"atDocumentBoundary\",\n    value: function atDocumentBoundary(src, offset, sep) {\n      var ch0 = src[offset];\n      if (!ch0) return true;\n      var prev = src[offset - 1];\n      if (prev && prev !== '\\n') return false;\n\n      if (sep) {\n        if (ch0 !== sep) return false;\n      } else {\n        if (ch0 !== _constants.Char.DIRECTIVES_END && ch0 !== _constants.Char.DOCUMENT_END) return false;\n      }\n\n      var ch1 = src[offset + 1];\n      var ch2 = src[offset + 2];\n      if (ch1 !== ch0 || ch2 !== ch0) return false;\n      var ch3 = src[offset + 3];\n      return !ch3 || ch3 === '\\n' || ch3 === '\\t' || ch3 === ' ';\n    }\n  }, {\n    key: \"endOfIdentifier\",\n    value: function endOfIdentifier(src, offset) {\n      var ch = src[offset];\n      var isVerbatim = ch === '<';\n      var notOk = isVerbatim ? ['\\n', '\\t', ' ', '>'] : ['\\n', '\\t', ' ', '[', ']', '{', '}', ','];\n\n      while (ch && notOk.indexOf(ch) === -1) {\n        ch = src[offset += 1];\n      }\n\n      if (isVerbatim && ch === '>') offset += 1;\n      return offset;\n    }\n  }, {\n    key: \"endOfIndent\",\n    value: function endOfIndent(src, offset) {\n      var ch = src[offset];\n\n      while (ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfLine\",\n    value: function endOfLine(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"endOfWhiteSpace\",\n    value: function endOfWhiteSpace(src, offset) {\n      var ch = src[offset];\n\n      while (ch === '\\t' || ch === ' ') {\n        ch = src[offset += 1];\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"startOfLine\",\n    value: function startOfLine(src, offset) {\n      var ch = src[offset - 1];\n      if (ch === '\\n') return offset;\n\n      while (ch && ch !== '\\n') {\n        ch = src[offset -= 1];\n      }\n\n      return offset + 1;\n    }\n    /**\n     * End of indentation, or null if the line's indent level is not more\n     * than `indent`\n     *\n     * @param {string} src\n     * @param {number} indent\n     * @param {number} lineStart\n     * @returns {?number}\n     */\n\n  }, {\n    key: \"endOfBlockIndent\",\n    value: function endOfBlockIndent(src, indent, lineStart) {\n      var inEnd = Node.endOfIndent(src, lineStart);\n\n      if (inEnd > lineStart + indent) {\n        return inEnd;\n      } else {\n        var wsEnd = Node.endOfWhiteSpace(src, inEnd);\n        var ch = src[wsEnd];\n        if (!ch || ch === '\\n') return wsEnd;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"atBlank\",\n    value: function atBlank(src, offset, endAsBlank) {\n      var ch = src[offset];\n      return ch === '\\n' || ch === '\\t' || ch === ' ' || endAsBlank && !ch;\n    }\n  }, {\n    key: \"atCollectionItem\",\n    value: function atCollectionItem(src, offset) {\n      var ch = src[offset];\n      return (ch === '?' || ch === ':' || ch === '-') && Node.atBlank(src, offset + 1, true);\n    }\n  }, {\n    key: \"nextNodeIsIndented\",\n    value: function nextNodeIsIndented(ch, indentDiff, indicatorAsIndent) {\n      if (!ch || indentDiff < 0) return false;\n      if (indentDiff > 0) return true;\n      return indicatorAsIndent && ch === '-';\n    } // should be at line or string end, or at next non-whitespace char\n\n  }, {\n    key: \"normalizeOffset\",\n    value: function normalizeOffset(src, offset) {\n      var ch = src[offset];\n      return !ch ? offset : ch !== '\\n' && src[offset - 1] === '\\n' ? offset - 1 : Node.endOfWhiteSpace(src, offset);\n    } // fold single newline into space, multiple newlines to N - 1 newlines\n    // presumes src[offset] === '\\n'\n\n  }, {\n    key: \"foldNewline\",\n    value: function foldNewline(src, offset, indent) {\n      var inCount = 0;\n      var error = false;\n      var fold = '';\n      var ch = src[offset + 1];\n\n      while (ch === ' ' || ch === '\\t' || ch === '\\n') {\n        switch (ch) {\n          case '\\n':\n            inCount = 0;\n            offset += 1;\n            fold += '\\n';\n            break;\n\n          case '\\t':\n            if (inCount <= indent) error = true;\n            offset = Node.endOfWhiteSpace(src, offset + 2) - 1;\n            break;\n\n          case ' ':\n            inCount += 1;\n            offset += 1;\n            break;\n        }\n\n        ch = src[offset + 1];\n      }\n\n      if (!fold) fold = ' ';\n      if (ch && inCount <= indent) error = true;\n      return {\n        fold: fold,\n        offset: offset,\n        error: error\n      };\n    }\n  }]);\n\n  function Node(type, props, context) {\n    (0, _classCallCheck2.default)(this, Node);\n    Object.defineProperty(this, 'context', {\n      value: context || null,\n      writable: true\n    });\n    this.error = null;\n    this.range = null;\n    this.valueRange = null;\n    this.props = props || [];\n    this.type = type;\n    this.value = null;\n  }\n\n  (0, _createClass2.default)(Node, [{\n    key: \"getPropValue\",\n    value: function getPropValue(idx, key, skipKey) {\n      if (!this.context) return null;\n      var src = this.context.src;\n      var prop = this.props[idx];\n      return prop && src[prop.start] === key ? src.slice(prop.start + (skipKey ? 1 : 0), prop.end) : null;\n    }\n  }, {\n    key: \"commentHasRequiredWhitespace\",\n    value: function commentHasRequiredWhitespace(start) {\n      var src = this.context.src;\n      if (this.header && start === this.header.end) return false;\n      if (!this.valueRange) return false;\n      var end = this.valueRange.end;\n      return start !== end || Node.atBlank(src, end - 1);\n    }\n  }, {\n    key: \"parseComment\",\n    value: function parseComment(start) {\n      var src = this.context.src;\n\n      if (src[start] === _constants.Char.COMMENT) {\n        var end = Node.endOfLine(src, start + 1);\n        var commentRange = new _Range.default(start, end);\n        this.props.push(commentRange);\n        return end;\n      }\n\n      return start;\n    }\n    /**\n     * Populates the `origStart` and `origEnd` values of all ranges for this\n     * node. Extended by child classes to handle descendant nodes.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRanges\",\n    value: function setOrigRanges(cr, offset) {\n      if (this.range) offset = this.range.setOrigRange(cr, offset);\n      if (this.valueRange) this.valueRange.setOrigRange(cr, offset);\n      this.props.forEach(function (prop) {\n        return prop.setOrigRange(cr, offset);\n      });\n      return offset;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      var src = this.context.src,\n          range = this.range,\n          value = this.value;\n      if (value != null) return value;\n      var str = src.slice(range.start, range.end);\n      return Node.addStringTerminator(src, range.end, str);\n    }\n  }, {\n    key: \"anchor\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var anchor = this.getPropValue(i, _constants.Char.ANCHOR, true);\n        if (anchor != null) return anchor;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"comment\",\n    get: function get() {\n      var comments = [];\n\n      for (var i = 0; i < this.props.length; ++i) {\n        var comment = this.getPropValue(i, _constants.Char.COMMENT, true);\n        if (comment != null) comments.push(comment);\n      }\n\n      return comments.length > 0 ? comments.join('\\n') : null;\n    }\n  }, {\n    key: \"hasComment\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] === _constants.Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"hasProps\",\n    get: function get() {\n      if (this.context) {\n        var src = this.context.src;\n\n        for (var i = 0; i < this.props.length; ++i) {\n          if (src[this.props[i].start] !== _constants.Char.COMMENT) return true;\n        }\n      }\n\n      return false;\n    }\n  }, {\n    key: \"includesTrailingLines\",\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: \"jsonLike\",\n    get: function get() {\n      var jsonLikeTypes = [_constants.Type.FLOW_MAP, _constants.Type.FLOW_SEQ, _constants.Type.QUOTE_DOUBLE, _constants.Type.QUOTE_SINGLE];\n      return jsonLikeTypes.indexOf(this.type) !== -1;\n    }\n  }, {\n    key: \"rangeAsLinePos\",\n    get: function get() {\n      if (!this.range || !this.context) return undefined;\n      var start = (0, _sourceUtils.getLinePos)(this.range.start, this.context.root);\n      if (!start) return undefined;\n      var end = (0, _sourceUtils.getLinePos)(this.range.end, this.context.root);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }, {\n    key: \"rawValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      return this.context.src.slice(start, end);\n    }\n  }, {\n    key: \"tag\",\n    get: function get() {\n      for (var i = 0; i < this.props.length; ++i) {\n        var tag = this.getPropValue(i, _constants.Char.TAG, false);\n\n        if (tag != null) {\n          if (tag[1] === '<') {\n            return {\n              verbatim: tag.slice(2, -1)\n            };\n          } else {\n            // eslint-disable-next-line no-unused-vars\n            var _tag$match = tag.match(/^(.*!)([^!]*)$/),\n                _tag$match2 = (0, _slicedToArray2.default)(_tag$match, 3),\n                _ = _tag$match2[0],\n                handle = _tag$match2[1],\n                suffix = _tag$match2[2];\n\n            return {\n              handle: handle,\n              suffix: suffix\n            };\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"valueRangeContainsNewline\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return false;\n      var _this$valueRange2 = this.valueRange,\n          start = _this$valueRange2.start,\n          end = _this$valueRange2.end;\n      var src = this.context.src;\n\n      for (var i = start; i < end; ++i) {\n        if (src[i] === '\\n') return true;\n      }\n\n      return false;\n    }\n  }]);\n  return Node;\n}();\n\nexports.default = Node;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _Alias = _interopRequireDefault(require(\"./Alias\"));\n\nvar _BlockValue = _interopRequireDefault(require(\"./BlockValue\"));\n\nvar _Collection = _interopRequireDefault(require(\"./Collection\"));\n\nvar _CollectionItem = _interopRequireDefault(require(\"./CollectionItem\"));\n\nvar _FlowCollection = _interopRequireDefault(require(\"./FlowCollection\"));\n\nvar _Node = _interopRequireDefault(require(\"./Node\"));\n\nvar _PlainValue = _interopRequireDefault(require(\"./PlainValue\"));\n\nvar _QuoteDouble = _interopRequireDefault(require(\"./QuoteDouble\"));\n\nvar _QuoteSingle = _interopRequireDefault(require(\"./QuoteSingle\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\n/**\n * @param {boolean} atLineStart - Node starts at beginning of line\n * @param {boolean} inFlow - true if currently in a flow context\n * @param {boolean} inCollection - true if currently in a collection context\n * @param {number} indent - Current level of indentation\n * @param {number} lineStart - Start of the current line\n * @param {Node} parent - The parent of the node\n * @param {string} src - Source of the YAML document\n */\nvar ParseContext =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(ParseContext, null, [{\n    key: \"parseType\",\n    value: function parseType(src, offset, inFlow) {\n      switch (src[offset]) {\n        case '*':\n          return _constants.Type.ALIAS;\n\n        case '>':\n          return _constants.Type.BLOCK_FOLDED;\n\n        case '|':\n          return _constants.Type.BLOCK_LITERAL;\n\n        case '{':\n          return _constants.Type.FLOW_MAP;\n\n        case '[':\n          return _constants.Type.FLOW_SEQ;\n\n        case '?':\n          return !inFlow && _Node.default.atBlank(src, offset + 1, true) ? _constants.Type.MAP_KEY : _constants.Type.PLAIN;\n\n        case ':':\n          return !inFlow && _Node.default.atBlank(src, offset + 1, true) ? _constants.Type.MAP_VALUE : _constants.Type.PLAIN;\n\n        case '-':\n          return !inFlow && _Node.default.atBlank(src, offset + 1, true) ? _constants.Type.SEQ_ITEM : _constants.Type.PLAIN;\n\n        case '\"':\n          return _constants.Type.QUOTE_DOUBLE;\n\n        case \"'\":\n          return _constants.Type.QUOTE_SINGLE;\n\n        default:\n          return _constants.Type.PLAIN;\n      }\n    }\n  }]);\n\n  function ParseContext() {\n    var _this = this;\n\n    var orig = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n        atLineStart = _ref.atLineStart,\n        inCollection = _ref.inCollection,\n        inFlow = _ref.inFlow,\n        indent = _ref.indent,\n        lineStart = _ref.lineStart,\n        parent = _ref.parent;\n\n    (0, _classCallCheck2.default)(this, ParseContext);\n    (0, _defineProperty2.default)(this, \"parseNode\", function (overlay, start) {\n      if (_Node.default.atDocumentBoundary(_this.src, start)) return null;\n      var context = new ParseContext(_this, overlay);\n\n      var _context$parseProps = context.parseProps(start),\n          props = _context$parseProps.props,\n          type = _context$parseProps.type,\n          valueStart = _context$parseProps.valueStart;\n\n      var node;\n\n      switch (type) {\n        case _constants.Type.ALIAS:\n          node = new _Alias.default(type, props);\n          break;\n\n        case _constants.Type.BLOCK_FOLDED:\n        case _constants.Type.BLOCK_LITERAL:\n          node = new _BlockValue.default(type, props);\n          break;\n\n        case _constants.Type.FLOW_MAP:\n        case _constants.Type.FLOW_SEQ:\n          node = new _FlowCollection.default(type, props);\n          break;\n\n        case _constants.Type.MAP_KEY:\n        case _constants.Type.MAP_VALUE:\n        case _constants.Type.SEQ_ITEM:\n          node = new _CollectionItem.default(type, props);\n          break;\n\n        case _constants.Type.COMMENT:\n        case _constants.Type.PLAIN:\n          node = new _PlainValue.default(type, props);\n          break;\n\n        case _constants.Type.QUOTE_DOUBLE:\n          node = new _QuoteDouble.default(type, props);\n          break;\n\n        case _constants.Type.QUOTE_SINGLE:\n          node = new _QuoteSingle.default(type, props);\n          break;\n\n        default:\n          node.error = new _errors.YAMLSyntaxError(node, \"Unknown node type: \".concat(JSON.stringify(type)));\n          node.range = new _Range.default(start, start + 1);\n          return node;\n      }\n\n      var offset = node.parse(context, valueStart);\n      node.range = new _Range.default(start, offset);\n\n      if (offset <= start) {\n        node.error = new Error(\"Node#parse consumed no characters\");\n        node.error.parseEnd = offset;\n        node.error.source = node;\n        node.range.end = start + 1;\n      }\n\n      if (context.nodeStartsCollection(node)) {\n        if (!node.error && !context.atLineStart && context.parent.type === _constants.Type.DOCUMENT) {\n          node.error = new _errors.YAMLSyntaxError(node, 'Block collection must not have preceding content here (e.g. directives-end indicator)');\n        }\n\n        var collection = new _Collection.default(node);\n        offset = collection.parse(new ParseContext(context), offset);\n        collection.range = new _Range.default(start, offset);\n        return collection;\n      }\n\n      return node;\n    });\n    this.atLineStart = atLineStart != null ? atLineStart : orig.atLineStart || false;\n    this.inCollection = inCollection != null ? inCollection : orig.inCollection || false;\n    this.inFlow = inFlow != null ? inFlow : orig.inFlow || false;\n    this.indent = indent != null ? indent : orig.indent;\n    this.lineStart = lineStart != null ? lineStart : orig.lineStart;\n    this.parent = parent != null ? parent : orig.parent || {};\n    this.root = orig.root;\n    this.src = orig.src;\n  } // for logging\n\n\n  (0, _createClass2.default)(ParseContext, [{\n    key: \"nodeStartsCollection\",\n    value: function nodeStartsCollection(node) {\n      var inCollection = this.inCollection,\n          inFlow = this.inFlow,\n          src = this.src;\n      if (inCollection || inFlow) return false;\n      if (node instanceof _CollectionItem.default) return true; // check for implicit key\n\n      var offset = node.range.end;\n      if (src[offset] === '\\n' || src[offset - 1] === '\\n') return false;\n      offset = _Node.default.endOfWhiteSpace(src, offset);\n      return src[offset] === ':';\n    } // Anchor and tag are before type, which determines the node implementation\n    // class; hence this intermediate step.\n\n  }, {\n    key: \"parseProps\",\n    value: function parseProps(offset) {\n      var inFlow = this.inFlow,\n          parent = this.parent,\n          src = this.src;\n      var props = [];\n      var lineHasProps = false;\n      offset = _Node.default.endOfWhiteSpace(src, offset);\n      var ch = src[offset];\n\n      while (ch === _constants.Char.ANCHOR || ch === _constants.Char.COMMENT || ch === _constants.Char.TAG || ch === '\\n') {\n        if (ch === '\\n') {\n          var lineStart = offset + 1;\n\n          var inEnd = _Node.default.endOfIndent(src, lineStart);\n\n          var indentDiff = inEnd - (lineStart + this.indent);\n          var noIndicatorAsIndent = parent.type === _constants.Type.SEQ_ITEM && parent.context.atLineStart;\n          if (!_Node.default.nextNodeIsIndented(src[inEnd], indentDiff, !noIndicatorAsIndent)) break;\n          this.atLineStart = true;\n          this.lineStart = lineStart;\n          lineHasProps = false;\n          offset = inEnd;\n        } else if (ch === _constants.Char.COMMENT) {\n          var end = _Node.default.endOfLine(src, offset + 1);\n\n          props.push(new _Range.default(offset, end));\n          offset = end;\n        } else {\n          var _end = _Node.default.endOfIdentifier(src, offset + 1);\n\n          if (ch === _constants.Char.TAG && src[_end] === ',' && /^[a-zA-Z0-9-]+\\.[a-zA-Z0-9-]+,\\d\\d\\d\\d(-\\d\\d){0,2}\\/\\S/.test(src.slice(offset + 1, _end + 13))) {\n            // Let's presume we're dealing with a YAML 1.0 domain tag here, rather\n            // than an empty but 'foo.bar' private-tagged node in a flow collection\n            // followed without whitespace by a plain string starting with a year\n            // or date divided by something.\n            _end = _Node.default.endOfIdentifier(src, _end + 5);\n          }\n\n          props.push(new _Range.default(offset, _end));\n          lineHasProps = true;\n          offset = _Node.default.endOfWhiteSpace(src, _end);\n        }\n\n        ch = src[offset];\n      } // '- &a : b' has an anchor on an empty node\n\n\n      if (lineHasProps && ch === ':' && _Node.default.atBlank(src, offset + 1, true)) offset -= 1;\n      var type = ParseContext.parseType(src, offset, inFlow);\n      return {\n        props: props,\n        type: type,\n        valueStart: offset\n      };\n    }\n    /**\n     * Parses a node from the source\n     * @param {ParseContext} overlay\n     * @param {number} start - Index of first non-whitespace character for the node\n     * @returns {?Node} - null if at a document boundary\n     */\n\n  }, {\n    key: \"pretty\",\n    get: function get() {\n      var obj = {\n        start: \"\".concat(this.lineStart, \" + \").concat(this.indent),\n        in: [],\n        parent: this.parent.type\n      };\n      if (!this.atLineStart) obj.start += ' + N';\n      if (this.inCollection) obj.in.push('collection');\n      if (this.inFlow) obj.in.push('flow');\n      return obj;\n    }\n  }]);\n  return ParseContext;\n}();\n\nexports.default = ParseContext;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar PlainValue =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(PlainValue, _Node);\n\n  function PlainValue() {\n    (0, _classCallCheck2.default)(this, PlainValue);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(PlainValue).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(PlainValue, [{\n    key: \"parseBlockValue\",\n    value: function parseBlockValue(start) {\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          inFlow = _this$context.inFlow,\n          src = _this$context.src;\n      var offset = start;\n      var valueEnd = start;\n\n      for (var ch = src[offset]; ch === '\\n'; ch = src[offset]) {\n        if (_Node2.default.atDocumentBoundary(src, offset + 1)) break;\n\n        var end = _Node2.default.endOfBlockIndent(src, indent, offset + 1);\n\n        if (end === null || src[end] === '#') break;\n\n        if (src[end] === '\\n') {\n          offset = end;\n        } else {\n          valueEnd = PlainValue.endOfLine(src, end, inFlow);\n          offset = valueEnd;\n        }\n      }\n\n      if (this.valueRange.isEmpty()) this.valueRange.start = start;\n      this.valueRange.end = valueEnd;\n      return valueEnd;\n    }\n    /**\n     * Parses a plain value from the source\n     *\n     * Accepted forms are:\n     * ```\n     * #comment\n     *\n     * first line\n     *\n     * first line #comment\n     *\n     * first line\n     * block\n     * lines\n     *\n     * #comment\n     * block\n     * lines\n     * ```\n     * where block lines are empty or have an indent level greater than `indent`.\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar, may be `\\n`\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var inFlow = context.inFlow,\n          src = context.src;\n      var offset = start;\n      var ch = src[offset];\n\n      if (ch && ch !== '#' && ch !== '\\n') {\n        offset = PlainValue.endOfLine(src, start, inFlow);\n      }\n\n      this.valueRange = new _Range.default(start, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n\n      if (!this.hasComment || this.valueRange.isEmpty()) {\n        offset = this.parseBlockValue(offset);\n      }\n\n      return offset;\n    }\n  }, {\n    key: \"strValue\",\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var src = this.context.src;\n      var ch = src[end - 1];\n\n      while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) {\n        ch = src[--end - 1];\n      }\n\n      ch = src[start];\n\n      while (start < end && (ch === '\\n' || ch === '\\t' || ch === ' ')) {\n        ch = src[++start];\n      }\n\n      var str = '';\n\n      for (var i = start; i < end; ++i) {\n        var _ch = src[i];\n\n        if (_ch === '\\n') {\n          var _Node$foldNewline = _Node2.default.foldNewline(src, i, -1),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset;\n\n          str += fold;\n          i = offset;\n        } else if (_ch === ' ' || _ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (i < end && (next === ' ' || next === '\\t')) {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : _ch;\n        } else {\n          str += _ch;\n        }\n      }\n\n      return str;\n    }\n  }], [{\n    key: \"endOfLine\",\n    value: function endOfLine(src, start, inFlow) {\n      var ch = src[start];\n      var offset = start;\n\n      while (ch && ch !== '\\n') {\n        if (inFlow && (ch === '[' || ch === ']' || ch === '{' || ch === '}' || ch === ',')) break;\n        var next = src[offset + 1];\n        if (ch === ':' && (!next || next === '\\n' || next === '\\t' || next === ' ' || inFlow && next === ',')) break;\n        if ((ch === ' ' || ch === '\\t') && next === '#') break;\n        offset += 1;\n        ch = next;\n      }\n\n      return offset;\n    }\n  }]);\n  return PlainValue;\n}(_Node2.default);\n\nexports.default = PlainValue;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _errors = require(\"../errors\");\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar QuoteDouble =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(QuoteDouble, _Node);\n\n  function QuoteDouble() {\n    (0, _classCallCheck2.default)(this, QuoteDouble);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QuoteDouble).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(QuoteDouble, [{\n    key: \"parseCharCode\",\n    value: function parseCharCode(offset, length, errors) {\n      var src = this.context.src;\n      var cc = src.substr(offset, length);\n      var ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n      var code = ok ? parseInt(cc, 16) : NaN;\n\n      if (isNaN(code)) {\n        errors.push(new _errors.YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(offset - 2, length + 2))));\n        return src.substr(offset - 2, length + 2);\n      }\n\n      return String.fromCodePoint(code);\n    }\n    /**\n     * Parses a \"double quoted\" value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n\n  }, {\n    key: \"parse\",\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteDouble.endOfQuote(src, start + 1);\n      this.valueRange = new _Range.default(start, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }, {\n    key: \"strValue\",\n\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== '\"') errors.push(new _errors.YAMLSyntaxError(this, 'Missing closing \"quote')); // Using String#replace is too painful with escaped newlines preceded by\n      // escaped backslashes; also, this should be faster.\n\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (_Node2.default.atDocumentBoundary(src, i + 1)) errors.push(new _errors.YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = _Node2.default.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new _errors.YAMLSemanticError(this, 'Multi-line double-quoted string needs to be sufficiently indented'));\n        } else if (ch === '\\\\') {\n          i += 1;\n\n          switch (src[i]) {\n            case '0':\n              str += '\\0';\n              break;\n            // null character\n\n            case 'a':\n              str += '\\x07';\n              break;\n            // bell character\n\n            case 'b':\n              str += '\\b';\n              break;\n            // backspace\n\n            case 'e':\n              str += '\\x1b';\n              break;\n            // escape character\n\n            case 'f':\n              str += '\\f';\n              break;\n            // form feed\n\n            case 'n':\n              str += '\\n';\n              break;\n            // line feed\n\n            case 'r':\n              str += '\\r';\n              break;\n            // carriage return\n\n            case 't':\n              str += '\\t';\n              break;\n            // horizontal tab\n\n            case 'v':\n              str += '\\v';\n              break;\n            // vertical tab\n\n            case 'N':\n              str += \"\\x85\";\n              break;\n            // Unicode next line\n\n            case '_':\n              str += \"\\xA0\";\n              break;\n            // Unicode non-breaking space\n\n            case 'L':\n              str += \"\\u2028\";\n              break;\n            // Unicode line separator\n\n            case 'P':\n              str += \"\\u2029\";\n              break;\n            // Unicode paragraph separator\n\n            case ' ':\n              str += ' ';\n              break;\n\n            case '\"':\n              str += '\"';\n              break;\n\n            case '/':\n              str += '/';\n              break;\n\n            case '\\\\':\n              str += '\\\\';\n              break;\n\n            case '\\t':\n              str += '\\t';\n              break;\n\n            case 'x':\n              str += this.parseCharCode(i + 1, 2, errors);\n              i += 2;\n              break;\n\n            case 'u':\n              str += this.parseCharCode(i + 1, 4, errors);\n              i += 4;\n              break;\n\n            case 'U':\n              str += this.parseCharCode(i + 1, 8, errors);\n              i += 8;\n              break;\n\n            case '\\n':\n              // skip escaped newlines, but still trim the following line\n              while (src[i + 1] === ' ' || src[i + 1] === '\\t') {\n                i += 1;\n              }\n\n              break;\n\n            default:\n              errors.push(new _errors.YAMLSyntaxError(this, \"Invalid escape sequence \".concat(src.substr(i - 1, 2))));\n              str += '\\\\' + src[i];\n          }\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch && ch !== '\"') {\n        offset += ch === '\\\\' ? 2 : 1;\n        ch = src[offset];\n      }\n\n      return offset + 1;\n    }\n  }]);\n  return QuoteDouble;\n}(_Node2.default);\n\nexports.default = QuoteDouble;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _errors = require(\"../errors\");\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Range = _interopRequireDefault(require(\"./Range\"));\n\nvar QuoteSingle =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(QuoteSingle, _Node);\n\n  function QuoteSingle() {\n    (0, _classCallCheck2.default)(this, QuoteSingle);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(QuoteSingle).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(QuoteSingle, [{\n    key: \"parse\",\n\n    /**\n     * Parses a 'single quoted' value from the source\n     *\n     * @param {ParseContext} context\n     * @param {number} start - Index of first character\n     * @returns {number} - Index of the character after this scalar\n     */\n    value: function parse(context, start) {\n      this.context = context;\n      var src = context.src;\n      var offset = QuoteSingle.endOfQuote(src, start + 1);\n      this.valueRange = new _Range.default(start, offset);\n      offset = _Node2.default.endOfWhiteSpace(src, offset);\n      offset = this.parseComment(offset);\n      return offset;\n    }\n  }, {\n    key: \"strValue\",\n\n    /**\n     * @returns {string | { str: string, errors: YAMLSyntaxError[] }}\n     */\n    get: function get() {\n      if (!this.valueRange || !this.context) return null;\n      var errors = [];\n      var _this$valueRange = this.valueRange,\n          start = _this$valueRange.start,\n          end = _this$valueRange.end;\n      var _this$context = this.context,\n          indent = _this$context.indent,\n          src = _this$context.src;\n      if (src[end - 1] !== \"'\") errors.push(new _errors.YAMLSyntaxError(this, \"Missing closing 'quote\"));\n      var str = '';\n\n      for (var i = start + 1; i < end - 1; ++i) {\n        var ch = src[i];\n\n        if (ch === '\\n') {\n          if (_Node2.default.atDocumentBoundary(src, i + 1)) errors.push(new _errors.YAMLSemanticError(this, 'Document boundary indicators are not allowed within string values'));\n\n          var _Node$foldNewline = _Node2.default.foldNewline(src, i, indent),\n              fold = _Node$foldNewline.fold,\n              offset = _Node$foldNewline.offset,\n              error = _Node$foldNewline.error;\n\n          str += fold;\n          i = offset;\n          if (error) errors.push(new _errors.YAMLSemanticError(this, 'Multi-line single-quoted string needs to be sufficiently indented'));\n        } else if (ch === \"'\") {\n          str += ch;\n          i += 1;\n          if (src[i] !== \"'\") errors.push(new _errors.YAMLSyntaxError(this, 'Unescaped single quote? This should not happen.'));\n        } else if (ch === ' ' || ch === '\\t') {\n          // trim trailing whitespace\n          var wsStart = i;\n          var next = src[i + 1];\n\n          while (next === ' ' || next === '\\t') {\n            i += 1;\n            next = src[i + 1];\n          }\n\n          if (next !== '\\n') str += i > wsStart ? src.slice(wsStart, i + 1) : ch;\n        } else {\n          str += ch;\n        }\n      }\n\n      return errors.length > 0 ? {\n        errors: errors,\n        str: str\n      } : str;\n    }\n  }], [{\n    key: \"endOfQuote\",\n    value: function endOfQuote(src, offset) {\n      var ch = src[offset];\n\n      while (ch) {\n        if (ch === \"'\") {\n          if (src[offset + 1] !== \"'\") break;\n          ch = src[offset += 2];\n        } else {\n          ch = src[offset += 1];\n        }\n      }\n\n      return offset + 1;\n    }\n  }]);\n  return QuoteSingle;\n}(_Node2.default);\n\nexports.default = QuoteSingle;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar Range =\n/*#__PURE__*/\nfunction () {\n  (0, _createClass2.default)(Range, null, [{\n    key: \"copy\",\n    value: function copy(orig) {\n      return new Range(orig.start, orig.end);\n    }\n  }]);\n\n  function Range(start, end) {\n    (0, _classCallCheck2.default)(this, Range);\n    this.start = start;\n    this.end = end || start;\n  }\n\n  (0, _createClass2.default)(Range, [{\n    key: \"isEmpty\",\n    value: function isEmpty() {\n      return typeof this.start !== 'number' || !this.end || this.end <= this.start;\n    }\n    /**\n     * Set `origStart` and `origEnd` to point to the original source range for\n     * this node, which may differ due to dropped CR characters.\n     *\n     * @param {number[]} cr - Positions of dropped CR characters\n     * @param {number} offset - Starting index of `cr` from the last call\n     * @returns {number} - The next offset, matching the one found for `origStart`\n     */\n\n  }, {\n    key: \"setOrigRange\",\n    value: function setOrigRange(cr, offset) {\n      var start = this.start,\n          end = this.end;\n\n      if (cr.length === 0 || end <= cr[0]) {\n        this.origStart = start;\n        this.origEnd = end;\n        return offset;\n      }\n\n      var i = offset;\n\n      while (i < cr.length) {\n        if (cr[i] > start) break;else ++i;\n      }\n\n      this.origStart = start + i;\n      var nextOffset = i;\n\n      while (i < cr.length) {\n        // if end was at \\n, it should now be at \\r\n        if (cr[i] >= end) break;else ++i;\n      }\n\n      this.origEnd = end + i;\n      return nextOffset;\n    }\n  }]);\n  return Range;\n}();\n\nexports.default = Range;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parse;\n\nvar _Document = _interopRequireDefault(require(\"./Document\"));\n\nvar _ParseContext = _interopRequireDefault(require(\"./ParseContext\"));\n\n// Published as 'yaml/parse-cst'\nfunction parse(src) {\n  var cr = [];\n\n  if (src.indexOf('\\r') !== -1) {\n    src = src.replace(/\\r\\n?/g, function (match, offset) {\n      if (match.length > 1) cr.push(offset);\n      return '\\n';\n    });\n  }\n\n  var documents = [];\n  var offset = 0;\n\n  do {\n    var doc = new _Document.default();\n    var context = new _ParseContext.default({\n      src: src\n    });\n    offset = doc.parse(context, offset);\n    documents.push(doc);\n  } while (offset < src.length);\n\n  documents.setOrigRanges = function () {\n    if (cr.length === 0) return false;\n\n    for (var i = 1; i < cr.length; ++i) {\n      cr[i] -= i;\n    }\n\n    var crOffset = 0;\n\n    for (var _i = 0; _i < documents.length; ++_i) {\n      crOffset = documents[_i].setOrigRanges(cr, crOffset);\n    }\n\n    cr.splice(0, cr.length);\n    return true;\n  };\n\n  documents.toString = function () {\n    return documents.join('...\\n');\n  };\n\n  return documents;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getLinePos = getLinePos;\nexports.getLine = getLine;\nexports.getPrettyContext = getPrettyContext;\n\nfunction findLineStarts(src) {\n  var ls = [0];\n  var offset = src.indexOf('\\n');\n\n  while (offset !== -1) {\n    offset += 1;\n    ls.push(offset);\n    offset = src.indexOf('\\n', offset);\n  }\n\n  return ls;\n}\n\nfunction getSrcInfo(cst) {\n  var lineStarts, src;\n\n  if (typeof cst === 'string') {\n    lineStarts = findLineStarts(cst);\n    src = cst;\n  } else {\n    if (Array.isArray(cst)) cst = cst[0];\n\n    if (cst && cst.context) {\n      if (!cst.lineStarts) cst.lineStarts = findLineStarts(cst.context.src);\n      lineStarts = cst.lineStarts;\n      src = cst.context.src;\n    }\n  }\n\n  return {\n    lineStarts: lineStarts,\n    src: src\n  };\n}\n/**\n * @typedef {Object} LinePos - One-indexed position in the source\n * @property {number} line\n * @property {number} col\n */\n\n/**\n * Determine the line/col position matching a character offset.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns a one-indexed `{ line, col }` location if found, or\n * `undefined` otherwise.\n *\n * @param {number} offset\n * @param {string|Document|Document[]} cst\n * @returns {?LinePos}\n */\n\n\nfunction getLinePos(offset, cst) {\n  if (typeof offset !== 'number' || offset < 0) return null;\n\n  var _getSrcInfo = getSrcInfo(cst),\n      lineStarts = _getSrcInfo.lineStarts,\n      src = _getSrcInfo.src;\n\n  if (!lineStarts || !src || offset > src.length) return null;\n\n  for (var i = 0; i < lineStarts.length; ++i) {\n    var start = lineStarts[i];\n\n    if (offset < start) {\n      return {\n        line: i,\n        col: offset - lineStarts[i - 1] + 1\n      };\n    }\n\n    if (offset === start) return {\n      line: i + 1,\n      col: 1\n    };\n  }\n\n  var line = lineStarts.length;\n  return {\n    line: line,\n    col: offset - lineStarts[line - 1] + 1\n  };\n}\n/**\n * Get a specified line from the source.\n *\n * Accepts a source string or a CST document as the second parameter. With\n * the latter, starting indices for lines are cached in the document as\n * `lineStarts: number[]`.\n *\n * Returns the line as a string if found, or `null` otherwise.\n *\n * @param {number} line One-indexed line number\n * @param {string|Document|Document[]} cst\n * @returns {?string}\n */\n\n\nfunction getLine(line, cst) {\n  var _getSrcInfo2 = getSrcInfo(cst),\n      lineStarts = _getSrcInfo2.lineStarts,\n      src = _getSrcInfo2.src;\n\n  if (!lineStarts || !(line >= 1) || line > lineStarts.length) return null;\n  var start = lineStarts[line - 1];\n  var end = lineStarts[line]; // undefined for last line; that's ok for slice()\n\n  while (end && end > start && src[end - 1] === '\\n') {\n    --end;\n  }\n\n  return src.slice(start, end);\n}\n/**\n * Pretty-print the starting line from the source indicated by the range `pos`\n *\n * Trims output to `maxWidth` chars while keeping the starting column visible,\n * using `…` at either end to indicate dropped characters.\n *\n * Returns a two-line string (or `null`) with `\\n` as separator; the second line\n * will hold appropriately indented `^` marks indicating the column range.\n *\n * @param {Object} pos\n * @param {LinePos} pos.start\n * @param {LinePos} [pos.end]\n * @param {string|Document|Document[]*} cst\n * @param {number} [maxWidth=80]\n * @returns {?string}\n */\n\n\nfunction getPrettyContext(_ref, cst) {\n  var start = _ref.start,\n      end = _ref.end;\n  var maxWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 80;\n  var src = getLine(start.line, cst);\n  if (!src) return null;\n  var col = start.col;\n\n  if (src.length > maxWidth) {\n    if (col <= maxWidth - 10) {\n      src = src.substr(0, maxWidth - 1) + '…';\n    } else {\n      var halfWidth = Math.round(maxWidth / 2);\n      if (src.length > col + halfWidth) src = src.substr(0, col + halfWidth - 1) + '…';\n      col -= src.length - maxWidth;\n      src = '…' + src.substr(1 - maxWidth);\n    }\n  }\n\n  var errLen = 1;\n  var errEnd = '';\n\n  if (end) {\n    if (end.line === start.line && col + (end.col - start.col) <= maxWidth + 1) {\n      errLen = end.col - start.col;\n    } else {\n      errLen = Math.min(src.length + 1, maxWidth) - col;\n      errEnd = '…';\n    }\n  }\n\n  var offset = col > 1 ? ' '.repeat(col - 1) : '';\n  var err = '^'.repeat(errLen);\n  return \"\".concat(src, \"\\n\").concat(offset).concat(err).concat(errEnd);\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.YAMLWarning = exports.YAMLSyntaxError = exports.YAMLSemanticError = exports.YAMLReferenceError = exports.YAMLError = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _wrapNativeSuper2 = _interopRequireDefault(require(\"@babel/runtime/helpers/wrapNativeSuper\"));\n\nvar _Node = _interopRequireDefault(require(\"./cst/Node\"));\n\nvar _sourceUtils = require(\"./cst/source-utils\");\n\nvar _Range = _interopRequireDefault(require(\"./cst/Range\"));\n\nvar YAMLError =\n/*#__PURE__*/\nfunction (_Error) {\n  (0, _inherits2.default)(YAMLError, _Error);\n\n  function YAMLError(name, source, message) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, YAMLError);\n    if (!message || !(source instanceof _Node.default)) throw new Error(\"Invalid arguments for new \".concat(name));\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLError).call(this));\n    _this.name = name;\n    _this.message = message;\n    _this.source = source;\n    return _this;\n  }\n\n  (0, _createClass2.default)(YAMLError, [{\n    key: \"makePretty\",\n    value: function makePretty() {\n      if (!this.source) return;\n      this.nodeType = this.source.type;\n      var cst = this.source.context && this.source.context.root;\n\n      if (typeof this.offset === 'number') {\n        this.range = new _Range.default(this.offset, this.offset + 1);\n        var start = cst && (0, _sourceUtils.getLinePos)(this.offset, cst);\n\n        if (start) {\n          var end = {\n            line: start.line,\n            col: start.col + 1\n          };\n          this.linePos = {\n            start: start,\n            end: end\n          };\n        }\n\n        delete this.offset;\n      } else {\n        this.range = this.source.range;\n        this.linePos = this.source.rangeAsLinePos;\n      }\n\n      if (this.linePos) {\n        var _this$linePos$start = this.linePos.start,\n            line = _this$linePos$start.line,\n            col = _this$linePos$start.col;\n        this.message += \" at line \".concat(line, \", column \").concat(col);\n        var ctx = cst && (0, _sourceUtils.getPrettyContext)(this.linePos, cst);\n        if (ctx) this.message += \":\\n\\n\".concat(ctx, \"\\n\");\n      }\n\n      delete this.source;\n    }\n  }]);\n  return YAMLError;\n}((0, _wrapNativeSuper2.default)(Error));\n\nexports.YAMLError = YAMLError;\n\nvar YAMLReferenceError =\n/*#__PURE__*/\nfunction (_YAMLError) {\n  (0, _inherits2.default)(YAMLReferenceError, _YAMLError);\n\n  function YAMLReferenceError(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLReferenceError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLReferenceError).call(this, 'YAMLReferenceError', source, message));\n  }\n\n  return YAMLReferenceError;\n}(YAMLError);\n\nexports.YAMLReferenceError = YAMLReferenceError;\n\nvar YAMLSemanticError =\n/*#__PURE__*/\nfunction (_YAMLError2) {\n  (0, _inherits2.default)(YAMLSemanticError, _YAMLError2);\n\n  function YAMLSemanticError(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLSemanticError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSemanticError).call(this, 'YAMLSemanticError', source, message));\n  }\n\n  return YAMLSemanticError;\n}(YAMLError);\n\nexports.YAMLSemanticError = YAMLSemanticError;\n\nvar YAMLSyntaxError =\n/*#__PURE__*/\nfunction (_YAMLError3) {\n  (0, _inherits2.default)(YAMLSyntaxError, _YAMLError3);\n\n  function YAMLSyntaxError(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLSyntaxError);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSyntaxError).call(this, 'YAMLSyntaxError', source, message));\n  }\n\n  return YAMLSyntaxError;\n}(YAMLError);\n\nexports.YAMLSyntaxError = YAMLSyntaxError;\n\nvar YAMLWarning =\n/*#__PURE__*/\nfunction (_YAMLError4) {\n  (0, _inherits2.default)(YAMLWarning, _YAMLError4);\n\n  function YAMLWarning(source, message) {\n    (0, _classCallCheck2.default)(this, YAMLWarning);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLWarning).call(this, 'YAMLWarning', source, message));\n  }\n\n  return YAMLWarning;\n}(YAMLError);\n\nexports.YAMLWarning = YAMLWarning;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = foldFlowLines;\nexports.FOLD_QUOTED = exports.FOLD_BLOCK = exports.FOLD_FLOW = void 0;\nvar FOLD_FLOW = 'flow';\nexports.FOLD_FLOW = FOLD_FLOW;\nvar FOLD_BLOCK = 'block';\nexports.FOLD_BLOCK = FOLD_BLOCK;\nvar FOLD_QUOTED = 'quoted'; // presumes i+1 is at the start of a line\n// returns index of last newline in more-indented block\n\nexports.FOLD_QUOTED = FOLD_QUOTED;\n\nvar consumeMoreIndentedLines = function consumeMoreIndentedLines(text, i) {\n  var ch = text[i + 1];\n\n  while (ch === ' ' || ch === '\\t') {\n    do {\n      ch = text[i += 1];\n    } while (ch && ch !== '\\n');\n\n    ch = text[i + 1];\n  }\n\n  return i;\n};\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n *\n * @param {string} text\n * @param {string} indent\n * @param {string} [mode='flow'] `'block'` prevents more-indented lines\n *   from being folded; `'quoted'` allows for `\\` escapes, including escaped\n *   newlines\n * @param {Object} options\n * @param {number} [options.indentAtStart] Accounts for leading contents on\n *   the first line, defaulting to `indent.length`\n * @param {number} [options.lineWidth=80]\n * @param {number} [options.minContentWidth=20] Allow highly indented lines to\n *   stretch the line width\n * @param {function} options.onFold Called once if the text is folded\n * @param {function} options.onFold Called once if any line of text exceeds\n *   lineWidth characters\n */\n\n\nfunction foldFlowLines(text, indent, mode, _ref) {\n  var indentAtStart = _ref.indentAtStart,\n      _ref$lineWidth = _ref.lineWidth,\n      lineWidth = _ref$lineWidth === void 0 ? 80 : _ref$lineWidth,\n      _ref$minContentWidth = _ref.minContentWidth,\n      minContentWidth = _ref$minContentWidth === void 0 ? 20 : _ref$minContentWidth,\n      onFold = _ref.onFold,\n      onOverflow = _ref.onOverflow;\n  if (!lineWidth || lineWidth < 0) return text;\n  var endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n  if (text.length <= endStep) return text;\n  var folds = [];\n  var escapedFolds = {};\n  var end = lineWidth - (typeof indentAtStart === 'number' ? indentAtStart : indent.length);\n  var split = undefined;\n  var prev = undefined;\n  var overflow = false;\n  var i = -1;\n\n  if (mode === FOLD_BLOCK) {\n    i = consumeMoreIndentedLines(text, i);\n    if (i !== -1) end = i + endStep;\n  }\n\n  for (var ch; ch = text[i += 1];) {\n    if (mode === FOLD_QUOTED && ch === '\\\\') {\n      switch (text[i + 1]) {\n        case 'x':\n          i += 3;\n          break;\n\n        case 'u':\n          i += 5;\n          break;\n\n        case 'U':\n          i += 9;\n          break;\n\n        default:\n          i += 1;\n      }\n    }\n\n    if (ch === '\\n') {\n      if (mode === FOLD_BLOCK) i = consumeMoreIndentedLines(text, i);\n      end = i + endStep;\n      split = undefined;\n    } else {\n      if (ch === ' ' && prev && prev !== ' ' && prev !== '\\n' && prev !== '\\t') {\n        // space surrounded by non-space can be replaced with newline + indent\n        var next = text[i + 1];\n        if (next && next !== ' ' && next !== '\\n' && next !== '\\t') split = i;\n      }\n\n      if (i >= end) {\n        if (split) {\n          folds.push(split);\n          end = split + endStep;\n          split = undefined;\n        } else if (mode === FOLD_QUOTED) {\n          // white-space collected at end may stretch past lineWidth\n          while (prev === ' ' || prev === '\\t') {\n            prev = ch;\n            ch = text[i += 1];\n            overflow = true;\n          } // i - 2 accounts for not-dropped last char + newline-escaping \\\n\n\n          folds.push(i - 2);\n          escapedFolds[i - 2] = true;\n          end = i - 2 + endStep;\n          split = undefined;\n        } else {\n          overflow = true;\n        }\n      }\n    }\n\n    prev = ch;\n  }\n\n  if (overflow && onOverflow) onOverflow();\n  if (folds.length === 0) return text;\n  if (onFold) onFold();\n  var res = text.slice(0, folds[0]);\n\n  for (var _i = 0; _i < folds.length; ++_i) {\n    var fold = folds[_i];\n\n    var _end = folds[_i + 1] || text.length;\n\n    if (mode === FOLD_QUOTED && escapedFolds[fold]) res += \"\".concat(text[fold], \"\\\\\");\n    res += \"\\n\".concat(indent).concat(text.slice(fold + 1, _end));\n  }\n\n  return res;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _parse = _interopRequireDefault(require(\"./cst/parse\"));\n\nvar _Document = _interopRequireDefault(require(\"./Document\"));\n\nvar _errors = require(\"./errors\");\n\nvar _schema = _interopRequireDefault(require(\"./schema\"));\n\nvar _warnings = require(\"./warnings\");\n\nvar defaultOptions = {\n  anchorPrefix: 'a',\n  customTags: null,\n  keepCstNodes: false,\n  keepNodeTypes: true,\n  keepBlobsInJSON: true,\n  mapAsMap: false,\n  maxAliasCount: 100,\n  prettyErrors: false,\n  // TODO Set true in v2\n  simpleKeys: false,\n  version: '1.2'\n};\n\nfunction createNode(value) {\n  var wrapScalars = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var tag = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (tag === undefined && typeof wrapScalars === 'string') {\n    tag = wrapScalars;\n    wrapScalars = true;\n  }\n\n  var options = Object.assign({}, _Document.default.defaults[defaultOptions.version], defaultOptions);\n  var schema = new _schema.default(options);\n  return schema.createNode(value, wrapScalars, tag);\n}\n\nvar Document =\n/*#__PURE__*/\nfunction (_YAMLDocument) {\n  (0, _inherits2.default)(Document, _YAMLDocument);\n\n  function Document(options) {\n    (0, _classCallCheck2.default)(this, Document);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Document).call(this, Object.assign({}, defaultOptions, options)));\n  }\n\n  return Document;\n}(_Document.default);\n\nfunction parseAllDocuments(src, options) {\n  var stream = [];\n  var prev;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = (0, _parse.default)(src)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var cstDoc = _step.value;\n      var doc = new Document(options);\n      doc.parse(cstDoc, prev);\n      stream.push(doc);\n      prev = doc;\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return stream;\n}\n\nfunction parseDocument(src, options) {\n  var cst = (0, _parse.default)(src);\n  var doc = new Document(options).parse(cst[0]);\n\n  if (cst.length > 1) {\n    var errMsg = 'Source contains multiple documents; please use YAML.parseAllDocuments()';\n    doc.errors.unshift(new _errors.YAMLSemanticError(cst[1], errMsg));\n  }\n\n  return doc;\n}\n\nfunction parse(src, options) {\n  var doc = parseDocument(src, options);\n  doc.warnings.forEach(function (warning) {\n    return (0, _warnings.warn)(warning);\n  });\n  if (doc.errors.length > 0) throw doc.errors[0];\n  return doc.toJSON();\n}\n\nfunction stringify(value, options) {\n  var doc = new Document(options);\n  doc.contents = value;\n  return String(doc);\n}\n\nvar _default = {\n  createNode: createNode,\n  defaultOptions: defaultOptions,\n  Document: Document,\n  parse: parse,\n  parseAllDocuments: parseAllDocuments,\n  parseCST: _parse.default,\n  parseDocument: parseDocument,\n  stringify: stringify\n};\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _Collection = _interopRequireDefault(require(\"./schema/Collection\"));\n\nvar _Pair = _interopRequireDefault(require(\"./schema/Pair\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./schema/Scalar\"));\n\nvar visit = function visit(node, tags) {\n  if (node && (0, _typeof2.default)(node) === 'object') {\n    var tag = node.tag;\n\n    if (node instanceof _Collection.default) {\n      if (tag) tags[tag] = true;\n      node.items.forEach(function (n) {\n        return visit(n, tags);\n      });\n    } else if (node instanceof _Pair.default) {\n      visit(node.key, tags);\n      visit(node.value, tags);\n    } else if (node instanceof _Scalar.default) {\n      if (tag) tags[tag] = true;\n    }\n  }\n\n  return tags;\n};\n\nvar _default = function _default(node) {\n  return Object.keys(visit(node, {}));\n};\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _toJSON2 = _interopRequireDefault(require(\"../toJSON\"));\n\nvar _Collection = _interopRequireDefault(require(\"./Collection\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Pair = _interopRequireDefault(require(\"./Pair\"));\n\nvar getAliasCount = function getAliasCount(node, anchors) {\n  if (node instanceof Alias) {\n    var anchor = anchors.find(function (a) {\n      return a.node === node.source;\n    });\n    return anchor.count * anchor.aliasCount;\n  } else if (node instanceof _Collection.default) {\n    var count = 0;\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = node.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var item = _step.value;\n        var c = getAliasCount(item, anchors);\n        if (c > count) count = c;\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n\n    return count;\n  } else if (node instanceof _Pair.default) {\n    var kc = getAliasCount(node.key, anchors);\n    var vc = getAliasCount(node.value, anchors);\n    return Math.max(kc, vc);\n  }\n\n  return 1;\n};\n\nvar Alias =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Alias, _Node);\n  (0, _createClass2.default)(Alias, null, [{\n    key: \"stringify\",\n    value: function stringify(_ref, _ref2) {\n      var range = _ref.range,\n          source = _ref.source;\n      var anchors = _ref2.anchors,\n          doc = _ref2.doc,\n          implicitKey = _ref2.implicitKey,\n          inStringifyKey = _ref2.inStringifyKey;\n      var anchor = Object.keys(anchors).find(function (a) {\n        return anchors[a] === source;\n      });\n      if (!anchor && inStringifyKey) anchor = doc.anchors.getName(source) || doc.anchors.newName();\n      if (anchor) return \"*\".concat(anchor).concat(implicitKey ? ' ' : '');\n      var msg = doc.anchors.getName(source) ? 'Alias node must be after source node' : 'Source node not found for alias node';\n      throw new Error(\"\".concat(msg, \" [\").concat(range, \"]\"));\n    }\n  }]);\n\n  function Alias(source) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Alias);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Alias).call(this));\n    _this.source = source;\n    _this.type = _constants.Type.ALIAS;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Alias, [{\n    key: \"toJSON\",\n    value: function toJSON(arg, ctx) {\n      var _this2 = this;\n\n      if (!ctx) return (0, _toJSON2.default)(this.source, arg, ctx);\n      var anchors = ctx.anchors,\n          maxAliasCount = ctx.maxAliasCount;\n      var anchor = anchors.find(function (a) {\n        return a.node === _this2.source;\n      });\n\n      if (!anchor || anchor.res === undefined) {\n        var msg = 'This should not happen: Alias anchor was not resolved?';\n        if (this.cstNode) throw new _errors.YAMLReferenceError(this.cstNode, msg);else throw new ReferenceError(msg);\n      }\n\n      if (maxAliasCount >= 0) {\n        anchor.count += 1;\n        if (anchor.aliasCount === 0) anchor.aliasCount = getAliasCount(this.source, anchors);\n\n        if (anchor.count * anchor.aliasCount > maxAliasCount) {\n          var _msg = 'Excessive alias count indicates a resource exhaustion attack';\n          if (this.cstNode) throw new _errors.YAMLReferenceError(this.cstNode, _msg);else throw new ReferenceError(_msg);\n        }\n      }\n\n      return anchor.res;\n    } // Only called when stringifying an alias mapping key while constructing\n    // Object output.\n\n  }, {\n    key: \"toString\",\n    value: function toString(ctx) {\n      return Alias.stringify(this, ctx);\n    }\n  }, {\n    key: \"tag\",\n    set: function set(t) {\n      throw new Error('Alias nodes cannot have tags');\n    }\n  }]);\n  return Alias;\n}(_Node2.default);\n\nexports.default = Alias;\n(0, _defineProperty2.default)(Alias, \"default\", true);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.isEmptyPath = void 0;\n\nvar _toArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _addComment = _interopRequireDefault(require(\"../addComment\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Pair = _interopRequireDefault(require(\"./Pair\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./Scalar\"));\n\n// null, undefined, or an empty non-string iterable (e.g. [])\nvar isEmptyPath = function isEmptyPath(path) {\n  return path == null || (0, _typeof2.default)(path) === 'object' && path[Symbol.iterator]().next().done;\n};\n\nexports.isEmptyPath = isEmptyPath;\n\nvar Collection =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Collection, _Node);\n\n  function Collection() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Collection);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(Collection)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"items\", []);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Collection, [{\n    key: \"addIn\",\n    value: function addIn(path, value) {\n      if (isEmptyPath(path)) this.add(value);else {\n        var _path = (0, _toArray2.default)(path),\n            key = _path[0],\n            rest = _path.slice(1);\n\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.addIn(rest, value);else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n      }\n    }\n  }, {\n    key: \"deleteIn\",\n    value: function deleteIn(_ref) {\n      var _ref2 = (0, _toArray2.default)(_ref),\n          key = _ref2[0],\n          rest = _ref2.slice(1);\n\n      if (rest.length === 0) return this.delete(key);\n      var node = this.get(key, true);\n      if (node instanceof Collection) return node.deleteIn(rest);else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n    }\n  }, {\n    key: \"getIn\",\n    value: function getIn(_ref3, keepScalar) {\n      var _ref4 = (0, _toArray2.default)(_ref3),\n          key = _ref4[0],\n          rest = _ref4.slice(1);\n\n      var node = this.get(key, true);\n      if (rest.length === 0) return !keepScalar && node instanceof _Scalar.default ? node.value : node;else return node instanceof Collection ? node.getIn(rest, keepScalar) : undefined;\n    }\n  }, {\n    key: \"hasAllNullValues\",\n    value: function hasAllNullValues() {\n      return this.items.every(function (node) {\n        if (!(node instanceof _Pair.default)) return false;\n        var n = node.value;\n        return n == null || n instanceof _Scalar.default && n.value == null && !n.commentBefore && !n.comment && !n.tag;\n      });\n    }\n  }, {\n    key: \"hasIn\",\n    value: function hasIn(_ref5) {\n      var _ref6 = (0, _toArray2.default)(_ref5),\n          key = _ref6[0],\n          rest = _ref6.slice(1);\n\n      if (rest.length === 0) return this.has(key);\n      var node = this.get(key, true);\n      return node instanceof Collection ? node.hasIn(rest) : false;\n    }\n  }, {\n    key: \"setIn\",\n    value: function setIn(_ref7, value) {\n      var _ref8 = (0, _toArray2.default)(_ref7),\n          key = _ref8[0],\n          rest = _ref8.slice(1);\n\n      if (rest.length === 0) {\n        this.set(key, value);\n      } else {\n        var node = this.get(key, true);\n        if (node instanceof Collection) node.setIn(rest, value);else throw new Error(\"Expected YAML collection at \".concat(key, \". Remaining path: \").concat(rest));\n      }\n    } // overridden in implementations\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return null;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, _ref9, onComment, onChompKeep) {\n      var _this2 = this;\n\n      var blockItem = _ref9.blockItem,\n          flowChars = _ref9.flowChars,\n          isMap = _ref9.isMap,\n          itemIndent = _ref9.itemIndent;\n      var _ctx = ctx,\n          doc = _ctx.doc,\n          indent = _ctx.indent;\n      var inFlow = this.type && this.type.substr(0, 4) === 'FLOW' || ctx.inFlow;\n      if (inFlow) itemIndent += '  ';\n      var allNullValues = isMap && this.hasAllNullValues();\n      ctx = Object.assign({}, ctx, {\n        allNullValues: allNullValues,\n        indent: itemIndent,\n        inFlow: inFlow,\n        type: null\n      });\n      var chompKeep = false;\n      var hasItemWithNewLine = false;\n      var nodes = this.items.reduce(function (nodes, item, i) {\n        var comment;\n\n        if (item) {\n          if (!chompKeep && item.spaceBefore) nodes.push({\n            type: 'comment',\n            str: ''\n          });\n          if (item.commentBefore) item.commentBefore.match(/^.*$/gm).forEach(function (line) {\n            nodes.push({\n              type: 'comment',\n              str: \"#\".concat(line)\n            });\n          });\n          if (item.comment) comment = item.comment;\n          if (inFlow && (!chompKeep && item.spaceBefore || item.commentBefore || item.comment || item.key && (item.key.commentBefore || item.key.comment) || item.value && (item.value.commentBefore || item.value.comment))) hasItemWithNewLine = true;\n        }\n\n        chompKeep = false;\n        var str = doc.schema.stringify(item, ctx, function () {\n          return comment = null;\n        }, function () {\n          return chompKeep = true;\n        });\n        if (inFlow && !hasItemWithNewLine && str.includes('\\n')) hasItemWithNewLine = true;\n        if (inFlow && i < _this2.items.length - 1) str += ',';\n        str = (0, _addComment.default)(str, itemIndent, comment);\n        if (chompKeep && (comment || inFlow)) chompKeep = false;\n        nodes.push({\n          type: 'item',\n          str: str\n        });\n        return nodes;\n      }, []);\n      var str;\n\n      if (nodes.length === 0) {\n        str = flowChars.start + flowChars.end;\n      } else if (inFlow) {\n        var start = flowChars.start,\n            end = flowChars.end;\n        var strings = nodes.map(function (n) {\n          return n.str;\n        });\n\n        if (hasItemWithNewLine || strings.reduce(function (sum, str) {\n          return sum + str.length + 2;\n        }, 2) > Collection.maxFlowStringSingleLineLength) {\n          str = start;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = strings[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var s = _step.value;\n              str += s ? \"\\n  \".concat(indent).concat(s) : '\\n';\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          str += \"\\n\".concat(indent).concat(end);\n        } else {\n          str = \"\".concat(start, \" \").concat(strings.join(' '), \" \").concat(end);\n        }\n      } else {\n        var _strings = nodes.map(blockItem);\n\n        str = _strings.shift();\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = _strings[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var _s = _step2.value;\n            str += _s ? \"\\n\".concat(indent).concat(_s) : '\\n';\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      if (this.comment) {\n        str += '\\n' + this.comment.replace(/^/gm, \"\".concat(indent, \"#\"));\n        if (onComment) onComment();\n      } else if (chompKeep && onChompKeep) onChompKeep();\n\n      return str;\n    }\n  }]);\n  return Collection;\n}(_Node2.default);\n\nexports.default = Collection;\n(0, _defineProperty2.default)(Collection, \"maxFlowStringSingleLineLength\", 60);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.findPair = findPair;\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _Collection2 = _interopRequireDefault(require(\"./Collection\"));\n\nvar _Pair = _interopRequireDefault(require(\"./Pair\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./Scalar\"));\n\nfunction findPair(items, key) {\n  var k = key instanceof _Scalar.default ? key.value : key;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var it = _step.value;\n\n      if (it instanceof _Pair.default) {\n        if (it.key === key || it.key === k) return it;\n        if (it.key && it.key.value === k) return it;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return undefined;\n}\n\nvar YAMLMap =\n/*#__PURE__*/\nfunction (_Collection) {\n  (0, _inherits2.default)(YAMLMap, _Collection);\n\n  function YAMLMap() {\n    (0, _classCallCheck2.default)(this, YAMLMap);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLMap).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(YAMLMap, [{\n    key: \"add\",\n    value: function add(pair) {\n      if (!pair) pair = new _Pair.default(pair);else if (!(pair instanceof _Pair.default)) pair = new _Pair.default(pair.key || pair, pair.value);\n      var prev = findPair(this.items, pair.key);\n      if (prev) throw new Error(\"Key \".concat(pair.key, \" already set\"));\n      this.items.push(pair);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var it = findPair(this.items, key);\n      if (!it) return false;\n      var del = this.items.splice(this.items.indexOf(it), 1);\n      return del.length > 0;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      var it = findPair(this.items, key);\n      var node = it && it.value;\n      return !keepScalar && node instanceof _Scalar.default ? node.value : node;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return !!findPair(this.items, key);\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var prev = findPair(this.items, key);\n      if (prev) prev.value = value;else this.items.push(new _Pair.default(key, value));\n    }\n    /**\n     * @param {*} arg ignored\n     * @param {*} ctx Conversion context, originally set in Document#toJSON()\n     * @param {Class} Type If set, forces the returned collection type\n     * @returns {*} Instance of Type, Map, or Object\n     */\n\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx, Type) {\n      var map = Type ? new Type() : ctx && ctx.mapAsMap ? new Map() : {};\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var item = _step2.value;\n          item.addToJSMap(ctx, map);\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.items[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var item = _step3.value;\n          if (!(item instanceof _Pair.default)) throw new Error(\"Map items must all be pairs; found \".concat(JSON.stringify(item), \" instead\"));\n        }\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLMap.prototype), \"toString\", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.str;\n        },\n        flowChars: {\n          start: '{',\n          end: '}'\n        },\n        isMap: true,\n        itemIndent: ctx.indent || ''\n      }, onComment, onChompKeep);\n    }\n  }]);\n  return YAMLMap;\n}(_Collection2.default);\n\nexports.default = YAMLMap;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.MERGE_KEY = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _Map = _interopRequireDefault(require(\"./Map\"));\n\nvar _Pair2 = _interopRequireDefault(require(\"./Pair\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./Scalar\"));\n\nvar _Seq = _interopRequireDefault(require(\"./Seq\"));\n\nvar MERGE_KEY = '<<';\nexports.MERGE_KEY = MERGE_KEY;\n\nvar Merge =\n/*#__PURE__*/\nfunction (_Pair) {\n  (0, _inherits2.default)(Merge, _Pair);\n\n  function Merge(pair) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Merge);\n\n    if (pair instanceof _Pair2.default) {\n      var seq = pair.value;\n\n      if (!(seq instanceof _Seq.default)) {\n        seq = new _Seq.default();\n        seq.items.push(pair.value);\n        seq.range = pair.value.range;\n      }\n\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Merge).call(this, pair.key, seq));\n      _this.range = pair.range;\n    } else {\n      _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Merge).call(this, new _Scalar.default(MERGE_KEY), new _Seq.default()));\n    }\n\n    _this.type = 'MERGE_PAIR';\n    return (0, _possibleConstructorReturn2.default)(_this);\n  } // If the value associated with a merge key is a single mapping node, each of\n  // its key/value pairs is inserted into the current mapping, unless the key\n  // already exists in it. If the value associated with the merge key is a\n  // sequence, then this sequence is expected to contain mapping nodes and each\n  // of these nodes is merged in turn according to its order in the sequence.\n  // Keys in mapping nodes earlier in the sequence override keys specified in\n  // later mapping nodes. -- http://yaml.org/type/merge.html\n\n\n  (0, _createClass2.default)(Merge, [{\n    key: \"addToJSMap\",\n    value: function addToJSMap(ctx, map) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.value.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var source = _step.value.source;\n          if (!(source instanceof _Map.default)) throw new Error('Merge sources must be maps');\n          var srcMap = source.toJSON(null, ctx, Map);\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = srcMap[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var _step2$value = (0, _slicedToArray2.default)(_step2.value, 2),\n                  key = _step2$value[0],\n                  value = _step2$value[1];\n\n              if (map instanceof Map) {\n                if (!map.has(key)) map.set(key, value);\n              } else if (map instanceof Set) {\n                map.add(key);\n              } else {\n                if (!Object.prototype.hasOwnProperty.call(map, key)) map[key] = value;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment) {\n      var seq = this.value;\n      if (seq.items.length > 1) return (0, _get2.default)((0, _getPrototypeOf2.default)(Merge.prototype), \"toString\", this).call(this, ctx, onComment);\n      this.value = seq.items[0];\n      var str = (0, _get2.default)((0, _getPrototypeOf2.default)(Merge.prototype), \"toString\", this).call(this, ctx, onComment);\n      this.value = seq;\n      return str;\n    }\n  }]);\n  return Merge;\n}(_Pair2.default);\n\nexports.default = Merge;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar Node = function Node() {\n  (0, _classCallCheck2.default)(this, Node);\n};\n\nexports.default = Node;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _addComment = _interopRequireDefault(require(\"../addComment\"));\n\nvar _constants = require(\"../constants\");\n\nvar _toJSON = _interopRequireDefault(require(\"../toJSON\"));\n\nvar _Collection = _interopRequireDefault(require(\"./Collection\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./Scalar\"));\n\n// Published as 'yaml/pair'\nvar stringifyKey = function stringifyKey(key, jsKey, ctx) {\n  if (jsKey === null) return '';\n  if ((0, _typeof2.default)(jsKey) !== 'object') return String(jsKey);\n  if (key instanceof _Node2.default && ctx && ctx.doc) return key.toString({\n    anchors: {},\n    doc: ctx.doc,\n    indent: '',\n    inFlow: true,\n    inStringifyKey: true\n  });\n  return JSON.stringify(jsKey);\n};\n\nvar Pair =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Pair, _Node);\n\n  function Pair(key) {\n    var _this;\n\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    (0, _classCallCheck2.default)(this, Pair);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Pair).call(this));\n    _this.key = key;\n    _this.value = value;\n    _this.type = 'PAIR';\n    return _this;\n  }\n\n  (0, _createClass2.default)(Pair, [{\n    key: \"addToJSMap\",\n    value: function addToJSMap(ctx, map) {\n      var key = (0, _toJSON.default)(this.key, '', ctx);\n\n      if (map instanceof Map) {\n        var value = (0, _toJSON.default)(this.value, key, ctx);\n        map.set(key, value);\n      } else if (map instanceof Set) {\n        map.add(key);\n      } else {\n        var stringKey = stringifyKey(this.key, key, ctx);\n        map[stringKey] = (0, _toJSON.default)(this.value, stringKey, ctx);\n      }\n\n      return map;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      var pair = ctx && ctx.mapAsMap ? new Map() : {};\n      return this.addToJSMap(ctx, pair);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx || !ctx.doc) return JSON.stringify(this);\n      var simpleKeys = ctx.doc.options.simpleKeys;\n      var key = this.key,\n          value = this.value;\n      var keyComment = key instanceof _Node2.default && key.comment;\n\n      if (simpleKeys) {\n        if (keyComment) {\n          throw new Error('With simple keys, key nodes cannot have comments');\n        }\n\n        if (key instanceof _Collection.default) {\n          var msg = 'With simple keys, collection cannot be used as a key value';\n          throw new Error(msg);\n        }\n      }\n\n      var explicitKey = !simpleKeys && (!key || keyComment || key instanceof _Collection.default || key.type === _constants.Type.BLOCK_FOLDED || key.type === _constants.Type.BLOCK_LITERAL);\n      var _ctx = ctx,\n          doc = _ctx.doc,\n          indent = _ctx.indent;\n      ctx = Object.assign({}, ctx, {\n        implicitKey: !explicitKey,\n        indent: indent + '  '\n      });\n      var chompKeep = false;\n      var str = doc.schema.stringify(key, ctx, function () {\n        return keyComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      str = (0, _addComment.default)(str, ctx.indent, keyComment);\n\n      if (ctx.allNullValues && !simpleKeys) {\n        if (this.comment) {\n          str = (0, _addComment.default)(str, ctx.indent, this.comment);\n          if (onComment) onComment();\n        } else if (chompKeep && !keyComment && onChompKeep) onChompKeep();\n\n        return ctx.inFlow ? str : \"? \".concat(str);\n      }\n\n      str = explicitKey ? \"? \".concat(str, \"\\n\").concat(indent, \":\") : \"\".concat(str, \":\");\n\n      if (this.comment) {\n        // expected (but not strictly required) to be a single-line comment\n        str = (0, _addComment.default)(str, ctx.indent, this.comment);\n        if (onComment) onComment();\n      }\n\n      var vcb = '';\n      var valueComment = null;\n\n      if (value instanceof _Node2.default) {\n        if (value.spaceBefore) vcb = '\\n';\n\n        if (value.commentBefore) {\n          var cs = value.commentBefore.replace(/^/gm, \"\".concat(ctx.indent, \"#\"));\n          vcb += \"\\n\".concat(cs);\n        }\n\n        valueComment = value.comment;\n      } else if (value && (0, _typeof2.default)(value) === 'object') {\n        value = doc.schema.createNode(value, true);\n      }\n\n      ctx.implicitKey = false;\n      chompKeep = false;\n      var valueStr = doc.schema.stringify(value, ctx, function () {\n        return valueComment = null;\n      }, function () {\n        return chompKeep = true;\n      });\n      var ws = ' ';\n\n      if (vcb || this.comment) {\n        ws = \"\".concat(vcb, \"\\n\").concat(ctx.indent);\n      } else if (!explicitKey && value instanceof _Collection.default) {\n        var flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n')) ws = \"\\n\".concat(ctx.indent);\n      }\n\n      if (chompKeep && !valueComment && onChompKeep) onChompKeep();\n      return (0, _addComment.default)(str + ws + valueStr, ctx.indent, valueComment);\n    }\n  }, {\n    key: \"commentBefore\",\n    get: function get() {\n      return this.key && this.key.commentBefore;\n    },\n    set: function set(cb) {\n      if (this.key == null) this.key = new _Scalar.default(null);\n      this.key.commentBefore = cb;\n    }\n  }]);\n  return Pair;\n}(_Node2.default);\n\nexports.default = Pair;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _toJSON2 = _interopRequireDefault(require(\"../toJSON\"));\n\nvar _Node2 = _interopRequireDefault(require(\"./Node\"));\n\n// Published as 'yaml/scalar'\nvar Scalar =\n/*#__PURE__*/\nfunction (_Node) {\n  (0, _inherits2.default)(Scalar, _Node);\n\n  function Scalar(value) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Scalar);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Scalar).call(this));\n    _this.value = value;\n    return _this;\n  }\n\n  (0, _createClass2.default)(Scalar, [{\n    key: \"toJSON\",\n    value: function toJSON(arg, ctx) {\n      return ctx && ctx.keep ? this.value : (0, _toJSON2.default)(this.value, arg, ctx);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return String(this.value);\n    }\n  }]);\n  return Scalar;\n}(_Node2.default);\n\nexports.default = Scalar;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _toJSON2 = _interopRequireDefault(require(\"../toJSON\"));\n\nvar _Collection2 = _interopRequireDefault(require(\"./Collection\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./Scalar\"));\n\n// Published as 'yaml/seq'\nfunction asItemIndex(key) {\n  var idx = key instanceof _Scalar.default ? key.value : key;\n  if (idx && typeof idx === 'string') idx = Number(idx);\n  return Number.isInteger(idx) && idx >= 0 ? idx : null;\n}\n\nvar YAMLSeq =\n/*#__PURE__*/\nfunction (_Collection) {\n  (0, _inherits2.default)(YAMLSeq, _Collection);\n\n  function YAMLSeq() {\n    (0, _classCallCheck2.default)(this, YAMLSeq);\n    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSeq).apply(this, arguments));\n  }\n\n  (0, _createClass2.default)(YAMLSeq, [{\n    key: \"add\",\n    value: function add(value) {\n      this.items.push(value);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') return false;\n      var del = this.items.splice(idx, 1);\n      return del.length > 0;\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepScalar) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') return undefined;\n      var it = this.items[idx];\n      return !keepScalar && it instanceof _Scalar.default ? it.value : it;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      var idx = asItemIndex(key);\n      return typeof idx === 'number' && idx < this.items.length;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      var idx = asItemIndex(key);\n      if (typeof idx !== 'number') throw new Error(\"Expected a valid index, not \".concat(key, \".\"));\n      this.items[idx] = value;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      var seq = [];\n      if (ctx && ctx.onCreate) ctx.onCreate(seq);\n      var i = 0;\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var item = _step.value;\n          seq.push((0, _toJSON2.default)(item, String(i++), ctx));\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return seq;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLSeq.prototype), \"toString\", this).call(this, ctx, {\n        blockItem: function blockItem(n) {\n          return n.type === 'comment' ? n.str : \"- \".concat(n.str);\n        },\n        flowChars: {\n          start: '[',\n          end: ']'\n        },\n        isMap: false,\n        itemIndent: (ctx.indent || '') + '  '\n      }, onComment, onChompKeep);\n    }\n  }]);\n  return YAMLSeq;\n}(_Collection2.default);\n\nexports.default = YAMLSeq;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _warnings = require(\"../warnings\");\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _stringify = require(\"../stringify\");\n\nvar _tags = require(\"../tags\");\n\nvar _string = require(\"../tags/failsafe/string\");\n\nvar _Alias = _interopRequireDefault(require(\"./Alias\"));\n\nvar _Collection = _interopRequireDefault(require(\"./Collection\"));\n\nvar _Node = _interopRequireDefault(require(\"./Node\"));\n\nvar _Pair = _interopRequireDefault(require(\"./Pair\"));\n\nvar _Scalar = _interopRequireDefault(require(\"./Scalar\"));\n\nvar isMap = function isMap(_ref) {\n  var type = _ref.type;\n  return type === _constants.Type.FLOW_MAP || type === _constants.Type.MAP;\n};\n\nvar isSeq = function isSeq(_ref2) {\n  var type = _ref2.type;\n  return type === _constants.Type.FLOW_SEQ || type === _constants.Type.SEQ;\n};\n\nvar Schema =\n/*#__PURE__*/\nfunction () {\n  function Schema(_ref3) {\n    var customTags = _ref3.customTags,\n        merge = _ref3.merge,\n        schema = _ref3.schema,\n        deprecatedCustomTags = _ref3.tags;\n    (0, _classCallCheck2.default)(this, Schema);\n    this.merge = !!merge;\n    this.name = schema;\n    this.tags = _tags.schemas[schema.replace(/\\W/g, '')]; // 'yaml-1.1' -> 'yaml11'\n\n    if (!this.tags) {\n      var keys = Object.keys(_tags.schemas).map(function (key) {\n        return JSON.stringify(key);\n      }).join(', ');\n      throw new Error(\"Unknown schema \\\"\".concat(schema, \"\\\"; use one of \").concat(keys));\n    }\n\n    if (!customTags && deprecatedCustomTags) {\n      customTags = deprecatedCustomTags;\n      (0, _warnings.warnOptionDeprecation)('tags', 'customTags');\n    }\n\n    if (Array.isArray(customTags)) {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = customTags[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var tag = _step.value;\n          this.tags = this.tags.concat(tag);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    } else if (typeof customTags === 'function') {\n      this.tags = customTags(this.tags.slice());\n    }\n\n    for (var i = 0; i < this.tags.length; ++i) {\n      var _tag = this.tags[i];\n\n      if (typeof _tag === 'string') {\n        var tagObj = _tags.tags[_tag];\n\n        if (!tagObj) {\n          var _keys = Object.keys(_tags.tags).map(function (key) {\n            return JSON.stringify(key);\n          }).join(', ');\n\n          throw new Error(\"Unknown custom tag \\\"\".concat(_tag, \"\\\"; use one of \").concat(_keys));\n        }\n\n        this.tags[i] = tagObj;\n      }\n    }\n  }\n\n  (0, _createClass2.default)(Schema, [{\n    key: \"createNode\",\n    value: function createNode(value, wrapScalars, tag, ctx) {\n      if (value instanceof _Node.default) return value;\n      var tagObj;\n\n      if (tag) {\n        if (tag.startsWith('!!')) tag = Schema.defaultPrefix + tag.slice(2);\n        var match = this.tags.filter(function (t) {\n          return t.tag === tag;\n        });\n        tagObj = match.find(function (t) {\n          return !t.format;\n        }) || match[0];\n        if (!tagObj) throw new Error(\"Tag \".concat(tag, \" not found\"));\n      } else {\n        // TODO: deprecate/remove class check\n        tagObj = this.tags.find(function (t) {\n          return (t.identify && t.identify(value) || t.class && value instanceof t.class) && !t.format;\n        });\n\n        if (!tagObj) {\n          if (typeof value.toJSON === 'function') value = value.toJSON();\n          if ((0, _typeof2.default)(value) !== 'object') return wrapScalars ? new _Scalar.default(value) : value;\n          tagObj = value instanceof Map ? _tags.tags.map : value[Symbol.iterator] ? _tags.tags.seq : _tags.tags.map;\n        }\n      }\n\n      if (!ctx) ctx = {\n        wrapScalars: wrapScalars\n      };else ctx.wrapScalars = wrapScalars;\n\n      if (ctx.onTagObj) {\n        ctx.onTagObj(tagObj);\n        delete ctx.onTagObj;\n      }\n\n      var obj = {};\n\n      if (value && (0, _typeof2.default)(value) === 'object' && ctx.prevObjects) {\n        var prev = ctx.prevObjects.find(function (o) {\n          return o.value === value;\n        });\n\n        if (prev) {\n          var alias = new _Alias.default(prev); // leaves source dirty; must be cleaned by caller\n\n          ctx.aliasNodes.push(alias);\n          return alias;\n        }\n\n        obj.value = value;\n        ctx.prevObjects.push(obj);\n      }\n\n      obj.node = tagObj.createNode ? tagObj.createNode(this, value, ctx) : wrapScalars ? new _Scalar.default(value) : value;\n      return obj.node;\n    }\n  }, {\n    key: \"createPair\",\n    value: function createPair(key, value, ctx) {\n      var k = this.createNode(key, ctx.wrapScalars, null, ctx);\n      var v = this.createNode(value, ctx.wrapScalars, null, ctx);\n      return new _Pair.default(k, v);\n    } // falls back to string on no match\n\n  }, {\n    key: \"resolveScalar\",\n    value: function resolveScalar(str, tags) {\n      if (!tags) tags = this.tags;\n\n      for (var i = 0; i < tags.length; ++i) {\n        var _tags$i = tags[i],\n            format = _tags$i.format,\n            test = _tags$i.test,\n            resolve = _tags$i.resolve;\n\n        if (test) {\n          var match = str.match(test);\n\n          if (match) {\n            var res = resolve.apply(null, match);\n            if (!(res instanceof _Scalar.default)) res = new _Scalar.default(res);\n            if (format) res.format = format;\n            return res;\n          }\n        }\n      }\n\n      if (this.tags.scalarFallback) str = this.tags.scalarFallback(str);\n      return new _Scalar.default(str);\n    } // sets node.resolved on success\n\n  }, {\n    key: \"resolveNode\",\n    value: function resolveNode(doc, node, tagName) {\n      var tags = this.tags.filter(function (_ref4) {\n        var tag = _ref4.tag;\n        return tag === tagName;\n      });\n      var generic = tags.find(function (_ref5) {\n        var test = _ref5.test;\n        return !test;\n      });\n      if (node.error) doc.errors.push(node.error);\n\n      try {\n        if (generic) {\n          var res = generic.resolve(doc, node);\n          if (!(res instanceof _Collection.default)) res = new _Scalar.default(res);\n          node.resolved = res;\n        } else {\n          var str = (0, _string.resolveString)(doc, node);\n\n          if (typeof str === 'string' && tags.length > 0) {\n            node.resolved = this.resolveScalar(str, tags);\n          }\n        }\n      } catch (error) {\n        if (!error.source) error.source = node;\n        doc.errors.push(error);\n        node.resolved = null;\n      }\n\n      if (!node.resolved) return null;\n      if (tagName && node.tag) node.resolved.tag = tagName;\n      return node.resolved;\n    }\n  }, {\n    key: \"resolveNodeWithFallback\",\n    value: function resolveNodeWithFallback(doc, node, tagName) {\n      var res = this.resolveNode(doc, node, tagName);\n      if (Object.prototype.hasOwnProperty.call(node, 'resolved')) return res;\n      var fallback = isMap(node) ? Schema.defaultTags.MAP : isSeq(node) ? Schema.defaultTags.SEQ : Schema.defaultTags.STR;\n\n      if (fallback) {\n        doc.warnings.push(new _errors.YAMLWarning(node, \"The tag \".concat(tagName, \" is unavailable, falling back to \").concat(fallback)));\n\n        var _res = this.resolveNode(doc, node, fallback);\n\n        _res.tag = tagName;\n        return _res;\n      } else {\n        doc.errors.push(new _errors.YAMLReferenceError(node, \"The tag \".concat(tagName, \" is unavailable\")));\n      }\n\n      return null;\n    }\n  }, {\n    key: \"getTagObject\",\n    value: function getTagObject(item) {\n      if (item instanceof _Alias.default) return _Alias.default;\n\n      if (item.tag) {\n        var match = this.tags.filter(function (t) {\n          return t.tag === item.tag;\n        });\n        if (match.length > 0) return match.find(function (t) {\n          return t.format === item.format;\n        }) || match[0];\n      }\n\n      var tagObj, obj;\n\n      if (item instanceof _Scalar.default) {\n        obj = item.value; // TODO: deprecate/remove class check\n\n        var _match = this.tags.filter(function (t) {\n          return t.identify && t.identify(obj) || t.class && obj instanceof t.class;\n        });\n\n        tagObj = _match.find(function (t) {\n          return t.format === item.format;\n        }) || _match.find(function (t) {\n          return !t.format;\n        });\n      } else {\n        obj = item;\n        tagObj = this.tags.find(function (t) {\n          return t.nodeClass && obj instanceof t.nodeClass;\n        });\n      }\n\n      if (!tagObj) {\n        var name = obj && obj.constructor ? obj.constructor.name : (0, _typeof2.default)(obj);\n        throw new Error(\"Tag not resolved for \".concat(name, \" value\"));\n      }\n\n      return tagObj;\n    } // needs to be called before stringifier to allow for circular anchor refs\n\n  }, {\n    key: \"stringifyProps\",\n    value: function stringifyProps(node, tagObj, _ref6) {\n      var anchors = _ref6.anchors,\n          doc = _ref6.doc;\n      var props = [];\n      var anchor = doc.anchors.getName(node);\n\n      if (anchor) {\n        anchors[anchor] = node;\n        props.push(\"&\".concat(anchor));\n      }\n\n      if (node.tag) {\n        props.push(doc.stringifyTag(node.tag));\n      } else if (!tagObj.default) {\n        props.push(doc.stringifyTag(tagObj.tag));\n      }\n\n      return props.join(' ');\n    }\n  }, {\n    key: \"stringify\",\n    value: function stringify(item, ctx, onComment, onChompKeep) {\n      var tagObj;\n\n      if (!(item instanceof _Node.default)) {\n        var createCtx = {\n          aliasNodes: [],\n          onTagObj: function onTagObj(o) {\n            return tagObj = o;\n          },\n          prevObjects: []\n        };\n        item = this.createNode(item, true, null, createCtx);\n        var anchors = ctx.doc.anchors;\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = createCtx.aliasNodes[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var alias = _step2.value;\n            alias.source = alias.source.node;\n            var name = anchors.getName(alias.source);\n\n            if (!name) {\n              name = anchors.newName();\n              anchors.map[name] = alias.source;\n            }\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n\n      ctx.tags = this;\n      if (item instanceof _Pair.default) return item.toString(ctx, onComment, onChompKeep);\n      if (!tagObj) tagObj = this.getTagObject(item);\n      var props = this.stringifyProps(item, tagObj, ctx);\n      var str = typeof tagObj.stringify === 'function' ? tagObj.stringify(item, ctx, onComment, onChompKeep) : item instanceof _Collection.default ? item.toString(ctx, onComment, onChompKeep) : (0, _stringify.stringifyString)(item, ctx, onComment, onChompKeep);\n      return props ? item instanceof _Collection.default && str[0] !== '{' && str[0] !== '[' ? \"\".concat(props, \"\\n\").concat(ctx.indent).concat(str) : \"\".concat(props, \" \").concat(str) : str;\n    }\n  }]);\n  return Schema;\n}();\n\nexports.default = Schema;\n(0, _defineProperty2.default)(Schema, \"defaultPrefix\", 'tag:yaml.org,2002:');\n(0, _defineProperty2.default)(Schema, \"defaultTags\", {\n  MAP: 'tag:yaml.org,2002:map',\n  SEQ: 'tag:yaml.org,2002:seq',\n  STR: 'tag:yaml.org,2002:str'\n});","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseMap;\n\nvar _constants = require(\"../constants\");\n\nvar _PlainValue = _interopRequireDefault(require(\"../cst/PlainValue\"));\n\nvar _errors = require(\"../errors\");\n\nvar _Map = _interopRequireDefault(require(\"./Map\"));\n\nvar _Merge = _interopRequireWildcard(require(\"./Merge\"));\n\nvar _Pair = _interopRequireDefault(require(\"./Pair\"));\n\nvar _parseUtils = require(\"./parseUtils\");\n\nvar _Alias = _interopRequireDefault(require(\"./Alias\"));\n\nvar _Collection = _interopRequireDefault(require(\"./Collection\"));\n\nfunction parseMap(doc, cst) {\n  if (cst.type !== _constants.Type.MAP && cst.type !== _constants.Type.FLOW_MAP) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a mapping\");\n    doc.errors.push(new _errors.YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === _constants.Type.FLOW_MAP ? resolveFlowMapItems(doc, cst) : resolveBlockMapItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var map = new _Map.default();\n  map.items = items;\n  (0, _parseUtils.resolveComments)(map, comments);\n  var hasCollectionKey = false;\n\n  for (var i = 0; i < items.length; ++i) {\n    var iKey = items[i].key;\n    if (iKey instanceof _Collection.default) hasCollectionKey = true;\n\n    if (doc.schema.merge && iKey && iKey.value === _Merge.MERGE_KEY) {\n      items[i] = new _Merge.default(items[i]);\n      var sources = items[i].value.items;\n      var error = null;\n      sources.some(function (node) {\n        if (node instanceof _Alias.default) {\n          // During parsing, alias sources are CST nodes; to account for\n          // circular references their resolved values can't be used here.\n          var type = node.source.type;\n          if (type === _constants.Type.MAP || type === _constants.Type.FLOW_MAP) return false;\n          return error = 'Merge nodes aliases can only point to maps';\n        }\n\n        return error = 'Merge nodes can only have Alias nodes as values';\n      });\n      if (error) doc.errors.push(new _errors.YAMLSemanticError(cst, error));\n    } else {\n      for (var j = i + 1; j < items.length; ++j) {\n        var jKey = items[j].key;\n\n        if (iKey === jKey || iKey && jKey && Object.prototype.hasOwnProperty.call(iKey, 'value') && iKey.value === jKey.value) {\n          var _msg = \"Map keys must be unique; \\\"\".concat(iKey, \"\\\" is repeated\");\n\n          doc.errors.push(new _errors.YAMLSemanticError(cst, _msg));\n          break;\n        }\n      }\n    }\n  }\n\n  if (hasCollectionKey && !doc.options.mapAsMap) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new _errors.YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = map;\n  return map;\n}\n\nvar valueHasPairComment = function valueHasPairComment(_ref2) {\n  var _ref2$context = _ref2.context,\n      lineStart = _ref2$context.lineStart,\n      node = _ref2$context.node,\n      src = _ref2$context.src,\n      props = _ref2.props;\n  if (props.length === 0) return false;\n  var start = props[0].start;\n  if (node && start > node.valueRange.start) return false;\n  if (src[start] !== _constants.Char.COMMENT) return false;\n\n  for (var i = lineStart; i < start; ++i) {\n    if (src[i] === '\\n') return false;\n  }\n\n  return true;\n};\n\nfunction resolvePairComment(item, pair) {\n  if (!valueHasPairComment(item)) return;\n  var comment = item.getPropValue(0, _constants.Char.COMMENT, true);\n  var found = false;\n  var cb = pair.value.commentBefore;\n\n  if (cb && cb.startsWith(comment)) {\n    pair.value.commentBefore = cb.substr(comment.length + 1);\n    found = true;\n  } else {\n    var cc = pair.value.comment;\n\n    if (!item.node && cc && cc.startsWith(comment)) {\n      pair.value.comment = cc.substr(comment.length + 1);\n      found = true;\n    }\n  }\n\n  if (found) pair.comment = comment;\n}\n\nfunction resolveBlockMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var keyStart = null;\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case _constants.Type.BLANK_LINE:\n        comments.push({\n          afterKey: !!key,\n          before: items.length\n        });\n        break;\n\n      case _constants.Type.COMMENT:\n        comments.push({\n          afterKey: !!key,\n          before: items.length,\n          comment: item.comment\n        });\n        break;\n\n      case _constants.Type.MAP_KEY:\n        if (key !== undefined) items.push(new _Pair.default(key));\n        if (item.error) doc.errors.push(item.error);\n        key = doc.resolveNode(item.node);\n        keyStart = null;\n        break;\n\n      case _constants.Type.MAP_VALUE:\n        {\n          if (key === undefined) key = null;\n          if (item.error) doc.errors.push(item.error);\n\n          if (!item.context.atLineStart && item.node && item.node.type === _constants.Type.MAP && !item.node.context.atLineStart) {\n            var msg = 'Nested mappings are not allowed in compact mappings';\n            doc.errors.push(new _errors.YAMLSemanticError(item.node, msg));\n          }\n\n          var valueNode = item.node;\n\n          if (!valueNode && item.props.length > 0) {\n            // Comments on an empty mapping value need to be preserved, so we\n            // need to construct a minimal empty node here to use instead of the\n            // missing `item.node`. -- eemeli/yaml#19\n            valueNode = new _PlainValue.default(_constants.Type.PLAIN, []);\n            valueNode.context = {\n              parent: item,\n              src: item.context.src\n            };\n            var pos = item.range.start + 1;\n            valueNode.range = {\n              start: pos,\n              end: pos\n            };\n            valueNode.valueRange = {\n              start: pos,\n              end: pos\n            };\n\n            if (typeof item.range.origStart === 'number') {\n              var origPos = item.range.origStart + 1;\n              valueNode.range.origStart = valueNode.range.origEnd = origPos;\n              valueNode.valueRange.origStart = valueNode.valueRange.origEnd = origPos;\n            }\n          }\n\n          var pair = new _Pair.default(key, doc.resolveNode(valueNode));\n          resolvePairComment(item, pair);\n          items.push(pair);\n          (0, _parseUtils.checkKeyLength)(doc.errors, cst, i, key, keyStart);\n          key = undefined;\n          keyStart = null;\n        }\n        break;\n\n      default:\n        if (key !== undefined) items.push(new _Pair.default(key));\n        key = doc.resolveNode(item);\n        keyStart = item.range.start;\n        if (item.error) doc.errors.push(item.error);\n\n        next: for (var j = i + 1;; ++j) {\n          var nextItem = cst.items[j];\n\n          switch (nextItem && nextItem.type) {\n            case _constants.Type.BLANK_LINE:\n            case _constants.Type.COMMENT:\n              continue next;\n\n            case _constants.Type.MAP_VALUE:\n              break next;\n\n            default:\n              doc.errors.push(new _errors.YAMLSemanticError(item, 'Implicit map keys need to be followed by map values'));\n              break next;\n          }\n        }\n\n        if (item.valueRangeContainsNewline) {\n          var _msg2 = 'Implicit map keys need to be on a single line';\n          doc.errors.push(new _errors.YAMLSemanticError(item, _msg2));\n        }\n\n    }\n  }\n\n  if (key !== undefined) items.push(new _Pair.default(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowMapItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var key = undefined;\n  var keyStart = null;\n  var explicitKey = false;\n  var next = '{';\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    (0, _parseUtils.checkKeyLength)(doc.errors, cst, i, key, keyStart);\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char === '?' && key === undefined && !explicitKey) {\n        explicitKey = true;\n        next = ':';\n        continue;\n      }\n\n      if (char === ':') {\n        if (key === undefined) key = null;\n\n        if (next === ':') {\n          next = ',';\n          continue;\n        }\n      } else {\n        if (explicitKey) {\n          if (key === undefined && char !== ',') key = null;\n          explicitKey = false;\n        }\n\n        if (key !== undefined) {\n          items.push(new _Pair.default(key));\n          key = undefined;\n          keyStart = null;\n\n          if (char === ',') {\n            next = ':';\n            continue;\n          }\n        }\n      }\n\n      if (char === '}') {\n        if (i === cst.items.length - 1) continue;\n      } else if (char === next) {\n        next = ':';\n        continue;\n      }\n\n      var msg = \"Flow map contains an unexpected \".concat(char);\n      var err = new _errors.YAMLSyntaxError(cst, msg);\n      err.offset = offset;\n      doc.errors.push(err);\n    } else if (item.type === _constants.Type.BLANK_LINE) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length\n      });\n    } else if (item.type === _constants.Type.COMMENT) {\n      comments.push({\n        afterKey: !!key,\n        before: items.length,\n        comment: item.comment\n      });\n    } else if (key === undefined) {\n      if (next === ',') doc.errors.push(new _errors.YAMLSemanticError(item, 'Separator , missing in flow map'));\n      key = doc.resolveNode(item);\n      keyStart = explicitKey ? null : item.range.start; // TODO: add error for non-explicit multiline plain key\n    } else {\n      if (next !== ',') doc.errors.push(new _errors.YAMLSemanticError(item, 'Indicator : missing in flow map entry'));\n      items.push(new _Pair.default(key, doc.resolveNode(item)));\n      key = undefined;\n      explicitKey = false;\n    }\n  }\n\n  (0, _parseUtils.checkFlowCollectionEnd)(doc.errors, cst);\n  if (key !== undefined) items.push(new _Pair.default(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parseSeq;\n\nvar _constants = require(\"../constants\");\n\nvar _errors = require(\"../errors\");\n\nvar _Pair = _interopRequireDefault(require(\"./Pair\"));\n\nvar _parseUtils = require(\"./parseUtils\");\n\nvar _Seq = _interopRequireDefault(require(\"./Seq\"));\n\nvar _Collection = _interopRequireDefault(require(\"./Collection\"));\n\nfunction parseSeq(doc, cst) {\n  if (cst.type !== _constants.Type.SEQ && cst.type !== _constants.Type.FLOW_SEQ) {\n    var msg = \"A \".concat(cst.type, \" node cannot be resolved as a sequence\");\n    doc.errors.push(new _errors.YAMLSyntaxError(cst, msg));\n    return null;\n  }\n\n  var _ref = cst.type === _constants.Type.FLOW_SEQ ? resolveFlowSeqItems(doc, cst) : resolveBlockSeqItems(doc, cst),\n      comments = _ref.comments,\n      items = _ref.items;\n\n  var seq = new _Seq.default();\n  seq.items = items;\n  (0, _parseUtils.resolveComments)(seq, comments);\n\n  if (!doc.options.mapAsMap && items.some(function (it) {\n    return it instanceof _Pair.default && it.key instanceof _Collection.default;\n  })) {\n    var warn = 'Keys with collection values will be stringified as YAML due to JS Object restrictions. Use mapAsMap: true to avoid this.';\n    doc.warnings.push(new _errors.YAMLWarning(cst, warn));\n  }\n\n  cst.resolved = seq;\n  return seq;\n}\n\nfunction resolveBlockSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    switch (item.type) {\n      case _constants.Type.BLANK_LINE:\n        comments.push({\n          before: items.length\n        });\n        break;\n\n      case _constants.Type.COMMENT:\n        comments.push({\n          comment: item.comment,\n          before: items.length\n        });\n        break;\n\n      case _constants.Type.SEQ_ITEM:\n        if (item.error) doc.errors.push(item.error);\n        items.push(doc.resolveNode(item.node));\n\n        if (item.hasProps) {\n          var msg = 'Sequence items cannot have tags or anchors before the - indicator';\n          doc.errors.push(new _errors.YAMLSemanticError(item, msg));\n        }\n\n        break;\n\n      default:\n        if (item.error) doc.errors.push(item.error);\n        doc.errors.push(new _errors.YAMLSyntaxError(item, \"Unexpected \".concat(item.type, \" node in sequence\")));\n    }\n  }\n\n  return {\n    comments: comments,\n    items: items\n  };\n}\n\nfunction resolveFlowSeqItems(doc, cst) {\n  var comments = [];\n  var items = [];\n  var explicitKey = false;\n  var key = undefined;\n  var keyStart = null;\n  var next = '[';\n\n  for (var i = 0; i < cst.items.length; ++i) {\n    var item = cst.items[i];\n\n    if (typeof item.char === 'string') {\n      var char = item.char,\n          offset = item.offset;\n\n      if (char !== ':' && (explicitKey || key !== undefined)) {\n        if (explicitKey && key === undefined) key = next ? items.pop() : null;\n        items.push(new _Pair.default(key));\n        explicitKey = false;\n        key = undefined;\n        keyStart = null;\n      }\n\n      if (char === next) {\n        next = null;\n      } else if (!next && char === '?') {\n        explicitKey = true;\n      } else if (next !== '[' && char === ':' && key === undefined) {\n        if (next === ',') {\n          key = items.pop();\n\n          if (key instanceof _Pair.default) {\n            var msg = 'Chaining flow sequence pairs is invalid';\n            var err = new _errors.YAMLSemanticError(cst, msg);\n            err.offset = offset;\n            doc.errors.push(err);\n          }\n\n          if (!explicitKey) (0, _parseUtils.checkKeyLength)(doc.errors, cst, i, key, keyStart);\n        } else {\n          key = null;\n        }\n\n        keyStart = null;\n        explicitKey = false; // TODO: add error for non-explicit multiline plain key\n\n        next = null;\n      } else if (next === '[' || char !== ']' || i < cst.items.length - 1) {\n        var _msg = \"Flow sequence contains an unexpected \".concat(char);\n\n        var _err = new _errors.YAMLSyntaxError(cst, _msg);\n\n        _err.offset = offset;\n        doc.errors.push(_err);\n      }\n    } else if (item.type === _constants.Type.BLANK_LINE) {\n      comments.push({\n        before: items.length\n      });\n    } else if (item.type === _constants.Type.COMMENT) {\n      comments.push({\n        comment: item.comment,\n        before: items.length\n      });\n    } else {\n      if (next) {\n        var _msg2 = \"Expected a \".concat(next, \" in flow sequence\");\n\n        doc.errors.push(new _errors.YAMLSemanticError(item, _msg2));\n      }\n\n      var value = doc.resolveNode(item);\n\n      if (key === undefined) {\n        items.push(value);\n      } else {\n        items.push(new _Pair.default(key, value));\n        key = undefined;\n      }\n\n      keyStart = item.range.start;\n      next = ',';\n    }\n  }\n\n  (0, _parseUtils.checkFlowCollectionEnd)(doc.errors, cst);\n  if (key !== undefined) items.push(new _Pair.default(key));\n  return {\n    comments: comments,\n    items: items\n  };\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.checkFlowCollectionEnd = checkFlowCollectionEnd;\nexports.checkKeyLength = checkKeyLength;\nexports.resolveComments = resolveComments;\n\nvar _errors = require(\"../errors\");\n\nvar _constants = require(\"../constants\");\n\nfunction checkFlowCollectionEnd(errors, cst) {\n  var char, name;\n\n  switch (cst.type) {\n    case _constants.Type.FLOW_MAP:\n      char = '}';\n      name = 'flow map';\n      break;\n\n    case _constants.Type.FLOW_SEQ:\n      char = ']';\n      name = 'flow sequence';\n      break;\n\n    default:\n      errors.push(new _errors.YAMLSemanticError(cst, 'Not a flow collection!?'));\n      return;\n  }\n\n  var lastItem;\n\n  for (var i = cst.items.length - 1; i >= 0; --i) {\n    var item = cst.items[i];\n\n    if (!item || item.type !== _constants.Type.COMMENT) {\n      lastItem = item;\n      break;\n    }\n  }\n\n  if (lastItem && lastItem.char !== char) {\n    var msg = \"Expected \".concat(name, \" to end with \").concat(char);\n    var err;\n\n    if (typeof lastItem.offset === 'number') {\n      err = new _errors.YAMLSemanticError(cst, msg);\n      err.offset = lastItem.offset + 1;\n    } else {\n      err = new _errors.YAMLSemanticError(lastItem, msg);\n      if (lastItem.range && lastItem.range.end) err.offset = lastItem.range.end - lastItem.range.start;\n    }\n\n    errors.push(err);\n  }\n}\n\nfunction checkKeyLength(errors, node, itemIdx, key, keyStart) {\n  if (!key || typeof keyStart !== 'number') return;\n  var item = node.items[itemIdx];\n  var keyEnd = item && item.range && item.range.start;\n\n  if (!keyEnd) {\n    for (var i = itemIdx - 1; i >= 0; --i) {\n      var it = node.items[i];\n\n      if (it && it.range) {\n        keyEnd = it.range.end + 2 * (itemIdx - i);\n        break;\n      }\n    }\n  }\n\n  if (keyEnd > keyStart + 1024) {\n    var k = String(key).substr(0, 8) + '...' + String(key).substr(-8);\n    errors.push(new _errors.YAMLSemanticError(node, \"The \\\"\".concat(k, \"\\\" key is too long\")));\n  }\n}\n\nfunction resolveComments(collection, comments) {\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = comments[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var _step$value = _step.value,\n          afterKey = _step$value.afterKey,\n          before = _step$value.before,\n          comment = _step$value.comment;\n      var item = collection.items[before];\n\n      if (!item) {\n        if (comment !== undefined) {\n          if (collection.comment) collection.comment += '\\n' + comment;else collection.comment = comment;\n        }\n      } else {\n        if (afterKey && item.value) item = item.value;\n\n        if (comment === undefined) {\n          if (afterKey || !item.commentBefore) item.spaceBefore = true;\n        } else {\n          if (item.commentBefore) item.commentBefore += '\\n' + comment;else item.commentBefore = comment;\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stringifyNumber = stringifyNumber;\nexports.stringifyString = stringifyString;\n\nvar _addComment = require(\"./addComment\");\n\nvar _constants = require(\"./constants\");\n\nvar _foldFlowLines = _interopRequireWildcard(require(\"./foldFlowLines\"));\n\nvar _options = require(\"./tags/options\");\n\nfunction stringifyNumber(_ref) {\n  var format = _ref.format,\n      minFractionDigits = _ref.minFractionDigits,\n      tag = _ref.tag,\n      value = _ref.value;\n  if (!isFinite(value)) return isNaN(value) ? '.nan' : value < 0 ? '-.inf' : '.inf';\n  var n = JSON.stringify(value);\n\n  if (!format && minFractionDigits && (!tag || tag === 'tag:yaml.org,2002:float') && /^\\d/.test(n)) {\n    var i = n.indexOf('.');\n\n    if (i < 0) {\n      i = n.length;\n      n += '.';\n    }\n\n    var d = minFractionDigits - (n.length - i - 1);\n\n    while (d-- > 0) {\n      n += '0';\n    }\n  }\n\n  return n;\n}\n\nfunction lineLengthOverLimit(str, limit) {\n  var strLen = str.length;\n  if (strLen <= limit) return false;\n\n  for (var i = 0, start = 0; i < strLen; ++i) {\n    if (str[i] === '\\n') {\n      if (i - start > limit) return true;\n      start = i + 1;\n      if (strLen - start <= limit) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction doubleQuotedString(value, _ref2) {\n  var implicitKey = _ref2.implicitKey,\n      indent = _ref2.indent;\n  var _strOptions$doubleQuo = _options.strOptions.doubleQuoted,\n      jsonEncoding = _strOptions$doubleQuo.jsonEncoding,\n      minMultiLineLength = _strOptions$doubleQuo.minMultiLineLength;\n  var json = JSON.stringify(value);\n  if (jsonEncoding) return json;\n  var str = '';\n  var start = 0;\n\n  for (var i = 0, ch = json[i]; ch; ch = json[++i]) {\n    if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n      // space before newline needs to be escaped to not be folded\n      str += json.slice(start, i) + '\\\\ ';\n      i += 1;\n      start = i;\n      ch = '\\\\';\n    }\n\n    if (ch === '\\\\') switch (json[i + 1]) {\n      case 'u':\n        {\n          str += json.slice(start, i);\n          var code = json.substr(i + 2, 4);\n\n          switch (code) {\n            case '0000':\n              str += '\\\\0';\n              break;\n\n            case '0007':\n              str += '\\\\a';\n              break;\n\n            case '000b':\n              str += '\\\\v';\n              break;\n\n            case '001b':\n              str += '\\\\e';\n              break;\n\n            case '0085':\n              str += '\\\\N';\n              break;\n\n            case '00a0':\n              str += '\\\\_';\n              break;\n\n            case '2028':\n              str += '\\\\L';\n              break;\n\n            case '2029':\n              str += '\\\\P';\n              break;\n\n            default:\n              if (code.substr(0, 2) === '00') str += '\\\\x' + code.substr(2);else str += json.substr(i, 6);\n          }\n\n          i += 5;\n          start = i + 1;\n        }\n        break;\n\n      case 'n':\n        if (implicitKey || json[i + 2] === '\"' || json.length < minMultiLineLength) {\n          i += 1;\n        } else {\n          // folding will eat first newline\n          str += json.slice(start, i) + '\\n\\n';\n\n          while (json[i + 2] === '\\\\' && json[i + 3] === 'n' && json[i + 4] !== '\"') {\n            str += '\\n';\n            i += 2;\n          }\n\n          str += indent; // space after newline needs to be escaped to not be folded\n\n          if (json[i + 2] === ' ') str += '\\\\';\n          i += 1;\n          start = i + 1;\n        }\n\n        break;\n\n      default:\n        i += 1;\n    }\n  }\n\n  str = start ? str + json.slice(start) : json;\n  return implicitKey ? str : (0, _foldFlowLines.default)(str, indent, _foldFlowLines.FOLD_QUOTED, _options.strOptions.fold);\n}\n\nfunction singleQuotedString(value, ctx) {\n  var indent = ctx.indent,\n      implicitKey = ctx.implicitKey;\n\n  if (implicitKey) {\n    if (/\\n/.test(value)) return doubleQuotedString(value, ctx);\n  } else {\n    // single quoted string can't have leading or trailing whitespace around newline\n    if (/[ \\t]\\n|\\n[ \\t]/.test(value)) return doubleQuotedString(value, ctx);\n  }\n\n  var res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, \"$&\\n\".concat(indent)) + \"'\";\n  return implicitKey ? res : (0, _foldFlowLines.default)(res, indent, _foldFlowLines.FOLD_FLOW, _options.strOptions.fold);\n}\n\nfunction blockString(_ref3, ctx, onComment, onChompKeep) {\n  var comment = _ref3.comment,\n      type = _ref3.type,\n      value = _ref3.value;\n\n  // 1. Block can't end in whitespace unless the last line is non-empty.\n  // 2. Strings consisting of only whitespace are best rendered explicitly.\n  if (/\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  var indent = ctx.indent || (ctx.forceBlockIndent ? ' ' : '');\n  var indentSize = indent ? '2' : '1'; // root is at -1\n\n  var literal = type === _constants.Type.BLOCK_FOLDED ? false : type === _constants.Type.BLOCK_LITERAL ? true : !lineLengthOverLimit(value, _options.strOptions.fold.lineWidth - indent.length);\n  var header = literal ? '|' : '>';\n  if (!value) return header + '\\n';\n  var wsStart = '';\n  var wsEnd = '';\n  value = value.replace(/[\\n\\t ]*$/, function (ws) {\n    var n = ws.indexOf('\\n');\n\n    if (n === -1) {\n      header += '-'; // strip\n    } else if (value === ws || n !== ws.length - 1) {\n      header += '+'; // keep\n\n      if (onChompKeep) onChompKeep();\n    }\n\n    wsEnd = ws.replace(/\\n$/, '');\n    return '';\n  }).replace(/^[\\n ]*/, function (ws) {\n    if (ws.indexOf(' ') !== -1) header += indentSize;\n    var m = ws.match(/ +$/);\n\n    if (m) {\n      wsStart = ws.slice(0, -m[0].length);\n      return m[0];\n    } else {\n      wsStart = ws;\n      return '';\n    }\n  });\n  if (wsEnd) wsEnd = wsEnd.replace(/\\n+(?!\\n|$)/g, \"$&\".concat(indent));\n  if (wsStart) wsStart = wsStart.replace(/\\n+/g, \"$&\".concat(indent));\n\n  if (comment) {\n    header += ' #' + comment.replace(/ ?[\\r\\n]+/g, ' ');\n    if (onComment) onComment();\n  }\n\n  if (!value) return \"\".concat(header).concat(indentSize, \"\\n\").concat(indent).concat(wsEnd);\n\n  if (literal) {\n    value = value.replace(/\\n+/g, \"$&\".concat(indent));\n    return \"\".concat(header, \"\\n\").concat(indent).concat(wsStart).concat(value).concat(wsEnd);\n  }\n\n  value = value.replace(/\\n+/g, '\\n$&').replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n  //         ^ ind.line  ^ empty     ^ capture next empty lines only at end of indent\n  .replace(/\\n+/g, \"$&\".concat(indent));\n  var body = (0, _foldFlowLines.default)(\"\".concat(wsStart).concat(value).concat(wsEnd), indent, _foldFlowLines.FOLD_BLOCK, _options.strOptions.fold);\n  return \"\".concat(header, \"\\n\").concat(indent).concat(body);\n}\n\nfunction plainString(item, ctx, onComment, onChompKeep) {\n  var comment = item.comment,\n      type = item.type,\n      value = item.value;\n  var actualString = ctx.actualString,\n      implicitKey = ctx.implicitKey,\n      indent = ctx.indent,\n      inFlow = ctx.inFlow,\n      tags = ctx.tags;\n\n  if (implicitKey && /[\\n[\\]{},]/.test(value) || inFlow && /[[\\]{},]/.test(value)) {\n    return doubleQuotedString(value, ctx);\n  }\n\n  if (!value || /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n    // not allowed:\n    // - empty string, '-' or '?'\n    // - start with an indicator character (except [?:-]) or /[?-] /\n    // - '\\n ', ': ' or ' \\n' anywhere\n    // - '#' not preceded by a non-space char\n    // - end with ' ' or ':'\n    return implicitKey || inFlow || value.indexOf('\\n') === -1 ? value.indexOf('\"') !== -1 && value.indexOf(\"'\") === -1 ? singleQuotedString(value, ctx) : doubleQuotedString(value, ctx) : blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  if (!implicitKey && !inFlow && type !== _constants.Type.PLAIN && value.indexOf('\\n') !== -1) {\n    // Where allowed & type not set explicitly, prefer block style for multiline strings\n    return blockString(item, ctx, onComment, onChompKeep);\n  }\n\n  var str = value.replace(/\\n+/g, \"$&\\n\".concat(indent)); // Verify that output will be parsed as a string, as e.g. plain numbers and\n  // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n  // and others in v1.1.\n\n  if (actualString && typeof tags.resolveScalar(str).value !== 'string') {\n    return doubleQuotedString(value, ctx);\n  }\n\n  var body = implicitKey ? str : (0, _foldFlowLines.default)(str, indent, _foldFlowLines.FOLD_FLOW, _options.strOptions.fold);\n\n  if (comment && !inFlow && (body.indexOf('\\n') !== -1 || comment.indexOf('\\n') !== -1)) {\n    if (onComment) onComment();\n    return (0, _addComment.addCommentBefore)(body, indent, comment);\n  }\n\n  return body;\n}\n\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n  var defaultType = _options.strOptions.defaultType;\n  var implicitKey = ctx.implicitKey,\n      inFlow = ctx.inFlow;\n  var _item = item,\n      type = _item.type,\n      value = _item.value;\n\n  if (typeof value !== 'string') {\n    value = String(value);\n    item = Object.assign({}, item, {\n      value: value\n    });\n  }\n\n  var _stringify = function _stringify(_type) {\n    switch (_type) {\n      case _constants.Type.BLOCK_FOLDED:\n      case _constants.Type.BLOCK_LITERAL:\n        return blockString(item, ctx, onComment, onChompKeep);\n\n      case _constants.Type.QUOTE_DOUBLE:\n        return doubleQuotedString(value, ctx);\n\n      case _constants.Type.QUOTE_SINGLE:\n        return singleQuotedString(value, ctx);\n\n      case _constants.Type.PLAIN:\n        return plainString(item, ctx, onComment, onChompKeep);\n\n      default:\n        return null;\n    }\n  };\n\n  if (type !== _constants.Type.QUOTE_DOUBLE && /[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f]/.test(value)) {\n    // force double quotes on control characters\n    type = _constants.Type.QUOTE_DOUBLE;\n  } else if ((implicitKey || inFlow) && (type === _constants.Type.BLOCK_FOLDED || type === _constants.Type.BLOCK_LITERAL)) {\n    // should not happen; blocks are not valid inside flow containers\n    type = _constants.Type.QUOTE_DOUBLE;\n  }\n\n  var res = _stringify(type);\n\n  if (res === null) {\n    res = _stringify(defaultType);\n    if (res === null) throw new Error(\"Unsupported default string type \".concat(defaultType));\n  }\n\n  return res;\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Scalar = _interopRequireDefault(require(\"../schema/Scalar\"));\n\nvar _stringify = require(\"../stringify\");\n\nvar _failsafe = _interopRequireDefault(require(\"./failsafe\"));\n\nvar _options = require(\"./options\");\n\nvar _default = _failsafe.default.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new _Scalar.default(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: _options.nullOptions,\n  stringify: function stringify() {\n    return _options.nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n  resolve: function resolve(str) {\n    return str[0] === 't' || str[0] === 'T';\n  },\n  options: _options.boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? _options.boolOptions.trueStr : _options.boolOptions.falseStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^0o([0-7]+)$/,\n  resolve: function resolve(str, oct) {\n    return parseInt(oct, 8);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return '0o' + value.toString(8);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseInt(str, 10);\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F]+)$/,\n  resolve: function resolve(str, hex) {\n    return parseInt(hex, 16);\n  },\n  stringify: function stringify(_ref3) {\n    var value = _ref3.value;\n    return '0x' + value.toString(16);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?(?:0|[1-9][0-9]*)(\\.[0-9]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(_ref4) {\n    var value = _ref4.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:0|[1-9][0-9]*)\\.([0-9]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new _Scalar.default(parseFloat(str));\n    if (frac && frac[frac.length - 1] === '0') node.minFractionDigits = frac.length;\n    return node;\n  },\n  stringify: _stringify.stringifyNumber\n}]);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _map = _interopRequireDefault(require(\"./map\"));\n\nvar _seq = _interopRequireDefault(require(\"./seq\"));\n\nvar _string = _interopRequireDefault(require(\"./string\"));\n\nvar _default = [_map.default, _seq.default, _string.default];\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _Map = _interopRequireDefault(require(\"../../schema/Map\"));\n\nvar _parseMap = _interopRequireDefault(require(\"../../schema/parseMap\"));\n\nfunction createMap(schema, obj, ctx) {\n  var map = new _Map.default();\n\n  if (obj instanceof Map) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = obj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var _step$value = (0, _slicedToArray2.default)(_step.value, 2),\n            key = _step$value[0],\n            value = _step$value[1];\n\n        map.items.push(schema.createPair(key, value, ctx));\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  } else if (obj && (0, _typeof2.default)(obj) === 'object') {\n    for (var _i = 0, _Object$keys = Object.keys(obj); _i < _Object$keys.length; _i++) {\n      var _key = _Object$keys[_i];\n      map.items.push(schema.createPair(_key, obj[_key], ctx));\n    }\n  }\n\n  return map;\n}\n\nvar _default = {\n  createNode: createMap,\n  default: true,\n  nodeClass: _Map.default,\n  tag: 'tag:yaml.org,2002:map',\n  resolve: _parseMap.default\n};\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _parseSeq = _interopRequireDefault(require(\"../../schema/parseSeq\"));\n\nvar _Seq = _interopRequireDefault(require(\"../../schema/Seq\"));\n\nfunction createSeq(schema, obj, ctx) {\n  var seq = new _Seq.default();\n\n  if (obj && obj[Symbol.iterator]) {\n    var _iteratorNormalCompletion = true;\n    var _didIteratorError = false;\n    var _iteratorError = undefined;\n\n    try {\n      for (var _iterator = obj[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n        var it = _step.value;\n        var v = schema.createNode(it, ctx.wrapScalars, null, ctx);\n        seq.items.push(v);\n      }\n    } catch (err) {\n      _didIteratorError = true;\n      _iteratorError = err;\n    } finally {\n      try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n          _iterator.return();\n        }\n      } finally {\n        if (_didIteratorError) {\n          throw _iteratorError;\n        }\n      }\n    }\n  }\n\n  return seq;\n}\n\nvar _default = {\n  createNode: createSeq,\n  default: true,\n  nodeClass: _Seq.default,\n  tag: 'tag:yaml.org,2002:seq',\n  resolve: _parseSeq.default\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.resolveString = void 0;\n\nvar _stringify = require(\"../../stringify\");\n\nvar _options = require(\"../options\");\n\nvar resolveString = function resolveString(doc, node) {\n  // on error, will return { str: string, errors: Error[] }\n  var res = node.strValue;\n  if (!res) return '';\n  if (typeof res === 'string') return res;\n  res.errors.forEach(function (error) {\n    if (!error.source) error.source = node;\n    doc.errors.push(error);\n  });\n  return res.str;\n};\n\nexports.resolveString = resolveString;\nvar _default = {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: resolveString,\n  stringify: function stringify(item, ctx, onComment, onChompKeep) {\n    ctx = Object.assign({\n      actualString: true\n    }, ctx);\n    return (0, _stringify.stringifyString)(item, ctx, onComment, onChompKeep);\n  },\n  options: _options.strOptions\n};\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tags = exports.schemas = void 0;\n\nvar _core = _interopRequireDefault(require(\"./core\"));\n\nvar _failsafe = _interopRequireDefault(require(\"./failsafe\"));\n\nvar _json = _interopRequireDefault(require(\"./json\"));\n\nvar _yaml = _interopRequireDefault(require(\"./yaml-1.1\"));\n\nvar _map = _interopRequireDefault(require(\"./failsafe/map\"));\n\nvar _seq = _interopRequireDefault(require(\"./failsafe/seq\"));\n\nvar _binary = _interopRequireDefault(require(\"./yaml-1.1/binary\"));\n\nvar _omap = _interopRequireDefault(require(\"./yaml-1.1/omap\"));\n\nvar _pairs = _interopRequireDefault(require(\"./yaml-1.1/pairs\"));\n\nvar _set = _interopRequireDefault(require(\"./yaml-1.1/set\"));\n\nvar _timestamp = require(\"./yaml-1.1/timestamp\");\n\nvar schemas = {\n  core: _core.default,\n  failsafe: _failsafe.default,\n  json: _json.default,\n  yaml11: _yaml.default\n};\nexports.schemas = schemas;\nvar tags = {\n  binary: _binary.default,\n  floatTime: _timestamp.floatTime,\n  intTime: _timestamp.intTime,\n  map: _map.default,\n  omap: _omap.default,\n  pairs: _pairs.default,\n  seq: _seq.default,\n  set: _set.default,\n  timestamp: _timestamp.timestamp\n};\nexports.tags = tags;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _map = _interopRequireDefault(require(\"./failsafe/map\"));\n\nvar _seq = _interopRequireDefault(require(\"./failsafe/seq\"));\n\nvar _Scalar = _interopRequireDefault(require(\"../schema/Scalar\"));\n\nvar _string = require(\"./failsafe/string\");\n\nvar schema = [_map.default, _seq.default, {\n  identify: function identify(value) {\n    return typeof value === 'string';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:str',\n  resolve: _string.resolveString,\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new _Scalar.default(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^null$/,\n  resolve: function resolve() {\n    return null;\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^true$/,\n  resolve: function resolve() {\n    return true;\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^false$/,\n  resolve: function resolve() {\n    return false;\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^-?(?:0|[1-9][0-9]*)$/,\n  resolve: function resolve(str) {\n    return parseInt(str, 10);\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n  resolve: function resolve(str) {\n    return parseFloat(str);\n  },\n  stringify: function stringify(value) {\n    return JSON.stringify(value);\n  }\n}];\n\nschema.scalarFallback = function (str) {\n  throw new SyntaxError(\"Unresolved plain scalar \".concat(JSON.stringify(str)));\n};\n\nvar _default = schema;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.strOptions = exports.nullOptions = exports.boolOptions = exports.binaryOptions = void 0;\n\nvar _constants = require(\"../constants\");\n\nvar binaryOptions = {\n  defaultType: _constants.Type.BLOCK_LITERAL,\n  lineWidth: 76\n};\nexports.binaryOptions = binaryOptions;\nvar boolOptions = {\n  trueStr: 'true',\n  falseStr: 'false'\n};\nexports.boolOptions = boolOptions;\nvar nullOptions = {\n  nullStr: 'null'\n};\nexports.nullOptions = nullOptions;\nvar strOptions = {\n  defaultType: _constants.Type.PLAIN,\n  doubleQuoted: {\n    jsonEncoding: false,\n    minMultiLineLength: 40\n  },\n  fold: {\n    lineWidth: 80,\n    minContentWidth: 20\n  }\n};\nexports.strOptions = strOptions;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _constants = require(\"../../constants\");\n\nvar _errors = require(\"../../errors\");\n\nvar _stringify = require(\"../../stringify\");\n\nvar _string = require(\"../failsafe/string\");\n\nvar _options = require(\"../options\");\n\n/* global atob, btoa, Buffer */\nvar _default = {\n  identify: function identify(value) {\n    return value instanceof Uint8Array;\n  },\n  // Buffer inherits from Uint8Array\n  default: false,\n  tag: 'tag:yaml.org,2002:binary',\n\n  /**\n   * Returns a Buffer in node and an Uint8Array in browsers\n   *\n   * To use the resulting buffer as an image, you'll want to do something like:\n   *\n   *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n   *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n   */\n  resolve: function resolve(doc, node) {\n    if (typeof Buffer === 'function') {\n      var src = (0, _string.resolveString)(doc, node);\n      return Buffer.from(src, 'base64');\n    } else if (typeof atob === 'function') {\n      var _src = atob((0, _string.resolveString)(doc, node));\n\n      var buffer = new Uint8Array(_src.length);\n\n      for (var i = 0; i < _src.length; ++i) {\n        buffer[i] = _src.charCodeAt(i);\n      }\n\n      return buffer;\n    } else {\n      doc.errors.push(new _errors.YAMLReferenceError(node, 'This environment does not support reading binary tags; either Buffer or atob is required'));\n      return null;\n    }\n  },\n  options: _options.binaryOptions,\n  stringify: function stringify(_ref, ctx, onComment, onChompKeep) {\n    var comment = _ref.comment,\n        type = _ref.type,\n        value = _ref.value;\n    var src;\n\n    if (typeof Buffer === 'function') {\n      src = value instanceof Buffer ? value.toString('base64') : Buffer.from(value.buffer).toString('base64');\n    } else if (typeof btoa === 'function') {\n      var s = '';\n\n      for (var i = 0; i < value.length; ++i) {\n        s += String.fromCharCode(value[i]);\n      }\n\n      src = btoa(s);\n    } else {\n      throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n    }\n\n    if (!type) type = _options.binaryOptions.defaultType;\n\n    if (type === _constants.Type.QUOTE_DOUBLE) {\n      value = src;\n    } else {\n      var lineWidth = _options.binaryOptions.lineWidth;\n      var n = Math.ceil(src.length / lineWidth);\n      var lines = new Array(n);\n\n      for (var _i = 0, o = 0; _i < n; ++_i, o += lineWidth) {\n        lines[_i] = src.substr(o, lineWidth);\n      }\n\n      value = lines.join(type === _constants.Type.BLOCK_LITERAL ? '\\n' : ' ');\n    }\n\n    return (0, _stringify.stringifyString)({\n      comment: comment,\n      type: type,\n      value: value\n    }, ctx, onComment, onChompKeep);\n  }\n};\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Scalar = _interopRequireDefault(require(\"../../schema/Scalar\"));\n\nvar _stringify = require(\"../../stringify\");\n\nvar _failsafe = _interopRequireDefault(require(\"../failsafe\"));\n\nvar _options = require(\"../options\");\n\nvar _binary = _interopRequireDefault(require(\"./binary\"));\n\nvar _omap = _interopRequireDefault(require(\"./omap\"));\n\nvar _pairs = _interopRequireDefault(require(\"./pairs\"));\n\nvar _set = _interopRequireDefault(require(\"./set\"));\n\nvar _timestamp = require(\"./timestamp\");\n\nvar _default = _failsafe.default.concat([{\n  identify: function identify(value) {\n    return value == null;\n  },\n  createNode: function createNode(schema, value, ctx) {\n    return ctx.wrapScalars ? new _Scalar.default(null) : null;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:null',\n  test: /^(?:~|[Nn]ull|NULL)?$/,\n  resolve: function resolve() {\n    return null;\n  },\n  options: _options.nullOptions,\n  stringify: function stringify() {\n    return _options.nullOptions.nullStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n  resolve: function resolve() {\n    return true;\n  },\n  options: _options.boolOptions,\n  stringify: function stringify(_ref) {\n    var value = _ref.value;\n    return value ? _options.boolOptions.trueStr : _options.boolOptions.falseStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'boolean';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:bool',\n  test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n  resolve: function resolve() {\n    return false;\n  },\n  options: _options.boolOptions,\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value ? _options.boolOptions.trueStr : _options.boolOptions.falseStr;\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'BIN',\n  test: /^0b([0-1_]+)$/,\n  resolve: function resolve(str, bin) {\n    return parseInt(bin.replace(/_/g, ''), 2);\n  },\n  stringify: function stringify(_ref3) {\n    var value = _ref3.value;\n    return '0b' + value.toString(2);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'OCT',\n  test: /^[-+]?0([0-7_]+)$/,\n  resolve: function resolve(str, oct) {\n    return parseInt(oct.replace(/_/g, ''), 8);\n  },\n  stringify: function stringify(_ref4) {\n    var value = _ref4.value;\n    return (value < 0 ? '-0' : '0') + value.toString(8);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  test: /^[-+]?[0-9][0-9_]*$/,\n  resolve: function resolve(str) {\n    return parseInt(str.replace(/_/g, ''), 10);\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'HEX',\n  test: /^0x([0-9a-fA-F_]+)$/,\n  resolve: function resolve(str, hex) {\n    return parseInt(hex.replace(/_/g, ''), 16);\n  },\n  stringify: function stringify(_ref5) {\n    var value = _ref5.value;\n    return (value < 0 ? '-0x' : '0x') + value.toString(16);\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^(?:[-+]?\\.inf|(\\.nan))$/i,\n  resolve: function resolve(str, nan) {\n    return nan ? NaN : str[0] === '-' ? Number.NEGATIVE_INFINITY : Number.POSITIVE_INFINITY;\n  },\n  stringify: _stringify.stringifyNumber\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'EXP',\n  test: /^[-+]?([0-9][0-9_]*)?(\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n  resolve: function resolve(str) {\n    return parseFloat(str.replace(/_/g, ''));\n  },\n  stringify: function stringify(_ref6) {\n    var value = _ref6.value;\n    return Number(value).toExponential();\n  }\n}, {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  test: /^[-+]?(?:[0-9][0-9_]*)?\\.([0-9_]*)$/,\n  resolve: function resolve(str, frac) {\n    var node = new _Scalar.default(parseFloat(str.replace(/_/g, '')));\n\n    if (frac) {\n      var f = frac.replace(/_/g, '');\n      if (f[f.length - 1] === '0') node.minFractionDigits = f.length;\n    }\n\n    return node;\n  },\n  stringify: _stringify.stringifyNumber\n}], _binary.default, _omap.default, _pairs.default, _set.default, _timestamp.intTime, _timestamp.floatTime, _timestamp.timestamp);\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.YAMLOMap = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _errors = require(\"../../errors\");\n\nvar _toJSON2 = _interopRequireDefault(require(\"../../toJSON\"));\n\nvar _Map = _interopRequireDefault(require(\"../../schema/Map\"));\n\nvar _Pair = _interopRequireDefault(require(\"../../schema/Pair\"));\n\nvar _Scalar = _interopRequireDefault(require(\"../../schema/Scalar\"));\n\nvar _Seq = _interopRequireDefault(require(\"../../schema/Seq\"));\n\nvar _pairs = require(\"./pairs\");\n\nvar YAMLOMap =\n/*#__PURE__*/\nfunction (_YAMLSeq) {\n  (0, _inherits2.default)(YAMLOMap, _YAMLSeq);\n\n  function YAMLOMap() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, YAMLOMap);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLOMap).call(this));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"add\", _Map.default.prototype.add.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"delete\", _Map.default.prototype.delete.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"get\", _Map.default.prototype.get.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"has\", _Map.default.prototype.has.bind((0, _assertThisInitialized2.default)(_this)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)(_this), \"set\", _Map.default.prototype.set.bind((0, _assertThisInitialized2.default)(_this)));\n    _this.tag = YAMLOMap.tag;\n    return _this;\n  }\n\n  (0, _createClass2.default)(YAMLOMap, [{\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      var map = new Map();\n      if (ctx && ctx.onCreate) ctx.onCreate(map);\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.items[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var pair = _step.value;\n          var key = void 0,\n              value = void 0;\n\n          if (pair instanceof _Pair.default) {\n            key = (0, _toJSON2.default)(pair.key, '', ctx);\n            value = (0, _toJSON2.default)(pair.value, key, ctx);\n          } else {\n            key = (0, _toJSON2.default)(pair, '', ctx);\n          }\n\n          if (map.has(key)) throw new Error('Ordered maps must not include duplicate keys');\n          map.set(key, value);\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return map;\n    }\n  }]);\n  return YAMLOMap;\n}(_Seq.default);\n\nexports.YAMLOMap = YAMLOMap;\n(0, _defineProperty2.default)(YAMLOMap, \"tag\", 'tag:yaml.org,2002:omap');\n\nfunction parseOMap(doc, cst) {\n  var pairs = (0, _pairs.parsePairs)(doc, cst);\n  var seenKeys = [];\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = pairs.items[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var key = _step2.value.key;\n\n      if (key instanceof _Scalar.default) {\n        if (seenKeys.includes(key.value)) {\n          var msg = 'Ordered maps must not include duplicate keys';\n          throw new _errors.YAMLSemanticError(cst, msg);\n        } else {\n          seenKeys.push(key.value);\n        }\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n\n  return Object.assign(new YAMLOMap(), pairs);\n}\n\nfunction createOMap(schema, iterable, ctx) {\n  var pairs = (0, _pairs.createPairs)(schema, iterable, ctx);\n  var omap = new YAMLOMap();\n  omap.items = pairs.items;\n  return omap;\n}\n\nvar _default = {\n  identify: function identify(value) {\n    return value instanceof Map;\n  },\n  nodeClass: YAMLOMap,\n  default: false,\n  tag: 'tag:yaml.org,2002:omap',\n  resolve: parseOMap,\n  createNode: createOMap\n};\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parsePairs = parsePairs;\nexports.createPairs = createPairs;\nexports.default = void 0;\n\nvar _errors = require(\"../../errors\");\n\nvar _Map = _interopRequireDefault(require(\"../../schema/Map\"));\n\nvar _Pair = _interopRequireDefault(require(\"../../schema/Pair\"));\n\nvar _parseSeq = _interopRequireDefault(require(\"../../schema/parseSeq\"));\n\nvar _Seq = _interopRequireDefault(require(\"../../schema/Seq\"));\n\nfunction parsePairs(doc, cst) {\n  var seq = (0, _parseSeq.default)(doc, cst);\n\n  for (var i = 0; i < seq.items.length; ++i) {\n    var item = seq.items[i];\n    if (item instanceof _Pair.default) continue;else if (item instanceof _Map.default) {\n      if (item.items.length > 1) {\n        var msg = 'Each pair must have its own sequence indicator';\n        throw new _errors.YAMLSemanticError(cst, msg);\n      }\n\n      var pair = item.items[0] || new _Pair.default();\n      if (item.commentBefore) pair.commentBefore = pair.commentBefore ? \"\".concat(item.commentBefore, \"\\n\").concat(pair.commentBefore) : item.commentBefore;\n      if (item.comment) pair.comment = pair.comment ? \"\".concat(item.comment, \"\\n\").concat(pair.comment) : item.comment;\n      item = pair;\n    }\n    seq.items[i] = item instanceof _Pair.default ? item : new _Pair.default(item);\n  }\n\n  return seq;\n}\n\nfunction createPairs(schema, iterable, ctx) {\n  var pairs = new _Seq.default();\n  pairs.tag = 'tag:yaml.org,2002:pairs';\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var it = _step.value;\n      var key = void 0,\n          value = void 0;\n\n      if (Array.isArray(it)) {\n        if (it.length === 2) {\n          key = it[0];\n          value = it[1];\n        } else throw new TypeError(\"Expected [key, value] tuple: \".concat(it));\n      } else if (it && it instanceof Object) {\n        var keys = Object.keys(it);\n\n        if (keys.length === 1) {\n          key = keys[0];\n          value = it[key];\n        } else throw new TypeError(\"Expected { key: value } tuple: \".concat(it));\n      } else {\n        key = it;\n      }\n\n      var pair = schema.createPair(key, value, ctx);\n      pairs.items.push(pair);\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return pairs;\n}\n\nvar _default = {\n  default: false,\n  tag: 'tag:yaml.org,2002:pairs',\n  resolve: parsePairs,\n  createNode: createPairs\n};\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.YAMLSet = void 0;\n\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _errors = require(\"../../errors\");\n\nvar _Map = _interopRequireWildcard(require(\"../../schema/Map\"));\n\nvar _Pair = _interopRequireDefault(require(\"../../schema/Pair\"));\n\nvar _parseMap = _interopRequireDefault(require(\"../../schema/parseMap\"));\n\nvar _Scalar = _interopRequireDefault(require(\"../../schema/Scalar\"));\n\nvar YAMLSet =\n/*#__PURE__*/\nfunction (_YAMLMap) {\n  (0, _inherits2.default)(YAMLSet, _YAMLMap);\n\n  function YAMLSet() {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, YAMLSet);\n    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(YAMLSet).call(this));\n    _this.tag = YAMLSet.tag;\n    return _this;\n  }\n\n  (0, _createClass2.default)(YAMLSet, [{\n    key: \"add\",\n    value: function add(key) {\n      var pair = key instanceof _Pair.default ? key : new _Pair.default(key);\n      var prev = (0, _Map.findPair)(this.items, pair.key);\n      if (!prev) this.items.push(pair);\n    }\n  }, {\n    key: \"get\",\n    value: function get(key, keepPair) {\n      var pair = (0, _Map.findPair)(this.items, key);\n      return !keepPair && pair instanceof _Pair.default ? pair.key instanceof _Scalar.default ? pair.key.value : pair.key : pair;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, value) {\n      if (typeof value !== 'boolean') throw new Error(\"Expected boolean value for set(key, value) in a YAML set, not \".concat((0, _typeof2.default)(value)));\n      var prev = (0, _Map.findPair)(this.items, key);\n\n      if (prev && !value) {\n        this.items.splice(this.items.indexOf(prev), 1);\n      } else if (!prev && value) {\n        this.items.push(new _Pair.default(key));\n      }\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON(_, ctx) {\n      return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLSet.prototype), \"toJSON\", this).call(this, _, ctx, Set);\n    }\n  }, {\n    key: \"toString\",\n    value: function toString(ctx, onComment, onChompKeep) {\n      if (!ctx) return JSON.stringify(this);\n      if (this.hasAllNullValues()) return (0, _get2.default)((0, _getPrototypeOf2.default)(YAMLSet.prototype), \"toString\", this).call(this, ctx, onComment, onChompKeep);else throw new Error('Set items must all have null values');\n    }\n  }]);\n  return YAMLSet;\n}(_Map.default);\n\nexports.YAMLSet = YAMLSet;\n(0, _defineProperty2.default)(YAMLSet, \"tag\", 'tag:yaml.org,2002:set');\n\nfunction parseSet(doc, cst) {\n  var map = (0, _parseMap.default)(doc, cst);\n  if (!map.hasAllNullValues()) throw new _errors.YAMLSemanticError(cst, 'Set items must all have null values');\n  return Object.assign(new YAMLSet(), map);\n}\n\nfunction createSet(schema, iterable, ctx) {\n  var set = new YAMLSet();\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = iterable[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var value = _step.value;\n      set.items.push(schema.createPair(value, null, ctx));\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return != null) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return set;\n}\n\nvar _default = {\n  identify: function identify(value) {\n    return value instanceof Set;\n  },\n  nodeClass: YAMLSet,\n  default: false,\n  tag: 'tag:yaml.org,2002:set',\n  resolve: parseSet,\n  createNode: createSet\n};\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timestamp = exports.floatTime = exports.intTime = void 0;\n\nvar _stringify = require(\"../../stringify\");\n\nvar parseSexagesimal = function parseSexagesimal(sign, parts) {\n  var n = parts.split(':').reduce(function (n, p) {\n    return n * 60 + Number(p);\n  }, 0);\n  return sign === '-' ? -n : n;\n}; // hhhh:mm:ss.sss\n\n\nvar stringifySexagesimal = function stringifySexagesimal(_ref) {\n  var value = _ref.value;\n  if (isNaN(value) || !isFinite(value)) return (0, _stringify.stringifyNumber)(value);\n  var sign = '';\n\n  if (value < 0) {\n    sign = '-';\n    value = Math.abs(value);\n  }\n\n  var parts = [value % 60]; // seconds, including ms\n\n  if (value < 60) {\n    parts.unshift(0); // at least one : is required\n  } else {\n    value = Math.round((value - parts[0]) / 60);\n    parts.unshift(value % 60); // minutes\n\n    if (value >= 60) {\n      value = Math.round((value - parts[0]) / 60);\n      parts.unshift(value); // hours\n    }\n  }\n\n  return sign + parts.map(function (n) {\n    return n < 10 ? '0' + String(n) : String(n);\n  }).join(':').replace(/000000\\d*$/, '') // % 60 may introduce error\n  ;\n};\n\nvar intTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:int',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nexports.intTime = intTime;\nvar floatTime = {\n  identify: function identify(value) {\n    return typeof value === 'number';\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:float',\n  format: 'TIME',\n  test: /^([-+]?)([0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*)$/,\n  resolve: function resolve(str, sign, parts) {\n    return parseSexagesimal(sign, parts.replace(/_/g, ''));\n  },\n  stringify: stringifySexagesimal\n};\nexports.floatTime = floatTime;\nvar timestamp = {\n  identify: function identify(value) {\n    return value instanceof Date;\n  },\n  default: true,\n  tag: 'tag:yaml.org,2002:timestamp',\n  // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n  // may be omitted altogether, resulting in a date format. In such a case, the time part is\n  // assumed to be 00:00:00Z (start of day, UTC).\n  test: RegExp('^(?:' + '([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n  '(?:(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n  '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n  '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n  ')?' + ')$'),\n  resolve: function resolve(str, year, month, day, hour, minute, second, millisec, tz) {\n    if (millisec) millisec = (millisec + '00').substr(1, 3);\n    var date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec || 0);\n\n    if (tz && tz !== 'Z') {\n      var d = parseSexagesimal(tz[0], tz.slice(1));\n      if (Math.abs(d) < 30) d *= 60;\n      date -= 60000 * d;\n    }\n\n    return new Date(date);\n  },\n  stringify: function stringify(_ref2) {\n    var value = _ref2.value;\n    return value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '');\n  }\n};\nexports.timestamp = timestamp;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toJSON;\n\nfunction toJSON(value, arg, ctx) {\n  if (Array.isArray(value)) return value.map(function (v, i) {\n    return toJSON(v, String(i), ctx);\n  });\n\n  if (value && typeof value.toJSON === 'function') {\n    var anchor = ctx && ctx.anchors && ctx.anchors.find(function (a) {\n      return a.node === value;\n    });\n    if (anchor) ctx.onCreate = function (res) {\n      anchor.res = res;\n      delete ctx.onCreate;\n    };\n    var res = value.toJSON(arg, ctx);\n    if (anchor && ctx.onCreate) ctx.onCreate(res);\n    return res;\n  }\n\n  return value;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.warn = warn;\nexports.warnFileDeprecation = warnFileDeprecation;\nexports.warnOptionDeprecation = warnOptionDeprecation;\n\n/* global global, console */\nfunction warn(warning, type) {\n  if (global && global._YAML_SILENCE_WARNINGS) return;\n\n  var _ref = global && global.process,\n      emitWarning = _ref.emitWarning; // This will throw in Jest if `warning` is an Error instance due to\n  // https://github.com/facebook/jest/issues/2549\n\n\n  if (emitWarning) emitWarning(warning, type);else {\n    // eslint-disable-next-line no-console\n    console.warn(type ? \"\".concat(type, \": \").concat(warning) : warning);\n  }\n}\n\nfunction warnFileDeprecation(filename) {\n  if (global && global._YAML_SILENCE_DEPRECATION_WARNINGS) return;\n  var path = filename.replace(/.*yaml[/\\\\]/i, '').replace(/\\.js$/, '').replace(/\\\\/g, '/');\n  warn(\"The endpoint 'yaml/\".concat(path, \"' will be removed in a future release.\"), 'DeprecationWarning');\n}\n\nvar warned = {};\n\nfunction warnOptionDeprecation(name, alternative) {\n  if (global && global._YAML_SILENCE_DEPRECATION_WARNINGS) return;\n  if (warned[name]) return;\n  warned[name] = true;\n  var msg = \"The option '\".concat(name, \"' will be removed in a future release\");\n  msg += alternative ? \", use '\".concat(alternative, \"' instead.\") : '.';\n  warn(msg, 'DeprecationWarning');\n}","module.exports = require('./dist').default\n","import { TransformToolComponent } from 'src/app/core/transform-tool/transform-tool.component';\r\nimport yaml from 'yaml';\r\nimport { NgModule } from '@angular/core';\r\nimport { CoreModule } from '../../core/core.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport * as readme from './readme.md';\r\n\r\nexport class JsonToYamlComponent extends TransformToolComponent {\r\n    id = 'json-to-yaml';\r\n    action = 'Convert';\r\n    schema = {\r\n        type: 'object',\r\n        properties: {\r\n            input: { type: 'string', title: 'JSON', description: 'JSON to convert' }\r\n        },\r\n        required: ['input']\r\n    };\r\n\r\n    onTransform(transform: any): string {\r\n        const result = yaml.parse(transform.input);\r\n        return yaml.stringify(result);\r\n    }\r\n\r\n    documentation = readme.default;\r\n\r\n}\r\n\r\n@NgModule({\r\n    declarations: [\r\n        JsonToYamlComponent,\r\n    ],\r\n    imports: [\r\n        CoreModule,\r\n        RouterModule.forChild([\r\n            { path: '', component: JsonToYamlComponent }\r\n        ])\r\n    ]\r\n  })\r\nexport class JsonToYamlModule { }","export default \"\\r\\n## What is converting JSON to YAML?\""],"sourceRoot":"webpack:///"}